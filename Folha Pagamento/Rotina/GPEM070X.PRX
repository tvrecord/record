#INCLUDE "PROTHEUS.CH"
#INCLUDE "GPEM070.CH"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³ GPEM070	³ Autor ³ Emerson Rosa de Souza | Data ³ 21.06.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Calculo da Provisao de Ferias			                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ GPEM070(void)											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³												              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso  	 ³ Generico 												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ 		ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.		      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data	³ BOPS ³  Motivo da Alteracao					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Emerson     ³28/01/03³------³ Ajuste na rotina de diferencas Provisao. ³±±
±±³Emerson     ³14/03/03³------³ Inclusao do ponto de entrada GP070BIF.   ³±±
±±³Emerson     ³14/03/03³------³ Ajuste no tratamento de funcionario Demit³±±
±±³            ³        ³      ³ desconsidera-los se Demissao maior Refer.³±±
±±³Emerson     ³02/04/03³016240³ Somente somar dias de ferias Antecipadas ³±±
±±³            ³        ³      ³ em vencidas se dias de vencidas > 0.     ³±±
±±³Emerson     ³19/05/03³ Meta ³ Gerar LOG ocorrencias dos identificadores³±±
±±³Emerson     ³02/06/03³ Meta ³ Efetuar baixa de 13o.Sal. pelo Pagamento ³±±
±±³Emerson     ³21/08/03³------³ Ajuste para calcular o 14o Salario.      ³±±
±±³Emerson     ³25/08/03³ Meta ³ Buscar os identificadores 343/344/345/346³±±
±±³            ³        ³      ³ (medias ferias comissionados/tarefeiros) ³±±
±±³Emerson     ³05/09/03³------³ Ajuste na transferencia entre empresas.  ³±±
±±³Emerson     ³29/09/03³------³ Inclusao do parametro MV_TPBXFER (1 ou 2)³±±
±±³Emerson     ³09/10/03³------³ Nao incluir funcionarios se demitidos em ³±±
±±³            ³        ³      ³ em meses anteriores a data de referencia.³±±
±±³Emerson     ³03/11/03³------³O parametro MV_ABATAFAS passa a tratar os ³±±
±±³            ³        ³------³conteudos [N/S] ou outros tipos definidos.|±±
±±³Emerson     ³18/11/03³------³ Nao incluir funcionarios se demitidos em ³±±
±±³            ³        ³      ³ em meses anteriores e transferido.       ³±±
±±³Emerson     ³15/12/03³------³ Utilizar aTabFer[3] para encontrar total ³±±
±±³            ³        ³      ³ de dias de ferias do periodo.            ³±±
±±³Emerson     ³17/12/03³------³ Ajustar congelamento no mes de vencimento³±±
±±³Emerson     ³18/12/03³------³ Criacao do parametro MV_TCONGAF p/tratar ³±±
±±³            ³        ³      ³ se 1-Congela os afastados por periodo Aq.³±±
±±³            ³        ³      ³ ou 2-Mantem sempre Congelado apos 6 meses³±±
±±³Emerson     ³30/01/04³------³ Inclusao do Ponto de Entrada "GP070COD". ³±±
±±³Emerson     ³23/03/04³------³ Gerar cabecalho de ferias proporcionais  ³±±
±±³            ³        ³      ³ no SRT, quando houver valores no mes ant.³±±
±±³            ³        ³      ³ mas nao houver no mes atual.             ³±±
±±³Emerson     ³26/03/04³------³ Excluir a funcao Max que impedia geracao ³±±
±±³            ³        ³      ³ de valores negativos de 13o. no Mes.     ³±±
±±³Emerson     ³06/04/04³------³ Subtrair dias de vencidas pendentes do   ³±±
±±³            ³        ³      ³ total de vencidas ao gravar no SRF.      ³±±
±±³Emerson     ³28/04/04³      ³Manter cFilAnt atualizada de acordo com a ³±±
±±³            ³        ³      ³filial que esta sendo gravada-Integridade ³±±
±±³Silvia      ³12/05/04³Locali³Localizacao da Provisao - Uruguai         ³±±
±±³Emerson     ³08/06/04³------³ Ajuste no tratamento dos afastamentos p/ ³±±
±±³            ³        ³      ³ o 13o. salario.                          ³±±
±±³Emerson     ³17/08/04³------³ Criacao do Ponto de Entrada "GP070SAL".  ³±±
±±³Emerson     ³17/08/04³------³ Substituir Ponto de Entrada GP070SAL por ³±±
±±³            ³        ³      ³ GP070CHK (deletar registros perdidos).   ³±±
±±³Emerson     ³02/08/04³------³ Passar a tratar o Afastamento tipo "5".  ³±±
±±³Emerson     ³17/09/04³074057³ Checar controle de acessos e restricoes  ³±±
±±³            ³        ³      ³ nos casos de transferencias entre C.Custo³±±
±±³Emerson     ³09/11/04³------³ Criar identificadores p/tratamento PIS.  ³±±
±±³Emerson     ³09/12/04³------³ Subtrair 1a. parcela do 13o. da Base de  ³±± 
±±³            ³        ³      ³ FGTS quando estiver efetuando Bx de 13o. ³±±
±±³Emerson     ³20/01/04³------³ Ajuste na baixa de 13o. para que sejam   ³±±
±±³            ³        ³      ³ utilizadas verbas de extras e adicionais.³±±
±±³Ricardo D.  ³03/02/05³071931³Incluir tratamento para o tipo de contrato³±±
±±³            ³        ³------³na chamada da funcao fGpsVal().           ³±±
±±³Emerson     ³18/02/05³------³Ajuste na baixa de ferias mes/mes seguinte³±±
±±³Ricardo D.  ³21/02/05³077807³ Ajuste do arredondamento da Prov.13o Sal.³±±
±±³Emerson     ³10/05/05³081113³Ajuste na baixa do abono de ferias quando ³±±
±±³            ³        ³------³parametro MV_TPBXFER == 2.				  ³±±
±±³Emerson     ³01/07/05³081702³Gravar dias de ferias pendentes no SRT.	  ³±±
±±³Emerson     ³11/07/05³------³Passar dDtBasFer como referencia.         ³±±
±±³Emerson     ³13/09/05³------³Passar a provisionar funcionario demitido.³±±
±±³Natie       ³18/10/05³087703³Ajuste nome campo rh_dabonpe-fBxaFerProv()³±±
±±³Ricardo D.  ³05/12/05³087866³Incluir tratamento p/o tipo de afastamento³±±
±±³            ³        ³------³W - Mandato Sindical na prov.13o salario. ³±±
±±|Natie       |06/02/06|087541|Inclusao ident.636/637 (baixa)            ³±±
±±³Ricardo D.  ³24/02/06³091504³Incluido tratamento para pesquisar a dife-³±±
±±³            ³        ³------³ca de 13o salario no SRD quando o mes ja  ³±±
±±³            ³        ³------³estiver fechado.                          ³±±
±±³            ³        ³091504³Incluido tratamento para gerar a baixa pro³±±
±±³            ³        ³------³visao de 13o salario somente em dezembro. ³±±
±±³Emerson/    ³04/04/06³092551³Ajuste no tratamento da troca do periodo  ³±±
±±³Ricardo D.  ³        ³------³aquisitivo p/calculo com o mes aberto.    ³±±
±±³            ³        ³------³Ajuste no tratamento dos dias antecipados ³±±
±±³            ³        ³------³de ferias quando MV_TPBXFER == 2. Passamos³±±
±±³            ³        ³------³a trazer somente os dias de ferias gozados³±±
±±³            ³        ³------³no mes processado como antecipacao.       ³±±
±±³            ³        ³------³Ajuste no tratamento de dois ou mais reci ³±±
±±³            ³        ³------³bos de ferias de periodos aquisitivos dife³±±
±±³            ³        ³------³rente. O mesmo p.aquisitivo tem que ser go³±±
±±³            ³        ³------³zado em meses diferentes.                 ³±±
±±³Emerson/    ³09/05/06³081121³Ajuste no tratamento da baixa dos encargos³±±
±±³Ricardo D.  ³        ³------³quando MV_TPBXFER == 2 fazendo com que no ³±±
±±³            ³        ³------³caso em que o abono pecuniario ficar divi-³±±
±±³            ³        ³------³dido em dois meses a reversao dos encargos³±±
±±³            ³        ³------³ocorra proporcionalmente aos dias de abono³±±
±±³            ³        ³------³no mes calculado.                         ³±±
±±³            ³        ³081121³Passamos a demonstrar o valor dos encargos³±±
±±³            ³        ³------³correspondentes aos valores calculados em ³±±
±±³            ³        ³------³cada uma das linhas Atual/Baixa.          ³±±
±±³Emerson/    ³12/05/06³089126³Implementado o parametro MV_TRFAMES com a ³±±
±±³Ricardo D.  ³        ³------³finalidade de determinar a partir de qual ³±±
±±³            ³        ³------³mes serao tratadas as transf.de entrada e ³±±
±±³            ³        ³------³saida sem a transferencia total de saldos ³±±
±±³            ³        ³------³provisionados entre centros de custos.    ³±±
±±³Ricardo D.  ³30/06/06³081121³Ajuste na utilizacao do param. MV_PROVRES ³±±
±±³            ³        ³101616³para tratar somente os demitidos pois esta³±±
±±³            ³        ³------³va gerando zero dias de direito a ferias  ³±±
±±³            ³        ³------³para os funcionarios normais.             ³±±
±±³Ricardo D.  ³03/07/06³102510³Ajuste em fAdicLog p/testar a existencia  ³±±
±±³            ³        ³------³do parametro MV_TRFAMES e data referencia.³±±
±±³Ricardo D.  ³11/08/06³102454³Ajuste na busca da 1a parc 13o sal quando ³±±
±±³            ³        ³------³o mes estiver aberto ou fechado.          ³±±
±±³Priscila R. ³25/08/06³FABSOF³Tratamento para a Contabilizacao por ITEM ³±±
±±³      	   ³--------³------³CONTABIL E CLASSE DE VALOR.				  ³±±
±±³Ricardo D.  ³15/09/06³103469³Ajuste no arredond.da provisao de ferias  ³±±
±±³            ³        ³------³prop.da mesma forma que a provisao de 13o.³±±
±±³Ricardo D.  ³19/09/06³103668³Ajuste no calculo do direito a 13o sal.qdo³±±
±±³            ³        ³------³o parametro MV_PROVRES estiver ligado.    ³±±
±±³            ³        ³xxxxxx³Ajuste na demonstracao da baixa de provi- ³±±
±±³            ³        ³------³sao de ferias e 13o por rescisao.         ³±±
±±³Andreia     ³29/09/06³108863³Ajuste na data limite de exigibilidade da ³±±
±±³            ³        ³------³contribuicao social.                      ³±±
±±³Ricardo D.  ³22/12/06³------³Ajuste no calculo do FGTS da baixa do 13o ³±±
±±³            ³        ³------³salario pois estava abatendo a 1a parcela ³±±
±±³            ³        ³------³independentemente da pergunta "desc.1a.p."³±±
±±³            ³        ³------³preenchida com "N".                       ³±±
±±³Ricardo D.  ³26/12/06³116597³Ajuste na baixa da provisao de ferias com ³±±
±±³            ³        ³------³MV_TPBXFER igual a "2" pois estava descon-³±±
±±³            ³        ³------³tando antecipacao de ferias para ferias a ³±±
±±³            ³        ³------³vencer.                                   ³±±
±±³Ricardo D.  ³03/01/07³116597³Ajuste na baixa da provisao de ferias com ³±±
±±³            ³        ³------³MV_TPBXFER igual a "2" para deixar saldo  ³±±
±±³            ³        ³------³de provisao de ferias vencidas sempre que ³±±
±±³            ³        ³------³houver a quitacao do periodo aquisitivo do³±±
±±³            ³        ³------³funcionario.                              ³±±
±±³Ricardo D.  ³22/01/07³085125³ Implementacao de melhoria de performance ³±±
±±³            ³        ³      ³ nos calculos e relatorios de provisoes.  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
USER Function GPEM070X()
Local aSays      := {}
Local aButtons   := {}
Local nOpca      := 0
Local cTextoProv := ""

Private lAbortPrint := .F.
Private aLogFile 	:= {}
Private aLogTitle 	:= {}
Private aIdProvis   := {}
Private lFechouMes
Private lTemItem    := SRA->( FieldPos( "RA_ITEM" ) # 0 )
Private lTemClVl    := SRA->( FieldPos( "RA_CLVL" ) # 0 )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define o titulo do LOG de Ocorrencias                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aLogTitle := { STR0011 } //"PROVISAO DE FERIAS/13o SALARIO"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Converte os valores do arquivo SRF para o SRT			   |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( "SRT" )
dbGoTop()
If Eof()
	dbSelectArea( "SRF" )
	dbGoTop()
	If !Eof()
		GPEProvisao(STR0001,,,,5) // "Importacao do saldo anterior"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Apresenta Tela com Log de erros								 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		fMakeLog( aLogFile, aLogTitle,, .T. )
		If lAbortPrint
			Return
		EndIf
	EndIf
EndIf

cCadastro := OemToAnsi(STR0002) // "Calculo das Provisoes de Ferias e 13§ Salario"

Pergunte("GPM070    ",.F.)
Aadd(aSays,OemToAnsi(STR0003)) // "O calculo podera ser efetuado antes ou depois do fechamento mensal. Se for"
Aadd(aSays,OemToAnsi(STR0004)) // "efetuado antes, a baixa para a provisao de ferias sera feita com  base nos"
Aadd(aSays,OemToAnsi(STR0005)) // "lancamentos do movimento mensal (SRC), caso contrario, serao utilizados os"
Aadd(aSays,OemToAnsi(STR0006)) // "lancamentos do acumulado anual (SRD).
Aadd(aButtons, { 5,.T.,{|| Pergunte("GPM070    ",.T. ) } } )
Aadd(aButtons, { 1,.T.,{|o| nOpca := 1,If(GPM070OK(),FechaBatch(),nOpca:=0) }} )
Aadd(aButtons, { 2,.T.,{|o| FechaBatch() }} )
FormBatch( cCadastro, aSays, aButtons )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carregando variaveis mv_par?? para Variaveis do Sistema.	 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lFerias     := (mv_par01==1.Or.mv_par01==3)		//  Tipo de Provisao 1 - Ferias 2 - 13§  3 - Ambas
l13oSal     := Iif(cPaisLoc <> "CHI",(mv_par01==2.Or.mv_par01==3),.F.)		//  Tipo de Provisao 1 - Ferias 2 - 13§  3 - Ambas
dDataRef   	:= mv_par02							    //  Data de Referencia para Calculo
nOrdem  	:= mv_par03								//  Ordem de Calculo 1 - Matricula  2 - Centro de Custo
cFilDe	   	:= mv_par04								//	Filial De
cFilAte    	:= mv_par05								//	Filial Ate
cCcDe	   	:= mv_par06								//	Centro de Custo De
cCcAte	   	:= mv_par07								//	Centro de Custo Ate
cMatDe	   	:= mv_par08								//	Matricula De
cMatAte     := mv_par09								//	Matricula Ate
nCorrecao   := (mv_par10 / 100)					    //	Indice de Correcao
lDesc1parc  := If(mv_par11 == 1,.T.,.F.)          //  Desc. 1a Parc. 13§
lIncluiDem  := If(mv_par12 == 1 .Or. lFerias,.T.,.F.) //  Incluir Demit. 13§
n14Salario  := (mv_par13 / 100)                    //  Indice de 14§ Sal.
cCateg	    := mv_par14								//	Categorias

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Define se o texto da provisao sera de ferias, 13§ ou ambos	 |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cMesAnoProv := StrZero(Month(dDataRef),2)+StrZero(Year(dDataRef),4)
cTextoProv  := If(lFerias .And. l13oSal, STR0011, If(lFerias, STR0009, STR0010)) + " -  " + Transform(cMesAnoProv,"@R 99/9999") //"PROVISŽO DE FERIAS "##"PROVISŽO DE 13o SALARIO"##"PROVISŽO DE FERIAS/13o SALARIO"

If nOpca == 1
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se esta calculando provisao com mes fechado.      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( lFechouMes := ( GetMv( "MV_FOLMES",,"") > MesAno(dDataRef) ) )
		 cMens := OemToAnsi(STR0007)+Transform(cMesAnoProv,"@R 99/9999")+"."+chr(13)  //"Calculo da provisao ja foi efetuado no mes "
	 	 cMens += OemToAnsi(STR0008)+chr(13)      							     		//"Certifique-se de que realmente e necessario continuar."
		 If !MsgYesNo(cMens,OemToAnsi(STR0012))   								    	//"ATENCAO"
		    Return
		 Endif
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Carrega variaveis privates comuns a GPEA070,GPER070 e GPEM070|
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	GPEProvisao(cTextoProv,,,,4)
EndIf

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³ GP070Proc³ Autor ³ R.H.					³ Data ³ 26.06.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Provisao de Ferias										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ GPM070Processa()										      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	 	 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
STATIC Function GPM070Processa()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis Locais - PROVISAO DE FERIAS 						 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cCongAci		:= GetMv( "MV_PFCALAC" ) // Indica se congela por Afast. Acidente 
Local cCongDoe		:= GetMv( "MV_PFCALAD" ) // Indica se congela por Afast. Doenca

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis Locais - PROVISAO DE 13§ SALARIO					 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cAbatAci	    := GetMv( "MV_PDCALAC" )  // Indica se abate avos por Afast. Acidente
Local cAbatDoe      := GetMv( "MV_PDCALAD" )  // Indica se abate avos por Afast. Doenca
Local cArqBxa13,cFilBxa13,cMatBxa13,cDatBxa13,cPdBxa13,cValBxa13

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis Locais - PROVISAO DE FERIAS E 13§ SALARIO	  |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aAreaSRA     := SRA->(GetArea())
Local nTipoMovMes  := 0
Local nPercFgC     := 0
Local aCabProv     := {}
Local cTPRDbf,cTPRNtx
Local cArqDbf,cArqNtx
Local nPosBxa,cNomeCpo,cArqBxaPr,cFilBxaPr,cMatBxaPr,cDatBxaPr,cPdBxaPr,cSeqBxaPr,cValBxaPr,cHrsBxaPr
Local lTemCab		:= .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis Private - PROVISAO DE FERIAS 						 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private aFerVenc     := Array(_Linhas,_Colunas)
Private aFerProp     := Array(_Linhas,_Colunas)
Private aRecVenc     := Array(_Linhas,_Colunas)
Private aRecProp     := Array(_Linhas,_Colunas)
Private aTabFer      := {} 	// Tabela para calculo dos dias de ferias
Private nV_DFalFer   := 0
Private nP_DFalFer   := 0
Private nTFaltaV   	 := 0
Private nTFaltaP	 := 0
Private nDFerAnt     := 0
Private nPerc1T      := 0
Private cCodFer	  	 := cCodAdFer   := cCodUmTer  := cCodFerMs := ""
Private cCodAdicMs   := cCodUmTerMs := cCodAbono  := cCodAboMs := ""
Private cCodSalV     := cCodSalVMs := ""
Private dDtBasFer    := CTOD("")
Private cTAfaFer     := GetMv( "MV_TAFAFER" ) 			  //-- Trata Perda de Periodo Para Afastados
Private cTpBxFer     := GetMv( "MV_TPBXFER",, "1" )      //-- Baixa Ferias Total ou Mes e Mes Seguinte
Private cTpCongAf    := GetMv( "MV_TCONGAF",, "1" )      //-- Trata congelamento por periodo Aquisitivo ou Por afastamento
Private cTrfAMES     := ( GetMv( "MV_TRFAMES",, Space(6) ) ) //-- Ano/Mes para inicio das demonstracoes de entrada e saida de transferencias no conceito 1 (transfere saldo origem p/ destino)
Private lTrfAMES     := ( !Empty(cTrfAMES) .And. MesAno( dDataRef ) >= cTrfAMES )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis Private - PROVISAO DE 13§ SALARIO					 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private a13Salar     := Array(_Linhas,_Colunas)
Private a14Salar     := Array(_Linhas,_Colunas)
Private aRec13Sl     := Array(_Linhas,_Colunas)
Private aRec14Sl     := Array(_Linhas,_Colunas)
Private cAbatAfas    := GetMv( "MV_ABATAFA" )  // Indica se abate avos por Afast. no 13§ Salario
Private cPgSalMat    := GetMv( "MV_PGSALMA" )  // Abater Afastamento Auxilio Maternidade no 13§
Private lDif13Neg    := ( GetMv( "MV_DF13NEG",,"S")=="S" ) // Gerar diferenca de 13o. negativa S/N
Private cCod13o	  	 := cCodAd13o := ""
Private lBx13Pgt     := .F.								    //-- Baixa 13o Salario pelo pagamento

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis Private - PROVISAO DE FERIAS E 13§ SALARIO  |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private nSalario	 := nSalMes  := nSalDia     := nSalHora  := 0
Private nPercEmp	 := nPercTer := nPercAcTrab := nPercFgts := 0
Private nPercPis	 := 0
Private aInfo	     := {}
Private aVerba       := {}
Private aTransf      := {}
Private aGPSPer      := {}
Private lDemitido    := .F.
Private lTransfSai   := .F.
Private lSalInc    	 := .F.
Private lTrataTrf    := .F.
Private c__Roteiro   := "   "
Private cPerFeAc     := GetMv( "MV_FERPAC",,"N" )  			//-- Usada na Funcao FCalcFimAq-(GpexMed).
Private lProvResc    := ( GetMv( "MV_PROVRES",,"N" ) == "S" ) //-- Indica se devera provisionar no mes da rescisao
Private cAfastProv   := "O*P*Q*V*W*X*8" 				    //-- Afastamentos tratados pela provisao
Private aInssEmp[23][2]
Private cCalcSalInc  := SuperGetMv("MV_CSALINC",,Space(6))//-- Ano/Mes para inicio da busca dos salarios e adicionais no acumulado, sem a utilizacao da fSalInc.
Private lCalcSalInc  := ( !Empty(cCalcSalInc) .And. MesAno( dDataRef ) < cCalcSalInc )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis Para Funcao fSalInc    						     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private aCodFol  	:= {}
Private aRoteiro 	:= {}
Private nAdtServ 	:= nPeric	:= nInsal := 0.00	  // Valores dos Adicionais
Private cCodAdt  	:= cCodIns  := Space(3) 		  // Codigos que Foram Gerados
Private nSalMin  	:= 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas na funcao fMonta_TPR()                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private cNomeDe  := Replic("A", 30)
Private cNomeAte := Replic("Z", 30)

If cPaisLoc == "URU"
	Private lProvUru  := .T.
	Private cSemana   := "01"
   Private nCSocial := 0
   Private nAliqBse := 0
   Private nBseFixo := 0
   Private cApolice  := " "
  	Private lPagFerSe := GetNewPar('MV_PGFERSE',.T.) // O pagamento das Ferias deve ser separado da Folha de Pag.
	Private nBPSFunc 	:= 0
	Private nFRLFunc 	:= 0
	Private nDisseFunc  := 0
	Private nSomaPerc := 0
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para baixa de ferias e de rescisao nas|
//³ provisoes de ferias e de 13o Salario (SRC ou SRD).         |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cArqBxaPr := "SRC"
cNomeCpo  := "SRC->RC_"
cDatBxaPr := &( "{ || MesAno(dDataRef) }" )
If lFechouMes
	cNomeCpo  := "SRD->RD_"
	cArqBxaPr := "SRD"
	cDatBxaPr := &( "{ || " + cNomeCpo + "DATARQ }" )
EndIf
cFilBxaPr := &( "{ || " + cNomeCpo + "FILIAL }" )
cMatBxaPr := &( "{ || " + cNomeCpo + "MAT }"    )
cPdBxaPr  := &( "{ || " + cNomeCpo + "PD }"     )
cSeqBxaPr := &( "{ || " + cNomeCpo + "SEQ }"    )
cValBxaPr := &( "{ || " + cNomeCpo + "VALOR }"  )
cHrsBxaPr := &( "{ || " + cNomeCpo + "HORAS }"  )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para baixa de 13o Salario (SRI ou SRD)|
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If l13oSal
	cArqBxa13 := "SRI"
	cNomeCpo  := "SRI->RI_"
	cDatBxa13 := &( "{ || MesAno(SRI->RI_DATA) }" )
	If lFechouMes
		cNomeCpo  := "SRD->RD_"
		cArqBxa13 := "SRD"
		cDatBxa13 := &( "{ || " + cNomeCpo + "DATARQ }" )
	EndIf
	cFilBxa13 := &( "{ || " + cNomeCpo + "FILIAL }" )
	cMatBxa13 := &( "{ || " + cNomeCpo + "MAT }"    )
	cPdBxa13  := &( "{ || " + cNomeCpo + "PD }"     )
	cValBxa13 := &( "{ || " + cNomeCpo + "VALOR }"  )
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Busca o percentual da contribuicao do FGTS (apos 01/10/2001³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nPercFgC := 0
If MesAno(dDataRef) >= "200110" .And. MesAno(dDataRef) <= "200612"
	nPercFgC := GetMv("MV_PERCFGC",, 0) / 100  //Contribuicao do FGTS
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Cria Arquivo de Medias Temporario						   |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Cria_TRP(@cArqDbf,@cArqNtx)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta o arquivo temporario "TPR" a partir do SRA e SRE     |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
fMonta_TPR(@cTPRDbf,@cTPRNtx,nOrdem,dDataRef,@lSalInc,@lTrataTrf,@aTransf,lIncluiDem)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Garante Ordem 1 Para Busca dos Lancamentos no Movimento	   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( "SRC" )
dbSetOrder(1)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Garante Ordem 1 Para Busca dos Funcionarios				   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( "SRA" )
dbSetOrder(1)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posiciona no inicio do arquivo						  	   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( "TPR" )
dbGoTop()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega regua de processamento							   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ProcRegua(RecCount())

cFilialAnt := "!!"
cCcAnt	   := "!!!!!!!!!"
While !Eof()

	If lAbortPrint
		Exit
	Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Apresenta o Funcionario que esta sendo calculado			 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IncProc(TPR->PR_FILIAL+" - "+TPR->PR_MAT+" - "+TPR->PR_NOME)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Garante o Posicionamento do Funcionario no SRA				 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea( "SRA" )
	dbSeek( TPR->PR_FILIAL + TPR->PR_MAT )
	dbSelectArea( "TPR" )
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Quebra filial para buscar as tabelas						 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If TPR->PR_FILIAL # cFilialAnt
		If !Fp_CodFol(@aCodFol,TPR->PR_FILIAL)		 .Or.;
		   !fInfo(@aInfo,TPR->PR_FILIAL)			 .Or.;
           !fInssEmp(TPR->PR_FILIAL,@aInssEmp,.F.)
			Exit
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Resgata os percentuais de terceiros armazenados no parametro 15			³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
		fGPSVal(TPR->PR_FILIAL,"999999",@aGPSPer,"1")

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Limpa array de identificadores utilizados na cadastrados	 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aIdProvis := {}

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Carrega Codigos de Ferias/13o Salario Para Baixa da Provisao ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		fBusCodBx()

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Carrega os identificadores da Provisao						 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		fIdentProv(@aVerba,aCodFol)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica a existencia dos identificadores da provisao		 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		fChkIdent(aVerba,_FerVenc,{_Atual,_BxFer,_BxTrf},.T.)
		fChkIdent(aVerba,_13Salar,{_Atual,_BxTrf},.T.)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica a existencia dos identificadores de baixa de 13o.	 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lBx13Pgt := fChkIdent(aVerba,_13Salar,{_Bx13o},.T.)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica a existencia dos identificadores de correcao        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nCorrecao > 0
			fChkIdent(aVerba,_FerVenc,{_Corre},.T.)
			fChkIdent(aVerba,_13Salar,{_Corre},.T.)
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica a existencia dos identificadores da provisao 14 Sal ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If n14Salario > 0
			fChkIdent(aVerba,_14Salar,{_Atual},.T.)
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Busca percentual do identificador de 1/3 de ferias           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea( "TPR" )
		cFilialAnt := TPR->PR_FILIAL
		nPerc1T := PosSrv(aCodFol[77,1],TPR->PR_FILIAL,"RV_PERC")

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Busca o percentual do identificador do PIS 								³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
		nPercPis := PosSrv( aCodFol[229,1],TPR->PR_FILIAL,"RV_PERC") / 100

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Se gerou Ocorrencias aborta para apresentacao do LOG		 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If fAdicLog(aIdProvis,TPR->PR_FILIAL)
			Exit
		EndIf

	   	If cPaisLoc == "URU"
	   		If !Loc_Bse(@nCSocial, @nBseFixo,,MesAno(dDataRef))   	
				Exit
			Endif	     
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Carregando Variaveis com as Aliquotas do Imposto BPS	     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !LOC_BPS(,@nBPSFunc,,MesAno(dDataRef))
				Return
			EndIf
		   	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Carregando Variaveis com as Aliquotas do Imposto FRL	     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !LOC_FRL(,@nFRLFunc,MesAno(dDataRef))
				Return
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Carregando Variaveis com as Aliquotas do Imposto DISSE	     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !LOC_DISSE(,,@nDisseFunc,MesAno(dDataRef))
				Return
			EndIf
			nSomaPerc := (nBpsFunc+nFrlFunc+nDisseFunc) / 100
	   	Endif
	Endif
	If cPaisLoc == "URU"
		DbSelectArea("CTT")
		If dbSeek(SRA->RA_FILIAL+SRA->RA_CC)
			cApolice := CTT->CTT_POLIZA
		Endif	
		If !Empty(cApolice)	
			If !Loc_Bse2(cApolice,@nAliqBse)
				Exit
			Endif
		Endif
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//| Carrega tabela para apuracao dos dias de ferias - aTabFer    |
	//| 1-Meses Periodo    2-Nro Periodos   3-Dias do Mes    4-Fator |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	fTab_Fer(@aTabFer)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Carrega variaveis para calculo dos encargos           		 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	fEncargEmp(@nPercEmp, @nPercTer, @nPercAcTrab, @nPercFgts, nPercFgC)

	nDFerAnt  := 0								  // Dias de ferias antecipadas
	dDtBasFer := TPR->PR_ADMISSA			      // Data Base Ferias Funcionario
	dbSelectArea( "SRF" )
	If !dbSeek( TPR->PR_FILIAL + TPR->PR_MAT )	  // Se nao achou Registro
		RecLock("SRF",.T.)                       // Gera automatico
		SRF->RF_FILIAL := TPR->PR_FILIAL
		SRF->RF_MAT    := TPR->PR_MAT
		SRF->RF_DATABAS:= TPR->PR_ADMISSA
		MsUnlock()
	Else
		dDtBasFer := If(SRF->RF_DATABAS # CtoD(""),SRF->RF_DATABAS,dDtBasFer)
		nDFerAnt  := SRF->RF_DFERANT
	Endif
	dbSelectArea( "TPR" )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica o tipo de movimentacao do funcionario 				 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nTipoMovMes := TPR->PR_TIPMOVI
	lTransfSai  := ( nTipoMovMes == _Trfe_Sai )
	lDemitido   := ( nTipoMovMes == _Demitido )
	
	#IFDEF TOP
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ 1§ ELEMENTO DO ARRAY - A N T E R I O R 			 			 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		fQryDetSRT(aVerba,aTransf,dDataRef,lTrataTrf,.F.,lFerias,l13oSal)
	#ELSE
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ 1§ ELEMENTO DO ARRAY - A N T E R I O R 			 			 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lFerias
			fBusDetSRT(@aFerVenc,@aRecVenc,aVerba,aTransf,dDataRef,_FerVenc,lTrataTrf,.F.)
			fBusDetSRT(@aFerProp,@aRecProp,aVerba,aTransf,dDataRef,_FerProp,lTrataTrf,.F.)
		EndIf	
		If l13oSal
			fBusDetSRT(@a13Salar,@aRec13Sl,aVerba,aTransf,dDataRef,_13Salar,lTrataTrf,.F.)
			fBusDetSRT(@a14Salar,@aRec14Sl,aVerba,aTransf,dDataRef,_14Salar,lTrataTrf,.F.)
		EndIf
	#ENDIF
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ 2§ ELEMENTO DO ARRAY - C O R R E C A O 						 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nCorrecao > 0
		If lFerias
			fGravArray(aFerVenc, _Corre, _Anter, nCorrecao, { _Dias } )
			fGravArray(aFerProp, _Corre, _Anter, nCorrecao, { _Dias } )
		EndIf
		If l13oSal
			fGravArray(a13Salar, _Corre, _Anter, nCorrecao, { _Avos,_1Par } )
			If n14Salario > 0
				fGravArray(a14Salar, _Corre, _Anter, nCorrecao, { _Avos,_1Par } )
			EndIf
		Endif
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Zera variaveis para uma nova busca de salario e ferias		 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    nV_DFalFer := nP_DFalFer := nTFaltaV := nTFaltaP := 0
    nSalario   := nSalMes    := nSalDia  := nSalHora := 0
    nAdtServ   := nPeric     := nInsal   := 0.00

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Se mes estiver fechado, calcular com valores do SRT	         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lFechouMes .And. fBusCabSRT(dDataRef,@aCabProv)
		dDtBasFer  := aCabProv[_DBsProv]
		nDFerAnt   := aCabProv[_DFerAnt]
	    nSalario   := aCabProv[_SalProv]
	    nSalMes    := aCabProv[_SalProv]
	    nSalDia    := aCabProv[_SalProv] / If(cPaisLoc=="URU" .And. SRA->RA_CATFUNC=="H",25,30)
	    nSalHora   := aCabProv[_SalProv] / TPR->PR_HRSMES
	    lTemCab	:= .T.
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ 6§ ELEMENTO DO ARRAY - B A I X A  D E  F E R I A S / 1 3 o   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !lDemitido .And. !lTransfSai
		If lFerias
			fBxaFerProv(@dDtBasFer,@nDFerAnt,cArqBxaPr,cFilBxaPr,cMatBxaPr,cDatBxaPr,cPdBxaPr,cSeqBxaPr,cValBxaPr,cHrsBxaPr,lTemCab)
		EndIf
		If l13oSal .And. lBx13Pgt .And. Month(dDataRef) == 12
			fBxa13oProv(cArqBxa13,cFilBxa13,cMatBxa13,cDatBxa13,cPdBxa13,cValBxa13)
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ 4§ ELEMENTO DO ARRAY - A T U A L 							 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lTransfSai
		If nSalMes == 0
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Calcula Salario Mes , Dia , Hora do Funcionario              |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			fSalario(@nSalario,@nSalHora,@nSalDia,@nSalMes,"A")
		EndIf	
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Calcula Salario Incorporado Mes , Dia , Hora do Funcionario  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !lCalcSalInc
			#IFDEF TOP
				cAliasPROC	:= "QPROC"
				fQrySRD( TPR->PR_FILIAL , TPR->PR_MAT , MesAno(dDataRef) )
				//-- Busca o salario mes, adic.tpo.servico, insalubridade e periculosidade
				While !(cAliasPROC)->(eof())
					If lFechouMes
						If !lTemCab .And. (cAliasPROC)->RD_PD == aCodFol[318,1]
							nSalMes += (cAliasPROC)->RD_VALOR
						ElseIf (cAliasPROC)->RD_PD == aCodFol[671,1]
							nAdtServ += (cAliasPROC)->RD_VALOR
						ElseIf (cAliasPROC)->RD_PD == aCodFol[672,1]
							nInsal += (cAliasPROC)->RD_VALOR
						ElseIf (cAliasPROC)->RD_PD == aCodFol[673,1]
							nPeric += (cAliasPROC)->RD_VALOR
						Endif
					Else
						If !lTemCab .And. (cAliasPROC)->RC_PD == aCodFol[318,1]
							nSalMes += (cAliasPROC)->RC_VALOR
						ElseIf (cAliasPROC)->RC_PD == aCodFol[671,1]
							nAdtServ += (cAliasPROC)->RC_VALOR
						ElseIf (cAliasPROC)->RC_PD == aCodFol[672,1]
							nInsal += (cAliasPROC)->RC_VALOR
						ElseIf (cAliasPROC)->RC_PD == aCodFol[673,1]
							nPeric += (cAliasPROC)->RC_VALOR
						Endif
					Endif
					(cAliasPROC)->(dbskip())
				Enddo
				(cAliasPROC)->(dbCloseArea())
			#ELSE
				//-- Valor do Salario Mensal
				If lFechouMes
					If !lTemCab .And. SRD->(dbSeek( TPR->PR_FILIAL + TPR->PR_MAT + MesAno(dDataRef) + aCodFol[318,1] ))
						While !SRD->(eof()) .And.	TPR->PR_FILIAL+TPR->PR_MAT+MesAno(dDataRef)+aCodFol[318,1] == ;
													SRD->RD_FILIAL+SRD->RD_MAT+SRD->RD_DATARQ+SRD->RD_PD
							nSalMes += SRD->RD_VALOR
							SRD->(dbskip())
						Enddo
					Endif
					//-- Valor do Adicional de Tempo de Servico
					If !Empty(aCodFol[671,1])
						If SRD->(dbSeek( TPR->PR_FILIAL + TPR->PR_MAT + MesAno(dDataRef) + aCodFol[671,1] ))
							While !SRD->(eof()) .And.	TPR->PR_FILIAL+TPR->PR_MAT+MesAno(dDataRef)+aCodFol[671,1] == ;
														SRD->RD_FILIAL+SRD->RD_MAT+SRD->RD_DATARQ+SRD->RD_PD
								nAdtServ += SRD->RD_VALOR
								SRD->(dbskip())
							Enddo
						Endif
					Endif
					//-- Valor do Adicional de Insalubridade
					If !Empty(aCodFol[672,1])
						If SRD->(dbSeek( TPR->PR_FILIAL + TPR->PR_MAT + MesAno(dDataRef) + aCodFol[672,1] ))
							While !SRD->(eof()) .And.	TPR->PR_FILIAL+TPR->PR_MAT+MesAno(dDataRef)+aCodFol[672,1] == ;
														SRD->RD_FILIAL+SRD->RD_MAT+SRD->RD_DATARQ+SRD->RD_PD
								nInsal += SRD->RD_VALOR
								SRD->(dbskip())
							Enddo
						Endif
					Endif
					//-- Valor do Adicional de Periculosidade
					If !Empty(aCodFol[673,1])
						If SRD->(dbSeek( TPR->PR_FILIAL + TPR->PR_MAT + MesAno(dDataRef) + aCodFol[673,1] ))
							While !SRD->(eof()) .And.	TPR->PR_FILIAL+TPR->PR_MAT+MesAno(dDataRef)+aCodFol[673,1] == ;
														SRD->RD_FILIAL+SRD->RD_MAT+SRD->RD_DATARQ+SRD->RD_PD
								nPeric += SRD->RD_VALOR
								SRD->(dbskip())
							Enddo
						Endif
					Endif
				Else
					If !lTemCab .And. SRC->(dbSeek( TPR->PR_FILIAL + TPR->PR_MAT + aCodFol[318,1] ))
						While !SRC->(eof()) .And.	TPR->PR_FILIAL+TPR->PR_MAT+aCodFol[318,1] == ;
													SRC->RC_FILIAL+SRC->RC_MAT+SRC->RC_PD
							nSalMes += SRC->RC_VALOR
							SRC->(dbskip())
						Enddo
					Endif
					//-- Valor do Adicional de Tempo de Servico
					If !Empty(aCodFol[671,1])
						If SRC->(dbSeek( TPR->PR_FILIAL + TPR->PR_MAT + aCodFol[671,1] ))
							While !SRC->(eof()) .And.	TPR->PR_FILIAL+TPR->PR_MAT+aCodFol[671,1] == ;
														SRC->RC_FILIAL+SRC->RC_MAT+SRC->RC_PD
								nAdtServ += SRC->RC_VALOR
								SRC->(dbskip())
							Enddo
						Endif
					Endif
					//-- Valor do Adicional de Insalubridade
					If !Empty(aCodFol[672,1])
						If SRC->(dbSeek( TPR->PR_FILIAL + TPR->PR_MAT + aCodFol[672,1] ))
							While !SRC->(eof()) .And.	TPR->PR_FILIAL+TPR->PR_MAT+aCodFol[672,1] == ;
														SRC->RC_FILIAL+SRC->RC_MAT+SRC->RC_PD
								nInsal += SRC->RC_VALOR
								SRC->(dbskip())
							Enddo
						Endif
					Endif
					//-- Valor do Adicional de Periculosidade
					If !Empty(aCodFol[673,1])
						If SRC->(dbSeek( TPR->PR_FILIAL + TPR->PR_MAT + aCodFol[673,1] ))
							While !SRC->(eof()) .And.	TPR->PR_FILIAL+TPR->PR_MAT+aCodFol[673,1] == ;
														SRC->RC_FILIAL+SRC->RC_MAT+SRC->RC_PD
								nPeric += SRC->RC_VALOR
								SRC->(dbskip())
							Enddo
						Endif
					Endif
				Endif
			#ENDIF
			If !lTemCab
				nSalario:= nSalMes
				nSalDia	:= nSalMes / If(cPaisLoc=="URU" .And. SRA->RA_CATFUNC=="H",25,30)
				nSalHora:= nSalMes / TPR->PR_HRSMES
			Endif
			//-- Carrega os codigos dos adicionais de tempo de servico que serao utilizados
			//-- nos calculos de provisoes de ferias e 13o salario.
			fCarAdics()
		Endif

		If nSalMes == 0 .Or. !lTemCab
			If lCalcSalInc .Or. nSalMes == 0
				fSalInc(@nSalario,@nSalMes,@nSalHora,@nSalDia,.T.)
			Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//| Utiliza o Sal.Incorp. do Cadastro							 |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lSalInc .And. TPR->PR_SALINCO > 0
				nSalMes  := TPR->PR_SALINCO
				nSalDia  := TPR->PR_SALINCO / If(cPaisLoc=="URU" .And. SRA->RA_CATFUNC=="H",25,30)
				nSalHora := TPR->PR_SALINCO / TPR->PR_HRSMES
			Endif
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Chama funcao para carregar adicionais - AdtServ/Peric/Insal  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lCalcSalInc
				fSalInc(,,,,.T.)
			Endif
    	EndIf
    	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Carregando Arquivo TRP com Monta Media						 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( !lDemitido .Or. lProvResc )
			dbSelectArea("TRP")
			Zap
			GpexMed(dDtBasFer,,dDataRef,,dDataRef,nSalHora,nSalMin,aCodFol,.T.,(!lFechouMes))
		Endif

		dbSelectArea( "TPR" )

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Calcula ferias vencidas e proporcionais						 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lFerias
			fProvFer(cCongAci,cCongDoe,@nTipoMovMes,@dDtBasFer)
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Calcula o 13§ Salario 										 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If l13oSal .And. ( !lDemitido .Or. lProvResc )
			fProv13o(cAbatAci,cAbatDoe,@nTipoMovMes)
		EndIf

	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ 5§ ELEMENTO DO ARRAY - B A I X A  T R A N S F E R E N C I A	 |
	//³ 7§ ELEMENTO DO ARRAY - B A I X A  R E S C I S A O			 |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lTransfSai .Or. lDemitido
		If lFerias
			If lTransfSai
				fGravArray(@aFerVenc, _BxTrf, _Anter, 1, {} )
				fGravArray(@aFerProp, _BxTrf, _Anter, 1, {} )
			Else
				fGravArray(@aFerVenc, _BxRes, If(lProvResc,_Atual,_Anter), 1, {} )
				fGravArray(@aFerProp, _BxRes, If(lProvResc,_Atual,_Anter), 1, {} )
			EndIf
		EndIf
		If l13oSal
			If lTransfSai
				fGravArray(@a13Salar, _BxTrf, _Anter, 1, {} )
				fGravArray(@a14Salar, _BxTrf, _Anter, 1, {} )
			Else
				fGravArray(@a13Salar, _BxRes, If(lProvResc,_Atual,_Anter), 1, {} )
				fGravArray(@a14Salar, _BxRes, If(lProvResc,_Atual,_Anter), 1, {} )
			EndIf
		EndIf

	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza o arquivo de cabecalho - SRF                     	 |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( !lDemitido .Or. lProvResc ) .And. !lTransfSai
		dbSelectArea( "SRF" )
		RecLock("SRF",.F.)
		If lFerias
			nDiasFv := aFerVenc[_Atual,_Dias] + nV_DFalFer
			nDiasFv += If(aFerVenc[_Atual,_Dias] > 0, nDFerAnt, 0)
			nDiasFv -= SRF->RF_DVENPEN
			If nDiasFv = 0 .And. nDFerAnt > 0
				nDiasFv := nDFerAnt * (-1)
			Endif
			aFerVenc[_Atual,_Dias] := If (nDiasFv < 0 , 0 , nDiasFv) + SRF->RF_DVENPEN
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Soma os dias de faltas aos dias de proporcionais.        	 |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aFerProp[_Atual,_Dias] += nP_DFalFer
			SRF->RF_DFERVAT := If(nDiasFv < 0,0,nDiasFv)   // Dias de Ferias Vencidas
			SRF->RF_DFALVAT := If(nDiasFv # 0,nTFaltaV,0)  // Dias de Faltas Vencidas
			SRF->RF_DFERAAT := aFerProp[_Atual,_Dias]		 // Dias de Ferias Proporcionais
			SRF->RF_DFALAAT := nTFaltaP				     // Dias de Faltas Proporcionais
		EndIf
		If l13oSal
			SRF->RF_PAR13AT := a13Salar[_Atual,_1Par]      // 1¦ Parcela do 13§ Salario
		EndIf
		MsUnlock()
    EndIf
    
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava as ferias vencidas e proporcinais no arquivo detalhe.  |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lFerias
		fGeraSRT(@aFerVenc,aRecVenc,aVerba,dDataRef,nTipoMovMes,nSalMes,dDtBasFer,nDFerAnt,_FerVenc)
		fGeraSRT(@aFerProp,aRecProp,aVerba,dDataRef,nTipoMovMes,nSalMes,dDtBasFer,nDFerAnt,_FerProp)
	EndIf
                                              
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava o 13§ e 14§ Salario no arquivo detalhe.		         |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If l13oSal
		fGeraSRT(@a13Salar,aRec13Sl,aVerba,dDataRef,nTipoMovMes,nSalMes,dDtBasFer,nDFerAnt,_13Salar)
		fGeraSRT(@a14Salar,aRec14Sl,aVerba,dDataRef,nTipoMovMes,nSalMes,dDtBasFer,nDFerAnt,_14Salar)
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Se for recalculo, deletar o registro de "OK", indicando que  |
	//| devera ser gerado um novo SRZ no momento da contabilizacao.  |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	fDelRegSRZ(3,"1",dDataRef)

	dbSelectArea( "TPR" )
	dbSkip()
Enddo

TRP->(dbCloseArea())
fErase(cArqNtx + OrdBagExt())
fErase(cArqDbf + ".DBF")

TPR->(dbCloseArea())
fErase(cTPRNtx + OrdBagExt())
fErase(cTPRDbf + ".DBF")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Apresenta Tela com Log de erros								 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
fMakeLog( aLogFile, aLogTitle, "GPM070", .T. )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Retorna area original do cadastro de funcionarios		     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RestArea(aAreaSRA)

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³fProvFer  ³ Autor ³ Emerson Rosa de Souza	³ Data ³ 26.06.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Calcula provisao de ferias vencidas						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fProvFer(cCongAci,cCongDoe,nTipoMovMes,dDtBasFer) 	      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	 	 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fProvFer(cCongAci,cCongDoe,nTipoMovMes,dDtBasFer)
Local nAdtDia     := nInsDia   := nPerDia   := nNroFaltas := nPeriVenc := 0
Local nTDiasAfa   := nV_TotFer := 0
Local lCongelaFer := .F.
Local lDiasAfAcum := ( cTpCongAf == "2" )
Local aMediaHrs   := {}           
Local nMediaOut   := 0
Local cCodDias	  := 0
Local nRemVar	  := 0
Local nDiasNDesc  := 0
Local nDias       := 0
Local nTotVar     := 0
Local k			  := 0
Local nX 		  := 0
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas nos pontos de entrada				     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private nV_DSaldo := nV_Valor  := nV_Adic := nV_UmTer := nV_Inss := nV_Fgts := nV_Pis := 0
Private nP_DSaldo := nP_Valor  := nP_Adic := nP_UmTer := nP_Inss := nP_Fgts := nP_Pis := 0
Private nDiasProp := nDiasVenc := 0
Private nV_CSocial := nV_Bse := nP_CSocial := nP_Bse	:= 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calculo dos Dias de Ferias 								     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Calc_Fer(@dDtBasFer,If(lProvResc .And. lDemitido,TPR->PR_DEMISSA,dDataRef),@nDiasVenc,@nDiasProp,@nTDiasAfa,,,,cTAfaFer,.T.,lDiasAfAcum)
nDiasVenc += SRF->RF_DVENPEN // Soma os dias de ferias pendentes

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se houve afastamento e se deve congelar			 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If TPR->PR_SITFOLH == "A" .And. !TPR->PR_AFASFGT $ cAfastProv
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Congela e mantem os dias de vencidas do mes anterior		 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lCongelaFer := .T.
	nDiasVenc := aFerVenc[_Anter,_Dias]
Elseif (cCongAci == "C" .And. TPR->PR_SITFOLH == "A" .And. TPR->PR_AFASFGT = "O" ) .Or.;
	   (cCongDoe == "C" .And. TPR->PR_SITFOLH == "A" .And. TPR->PR_AFASFGT = "P" )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Somente congelar se houver mais de 180 dias afastado         |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nTDiasAfa >= 180
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Se parametro configurado para nao provisionar apos 6 meses de|
		//³ afastado, zerar dias de proporcionais e forcar congelamento  |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If cTpCongAf == "2"	
			If aFerProp[_Anter,_Dias] == 0
				lCongelaFer := .T.
			ElseIf nDiasProp > (aTabFer[3]/2)
				nDiasProp := 0
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Zerar proporcionais quando existe mais de 180 dias afastado	 |
			//³ anterior ao periodo de proporcionais, neste caso, nao importa|
			//³ o numero de dias de ferias proporcionais.                    |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			ElseIf nTDiasAfa - ( nDiasProp / aTabFer[4] * aTabFer[3] ) > 180
				nDiasProp := 0
			EndIf
		Else
			If aFerProp[_Anter,_Dias] >= (aTabFer[3]/2)
				lCongelaFer := .T.
			Else
				nDiasProp := Min(nDiasProp, (aTabFer[3]/2)) //Congelar no maximo 15 dias
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Se for calculo no mes do periodo aquisitivo e nao gerou 2.5  |
			//³ dias de proporcionais para o proximo periodo, congela saldo  |
			//³ anterior (15 dias) p/ que seja efetuada baxa no proximo mes  |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If Month(dDtBasFer) == Month(dDataRef) .And. nDiasProp == 0
				lCongelaFer := .T.
			EndIf
		EndIf
	EndIf

Elseif (cCongAci == "N" .And. TPR->PR_SITFOLH == "A" .And. TPR->PR_AFASFGT = "O" ) .Or.;
	   (cCongDoe == "N" .And. TPR->PR_SITFOLH == "A" .And. TPR->PR_AFASFGT = "P" )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Congela e mantem os dias de vencidas do mes anterior		 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lCongelaFer := .T.
	nDiasVenc   := aFerVenc[_Anter,_Dias]
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica tipo de movimentacao do funcionario				 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nTipoMovMes := If(lCongelaFer, _Cong_Fer, nTipoMovMes)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica Se Deve Pagar os Adicionais						 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cCodAdt # Space(3) .And. PosSrv(cCodAdt,TPR->PR_FILIAL,'RV_INCORP') # 'S'
	nAdtDia := (nAdtServ / 30)
Endif
If cCodIns # Space(3) .And. PosSrv(cCodIns,TPR->PR_FILIAL,'RV_INCORP') # 'S'
	nInsDia := (nInsal / 30)
Endif
If TPR->PR_PERICUL > 0.00 .And. PosSrv(aCodfol[36,1],TPR->PR_FILIAL,'RV_INCORP') # 'S'
	nPerDia := (nPeric / 30)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calculo das Ferias Vencidas             					 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( !lDemitido .Or. lProvResc ) .And. nDiasVenc > 0
	dbSelectArea( "TRP" )
		
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica numero de faltas em cada periodo de ferias vencidas ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For k := 1 To 6
		cTipMed	   := Str( If(k ==1, 1,k+3),1 )
		nNroFaltas := 0
		If dbSeek( TPR->PR_FILIAL + TPR->PR_MAT + cTipMed + "998" + "9698" )
			nNroFaltas := TRP->RP_HORAS
			TabFaltas(@nNroFaltas)
			nV_DFalFer += nNroFaltas
			nTFaltaV   += TRP->RP_HORAS
		EndIf
	Next k
	nV_DSaldo  := nDiasVenc - nDFerAnt - nV_DFalFer
	nV_Valor   := NoRound( nSalDia * nV_DSaldo)
	nV_Adic    := (nInsDia+nPerdia+nAdtDia) * nV_DSaldo
    If cPaisLoc <> "URU"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Calcula adicionais para cada periodo de ferias vencidas      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nPeriVenc  := Max(Int(nDiasVenc/aTabFer[3]), 1)
		For k := 1 To 6
			cTipMed	:= Str( If(k ==1, 1,k+3), 1)
			If dbSeek( TPR->PR_FILIAL + TPR->PR_MAT + cTipMed + "999" + "99MD" )
				If nV_DSaldo > 0
					nV_Adic += ( (TRP->RP_VALATU/(aTabFer[3]*nPeriVenc)) * nV_DSaldo)
				Endif
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Calcula Peric./Insalub Verba de Medias Que Tem Incidencia	 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nMedPer := nMedIns := 0.00
				FMedPerIns(@nMedPer,@nMedIns,cTipMed,nSalHora,nSalMin,aCodFol)
				nV_Adic += If(nV_DSaldo > 0 ,((nMedPer+nMedIns)/(aTabFer[3]*nPeriVenc))*nV_DSaldo ,0)
			Endif
		Next k
	Else	
		cCodDias 	:=	If(SRA->RA_TIPOPGT <> "M",aCodFol[360][1],aCodFol[031][1])
		//Calcula os dias trabalhados no mes(Jornadas)
		nDias	:=	DiasTrabAno(MesAno(dDtBasFer),Str(Year(dDtBasFer),4)+"12",cCodDias,.T.)
	   	//Verifica se houve faltas no descontables(Sin Citacion) para entrar no calculo
		DiasNoDesc(dDtBasFer,Ctod(StrZero(F_ULTDIA(dDtBasFer),2)+"/"+Strzero(Month(dDtBasFer),2)+"/"+right(str(Year(dDtBasFer)),2)),@nDiasNDesc)
		//Somatoria dos Dias Trabalhados com os Dias Sin Citacion 
		nDias := nDias+nDiasNDesc
		MedHrsFer(@aMediaHrs,@nMediaOut,1)   
		For nX := 1 to Len(aMediaHrs)
			nRemVar := Round(((aMediaHrs[nX][1] / nDias)*nV_DSaldo) * nSALHORA, MsDecimais(1))  
			nTotVar += (nRemVar * aMediaHrs[nX][2])/100
		Next
		nV_Adic    := nTotVar
		aMediaHrs  := {} 
		nTotVar    := 0      
	Endif	

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada para Alterar valores dos Adicional Vencidas |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("GP070VEN")
		EXECBLOCK("GP070VEN",.F.,.F.)
	Endif
	If cPaisLoc <> "URU"
		nV_UmTer   := NoRound((nV_Valor+nV_Adic) * If (nPerc1T=0.00 .Or. nPerc1T=100.00, 1/3 ,nPerc1T / 100) )
	Else
		nV_UmTer   := Round(nV_Valor - (nV_Valor * nSomaPerc),MsDecimais(1))
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada para Alterar Valores de 1/3 Fer.Vencidas    |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("GP070V13")
		EXECBLOCK("GP070V13",.F.,.F.)
	Endif
   If cPaisLoc <> "URU"
		nV_TotFer  := nV_Valor + nV_Adic + nV_UmTer
		nV_Inss    := NoRound(nV_TotFer * (nPercEmp+nPercTer+nPercAcTrab))
		nV_Fgts    := NoRound(nV_TotFer * nPercFgts)
		nV_Pis	   := NoRound(nV_TotFer * nPercPis)
	Else
		nV_CSocial:= ((nV_Valor+nV_Adic)  * nCSocial) / 100
		nV_Bse	 := ((nV_Valor+nV_Adic) * nAliqBse)/100
		nV_Bse    += (nV_Bse * nBSeFixo) / 100
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada para Alterar valores de Inss e Fgts Vencidas|
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("GP070VIF")
		EXECBLOCK("GP070VIF",.F.,.F.)
	Endif
			
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava os valores calculados no array de ferias vencidas      |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aFerVenc[_Atual,_Dias] := nV_DSaldo
	aFerVenc[_Atual,_Prov] := nV_Valor
	aFerVenc[_Atual,_Adic] := nV_Adic
	aFerVenc[_Atual,_1Ter] := nV_UmTer
	aFerVenc[_Atual,_INSS] := If(cPaisLoc <> "URU",nV_Inss,nV_CSocial)
	aFerVenc[_Atual,_FGTS] := If(cPaisLoc <> "URU",nV_Fgts,nV_Bse)
	aFerVenc[_Atual,_PIS]  := If(cPaisLoc <> "URU",nV_Pis,0)
	If cPaisLoc == "URU"
		aFerVenc[_Atual,_SalV] := Round(nV_Adic - (nV_Adic * nSomaPerc),MsDecimais(1))
	Endif	
EndIf
			
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calculo de Ferias Proporcionais 					       	 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( !lDemitido .Or. lProvResc ) .And. !lCongelaFer
	dbSelectArea( "TRP" )
	If dbSeek( TPR->PR_FILIAL + TPR->PR_MAT + "2" + "998" + "9698" )
		nP_DFalFer := TRP->RP_HORAS
		nTFaltaP   := TRP->RP_HORAS
		TabFaltas(@nP_DFalFer) 						     //-- Aplica Tabela de Faltas
		nP_DFalFer := ((nP_DFalFer / aTabFer[3]) * nDiasProp ) //--Calculo de Faltas Proporcional
	Endif
	nP_DSaldo  := nDiasProp - nP_DFalFer - If (nDiasVenc > 0 , 0,nDFerAnt)
	nP_Valor   := Round(nSalDia * nP_DSaldo,2)
	nP_Adic    := Round( (nInsDia+nPerdia+nAdtDia) * nP_DSaldo,2)
	If cPaisLoc <> "URU"
		dbSelectArea( "TRP" )
		If dbSeek( TPR->PR_FILIAL + TPR->PR_MAT + "2" + "999" + "99MD" )
			If nDiasProp > 0
				nP_Adic += Round( (TRP->RP_VALATU/nDiasProp) * nP_DSaldo,2)
			Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Calcula Peric./Insalub Verba de Medias Que Tem Incidencia	 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nMedPer := nMedIns := 0.00
			FMedPerIns(@nMedPer,@nMedIns,'2',nSalHora,nSalMin,aCodFol)
			If nDiasProp > 0
				nP_Adic += (nMedPer+nMedIns) / nDiasProp * nP_DSaldo
			EndIf
		Endif
	Else                                      
		cCodDias 	:=	If(SRA->RA_TIPOPGT <> "M",aCodFol[360][1],aCodFol[031][1])
		//Calcula os dias trabalhados no mes(Jornadas)
		nDias	:=	DiasTrabAno(Str(Year(dDataRef),4)+"01",MesAno(dDataRef),cCodDias,.T.)
	   	//Verifica se houve faltas no descontables(Sin Citacion) para entrar no calculo
		DiasNoDesc(Ctod("01/01/"+str(Year(dDataRef),4)),Ctod(StrZero(F_ULTDIA(dDataRef),2)+"/"+Strzero(Month(dDataRef),2)+"/"+right(str(Year(dDataRef)),2)),@nDiasNDesc)
		//Somatoria dos Dias Trabalhados com os Dias Sin Citacion 
		nDias := nDias+nDiasNDesc
		MedHrsFer(@aMediaHrs,@nMediaOut,2)   
		For nX := 1 to Len(aMediaHrs)
		   	nRemVar := Round(((aMediaHrs[nX][1] / nDias)*nP_DSaldo) * nSALHORA, MsDecimais(1))  
			nTotVar += (nRemVar * aMediaHrs[nX][2])/100
	  	Next
		nP_Adic    := nTotVar
		aMediaHrs  := {} 
		nTotVar    := 0      
	Endif	

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada para ALterar valores dos Adicionais Proporc.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("GP070PRO")
		EXECBLOCK("GP070PRO",.F.,.F.)
	Endif
    If cPaisLoc <> "URU
		nP_UmTer   := Round((nP_Valor+nP_Adic) * If (nPerc1T=0.00 .Or. nPerc1T=100.00, 1/3 ,nPerc1T / 100),2 )
	Else
		nP_UmTer   :=  Round(nP_Valor - (nP_Valor * nSomaPerc),MsDecimais(1))
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada para Alterar Valores de 1/3 Proporcionais   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("GP070P13")
		EXECBLOCK("GP070P13",.F.,.F.)
	Endif
	If cPaisLoc <> "URU"
		nP_TotFer  := nP_Valor + nP_Adic + nP_UmTer
		nP_Inss    := NoRound(nP_TotFer * (nPercEmp+nPercTer+nPercAcTrab))
		nP_Fgts    := NoRound(nP_TotFer * nPercFgts)
		nP_Pis	   := NoRound(nP_TotFer * nPercPis)
	Else
		nP_TotFer  := nP_Valor + nP_Adic 
		nP_CSocial := (nP_TotFer * nCSocial) / 100
		nP_Bse	   := (nP_TotFer * nAliqBse)/100
		nP_Bse     += (nP_Bse * nBSeFixo) / 100
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada para Alterar valores de Inss e Fgts Proporc.|
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("GP070PIF")
		EXECBLOCK("GP070PIF",.F.,.F.)
	Endif
			
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava os valores calculados no array de ferias proporcionais |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aFerProp[_Atual,_Dias] := nP_DSaldo
	aFerProp[_Atual,_Prov] := nP_Valor
	aFerProp[_Atual,_Adic] := nP_Adic
	aFerProp[_Atual,_1Ter] := nP_UmTer
	aFerProp[_Atual,_INSS] := If(cPaisLoc <> "URU",nP_Inss,nP_CSocial)
	aFerProp[_Atual,_FGTS] := If(cPaisLoc <> "URU",nP_Fgts,nP_Bse)
	aFerProp[_Atual,_PIS]  := If(cPaisLoc <> "URU",nP_Pis,0)
	If cPaisLoc == "URU"
		aFerProp[_Atual,_SalV] := Round(nP_Adic - (nP_Adic * nSomaPerc),MsDecimais(1))
	Endif	
			
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Congela Provisao Para Funcionario Afastados 				 |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Elseif !lDemitido .And. lCongelaFer
	aFerProp[_Atual,_Dias] := aFerProp[_Anter,_Dias]
	aFerProp[_Atual,_Prov] := aFerProp[_Anter,_Prov]
	aFerProp[_Atual,_Adic] := aFerProp[_Anter,_Adic]
	aFerProp[_Atual,_1Ter] := aFerProp[_Anter,_1Ter]
	aFerProp[_Atual,_INSS] := aFerProp[_Anter,_INSS]
	aFerProp[_Atual,_FGTS] := aFerProp[_Anter,_FGTS]
	aFerProp[_Atual,_PIS]  := aFerProp[_Anter,_PIS]
	If cPaisLoc == "URU"
		aFerProp[_Atual,_SalV] := aFerProp[_Anter,_SalV]
	Endif	
Endif

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³fBxaFerPro³ Autor ³ Emerson Rosa de Souza	³ Data ³ 26.06.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Busca a Baixa de Ferias									  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fBxaFerProv(dDtBasFer,nDFerAnt,cArqBxaPr,cFilBxaPr,...)	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	 	 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fBxaFerProv(dDtBasFer,nDFerAnt,cArqBxaPr,cFilBxaPr,cMatBxaPr,cDatBxaPr,cPdBxaPr,cSeqBxaPr,cValBxaPr,cHrsBxaPr,lTemCab)
Local nValABoInss := nValABoFGTS := nValAboPis := 0
Local ddTpg0      := CTOD("")
Local lAchou      := .F.
Local lFerMes     := .T.
Local lPrimeira   := .T.
Local lTrocouPer  := .F.
Local cChaveBusca := ""
Local cDataBusca  := MesAno(dDataRef)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas nos pontos de entrada				     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private nBx_Valor  := nBx_Adic := nBx_UmTer := nBx_Inss := nBx_Fgts := nBx_Pis := 0
Private nBx_SalVa := 0
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis para provisionar ferias quebradas(Mes/Mes seguinte)³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private nBx_ValMs := nBx_AdiMs := nBx_UmTMs := nBx_InsMs := nBx_InsAbMs := nBx_FgtMs := nBx_FgtAbMs := nBx_PisMs := nBx_PisAbMs := 0
Private nBx_SalVMs := 0
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define a chave de busca do arquivo (SRC ou SRD)    			 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cArqBxaPr == "SRC"
	cChaveBusca := TPR->PR_FILIAL + TPR->PR_MAT
Else
	cChaveBusca := TPR->PR_FILIAL + TPR->PR_MAT + cDataBusca
EndIf	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica Se esta de ferias no mes da Provisao				 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( "SRH" )
If dbSeek( TPR->PR_FILIAL + TPR->PR_MAT )
	While ! Eof() .And. TPR->PR_FILIAL+TPR->PR_MAT == SRH->RH_FILIAL+SRH->RH_MAT
		If MesAno(SRH->RH_DATAINI) == cDataBusca
			If !lFechouMes
				If SRH->RH_DFERIAS + SRH->RH_DABONPE + SRH->RH_DFALTAS + nDFerAnt >= aTabFer[3]
					dDtBasFer := SRH->RH_DBASEAT + 1
					nDFerAnt  := 0
				Else
					nDFerAnt  += SRH->RH_DABONPE + SRH->RH_DFERIAS
				EndIf
			EndIf
			If lPrimeira
				lAchou := .T.
				lFerMes := ( Month(SRH->RH_DATAINI) == Month(dDataRef) )
				lPrimeira := .F.
				lTrocouPer:= SRH->RH_DATABAS <> dDtBasFer
			Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Se tipo de baixa mes e mes seguinte, atualiza variavel lAchou³
			//³ para forcar a busca das ferias no segundo mes.               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		ElseIf (cTpBxFer == "2" .And. ( MesAno(SRH->RH_DATAFIM) == cDataBusca .Or. MesAno(SRH->RH_DATAFIM+SRH->RH_DABONPE) == cDataBusca ))
			If lPrimeira
				lAchou := .T.
				lFerMes := ( Month(SRH->RH_DATAINI) == Month(dDataRef) )
				lPrimeira := .F.
			Endif
		Elseif MesAno(SRH->RH_DATAFIM) == cDataBusca
			dDtPg0 := SRH->RH_DTRECIB
		Endif
		dbSkip()
	Enddo
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Baixa pelo Valor Pago no Mes ATual   						 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( cArqBxaPr )
If lAchou .And. dbSeek( cChaveBusca )
	While !Eof() .And. ( Eval(cFilBxaPr) + Eval(cMatBxaPr) == TPR->PR_FILIAL + TPR->PR_MAT ) .And.;
						( Eval(cDatBxaPr) == cDataBusca )
		If Empty(dDtPg0) .Or. ( ! Empty(dDtPg0) .And. Eval(cSeqBxaPr) # " ")
		
		    If cTpBxFer == "2" .And. Eval(cPdBxaPr) == aCodFol[073,1]
				nDFerAnt -= If(!lTrocouPer .And. !lTemCab,Eval(cHrsBxaPr),0)
		    EndIf
			If Eval(cPdBxaPr) $ cCodFer .Or. Eval(cPdBxaPr) $ cCodFerMs
				nBx_Valor += Eval(cValBxaPr)     //-- Baixa de Valor Ferias
				If Eval(cPdBxaPr) $ cCodFerMs
					nBx_ValMs += Eval(cValBxaPr) //-- Ferias do Proximo Mes
				EndIf
			Endif
			If Eval(cPdBxaPr) $ cCodAdFer .Or. Eval(cPdBxaPr) $ cCodAdicMs
				nBx_Adic += Eval(cValBxaPr)       //-- Baixa de Adicionais
				If Eval(cPdBxaPr) $ cCodAdicMs
					nBx_AdiMs += Eval(cValBxaPr)  //-- Adicionais do Proximo Mes
				EndIf
			Endif

			If Eval(cPdBxaPr) $ cCodUmTer .Or. Eval(cPdBxaPr) $ cCodUmTerMs
				nBx_UmTer += Eval(cValBxaPr)       //-- Baixa de Um Terco (1/3)
				If Eval(cPdBxaPr) $ cCodUmTerMs
					nBx_UmTMs += Eval(cValBxaPr)   //-- Um Terco do Proximo Mes
				EndIf
			Endif

			If Eval(cPdBxaPr) $ cCodFer .Or. Eval(cPdBxaPr) $ cCodAdFer .Or. If(cPaisLoc <> "URU",Eval(cPdBxaPr) $ cCodUmTer,.F.) .Or.;
   	           Eval(cPdBxaPr) $ cCodFerMs .Or. Eval(cPdBxaPr) $ cCodAdicMs .Or. Eval(cPdBxaPr) $ cCodUmTerMs
				nBx_Inss += Eval(cValBxaPr)      // I.N.S.S.
				nBx_Fgts += Eval(cValBxaPr)      // F.G.T.S.
				nBx_Pis  += Eval(cValBxaPr)      // P.I.S.
				If Eval(cPdBxaPr) $ cCodFerMs .Or. Eval(cPdBxaPr) $ cCodAdicMs .Or. Eval(cPdBxaPr) $ cCodUmTerMs
					nBx_InsMs += Eval(cValBxaPr) // I.N.S.S. do Proximo Mes
					nBx_FgtMs += Eval(cValBxaPr) // F.G.T.S. do Proximo Mes
					nBx_PisMs += Eval(cValBxaPr) // P.I.S.   do Proximo Mes
				EndIf
			Endif
         
			If Eval(cPdBxaPr) $ cCodSalV .Or. Eval(cPdBxaPr) $ cCodSalVMs
				nBx_SalVa += Eval(cValBxaPr)       //-- Baixa Media Salario Vacacional
				If Eval(cPdBxaPr) $ cCodSalVMs
					nBx_SalVMs += Eval(cValBxaPr)   //-- Media Sal. Vacac.Prox.Mes
				EndIf
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Abono Pecuniario											 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If Eval(cPdBxaPr) $ cCodAbono  .Or. Eval(cPdBxaPr) $ cCodAboMs
				If PosSrv(Eval(cPdBxaPr),TPR->PR_FILIAL,"RV_INSS") == "N"
					nValAboInss += Eval(cValBxaPr)
					If Eval(cPdBxaPr) $ cCodAboMs
					    If cTpBxFer != "2"
							nBx_InsMs -= Eval(cValBxaPr) // I.N.S.S. do Proximo Mes
						Else
							nBx_InsAbMs += Eval(cValBxaPr) // I.N.S.S. de Abono do Proximo Mes
						EndIf
					EndIf
				Endif
				If PosSrv(Eval(cPdBxaPr),TPR->PR_FILIAL,"RV_FGTS") == "N"
					nValAboFgts += Eval(cValBxaPr)
					If Eval(cPdBxaPr) $ cCodAboMs
					    If cTpBxFer != "2"
							nBx_FgtMs -= Eval(cValBxaPr) // F.G.T.S. do Proximo Mes
						Else
							nBx_FgtAbMs += Eval(cValBxaPr) // F.G.T.S. de Abono do Proximo Mes
						Endif
					EndIf
				Endif
				If PosSrv(Eval(cPdBxaPr),TPR->PR_FILIAL,"RV_PIS") == "N"
					nValAboPis += Eval(cValBxaPr)
					If Eval(cPdBxaPr) $ cCodAboMs
					    If cTpBxFer != "2"
							nBx_PisMs -= Eval(cValBxaPr) // P.I.S. do Proximo Mes
						Else
							nBx_PisAbMs += Eval(cValBxaPr) // P.I.S. de Abono do Proximo Mes
						Endif
					EndIf
				Endif
			Endif
		Endif
		dbSkip()
	Enddo

	If cPaisLoc <> "URU"
		nBx_Inss := NoRound((nBx_Inss - nValAboInss) * (nPercEmp+nPercTer+nPercAcTrab))
		nBx_Fgts := NoRound((nBx_Fgts - nValAboFgts) * nPercFgts )
		nBx_Pis  := NoRound((nBx_Pis  - nValAboPis)  * nPercPis )
	Else
      	nBx_Inss := NoRound((nBx_Inss * nCSocial) / 100)
		nBx_Fgts := (nBx_Fgts * nAliqBse)/100
		nBx_Fgts += NoRound((nBx_Fgts * nBSeFixo) / 100)
		nBx_Pis  := 0
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se deve baixar pelas ferias do mes e mes seguinte	 |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cTpBxFer == "2"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Calculo do INSS e FGTS do Proximo Mes                        |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nBx_InsMs := NoRound(nBx_InsMs * (nPercEmp+nPercTer+nPercAcTrab))
		nBx_FgtMs := NoRound(nBx_FgtMs * nPercFgts )
		nBx_PisMs := NoRound(nBx_PisMs * nPercPis )
		nBx_InsAbMs:= NoRound(nBx_InsAbMs * (nPercEmp+nPercTer+nPercAcTrab))
		nBx_FgtAbMs:= NoRound(nBx_FgtAbMs * nPercFgts )
		nBx_PisAbMs:= NoRound(nBx_PisAbMs * nPercPis )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Subtrai os valores do proximo mes do total do mes            |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lFerMes
			nBx_Valor -= nBx_ValMs
			nBx_Adic  -= nBx_AdiMs
			nBx_UmTer -= nBx_UmTMs
			nBx_Inss  -= nBx_InsMs
			nBx_Inss  += nBx_InsAbMs
			nBx_Fgts  -= nBx_FgtMs
			nBx_Fgts  += nBx_FgtAbMs
			nBx_Pis   -= nBx_PisMs
			nBx_Pis   += nBx_PisAbMs
			nBx_SalVa -= nBx_SalVMs
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava a diferenca que sera baixada no proximo mes            |
			//³ Condicao: Ja possuir ferias vencidas ou entao nao ter ferias |
			//³ vencidas e ter quitado o direito as ferias proporcionais.    |
			//³ neste caso deve deixar saldo atual a ser baixado no mes      |
			//³ seguinte.                                                    |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If aFerVenc[_Anter,_Dias] > 0 .Or. (aFerVenc[_Anter,_Dias] == 0 .And. lTrocouPer)
				aFerVenc[_Atual,_Prov] := nBx_ValMs
				aFerVenc[_Atual,_Adic] := nBx_AdiMs
				aFerVenc[_Atual,_1Ter] := nBx_UmTMs
				aFerVenc[_Atual,_INSS] := nBx_InsMs
				aFerVenc[_Atual,_FGTS] := nBx_FgtMs
				aFerVenc[_Atual,_PIS]  := nBx_PisMs
				If cPaisLoc == "URU"
					aFerVenc[_Atual,_SalV] := nBx_SalVMs
				Endif	
			Endif
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada para Alterar valores de Inss e Fgts Baixas  |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("GP070BIF")
		EXECBLOCK("GP070BIF",.F.,.F.)
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava no array os valores de baixa							 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aFerVenc[_BxFer,_Prov] := nBx_Valor
	aFerVenc[_BxFer,_Adic] := nBx_Adic
	aFerVenc[_BxFer,_1Ter] := nBx_UmTer
	aFerVenc[_BxFer,_INSS] := nBx_Inss
	aFerVenc[_BxFer,_FGTS] := nBx_Fgts
	aFerVenc[_BxFer,_PIS]  := nBx_Pis
	If cPaisLoc == "URU"
		aFerVenc[_BxFer,_SalV] := nBx_SalVa
	Endif	
Endif

Return (nBx_Valor+nBx_Adic+nBx_UmTer > 0)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³fProv13o  ³ Autor ³ Emerson Rosa de Souza	³ Data ³ 26.06.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Calcula provisao de 13 Salario     						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fProv13o(cAbatAci,cAbatDoe,nTipoMovMes)		              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	 	 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fProv13o(cAbatAci,cAbatDoe,nTipoMovMes)
Local lCongela13o := .F.
Local nAvosDed    := nAvosAf := nV_DFal13o := 0
Local dDtI13	  := CTOD("")
Local cTiposAfa   := ""
Local nB_FGTS	  := 0
Local nB_PIS 	  := 0
Local aAfast      := {}
Local nAvos_OQ

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas nos pontos de entrada				     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private nV_Valor := nV_Adic := nV_1Par13 := nV_Inss := nV_Fgts := nV_Pis := nTotMes := 0
Private nV_CSocial := nV_Bse := 0
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se houve afastamento e se deve congelar			 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If TPR->PR_SITFOLH == "A" .And. !TPR->PR_AFASFGT $ cAfastProv
	lCongela13o := .T.
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica os tipos de afastamento que deverao ser tratados	 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cAbatAci == "S" .And. ( cAbatAfas == "S" .Or. "O" $ cAbatAfas )
		cTiposAfa += "O*" //Acidente de Trabalho
	EndIf
	If cAbatDoe  == "S" .And. ( cAbatAfas == "S" .Or. "P" $ cAbatAfas )
		cTiposAfa += "P*" //Doenca
	EndIf
	If cPgSalMat == "N" .And. ( cAbatAfas == "S" .Or. "Q" $ cAbatAfas )
		cTiposAfa += "Q*" //Auxilio Maternidade
	EndIf
	If cAbatAfas == "S" .Or.  ( "R" $ cAbatAfas )
		cTiposAfa += "R*" //Servico Militar
	EndIf
	If cAbatAfas == "S" .Or.  ( "X" $ cAbatAfas )
		cTiposAfa += "X*" //Licenca Nao Remunerada
	EndIf
	If ( "W" $ cAbatAfas )
		cTiposAfa += "W*" //Mandato Sindical
	EndIf
	If !Empty(cTiposAfa)
		nAvosAf := 0
		dDtI13  := CTOD("01/01/"+Str(Year(dDataRef),4), "DDMMYY")
		fRetAfas(dDtI13,dDataRef,cTiposAfa,@nAvosAf,,@aAfast)
		nAvosDed += nAvosAf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica tipo de movimentacao do funcionario				 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nTipoMovMes := If(lCongela13o, If(nTipoMovMes==_Cong_Fer,_Cong_F13,_Cong_13s), nTipoMovMes)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se deve pagar os Adicionais						 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cCodAdt # Space(3) .And. PosSrv(cCodAdt,TPR->PR_FILIAL,'RV_INCORP') = 'S'
	nAdtServ := 0.00
Endif
If cCodIns # Space(3) .And. PosSrv(cCodIns,TPR->PR_FILIAL,'RV_INCORP') = 'S'
	nInsal := 0.00
Endif
If TPR->PR_PERICUL > 0.00 .And. PosSrv(aCodfol[36,1],TPR->PR_FILIAL,'RV_INCORP') = 'S'
	nPeric := 0.00
Endif

If ( !lDemitido .Or. lProvResc ) .And. !lCongela13o

	dbSelectArea("TRP")
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Busca o Adicional Medias									 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If dbSeek(TPR->PR_FILIAL + TPR->PR_MAT + "3" + "999" + "99MD")
		nV_Adic := TRP->RP_VALATU
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Calcula Peric./Insal Verba de Medias Que Tem Incidencia      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nMedPer := nMedIns := 0.00
		FMedPerIns(@nMedPer,@nMedIns,'3',nSalHora,nSalMin,aCodFol)
		nV_Adic += (nMedPer+nMedIns)
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Busca a 1§ Parcela Antecipada								 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lDesc1Parc
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pesquisa Adiantamento da 1¦ Parcela 13§ Salario no acumulado    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If dbSeek(TPR->PR_FILIAL + TPR->PR_MAT + "3" + "997" + "9598")
			nV_1Par13 := TRP->RP_VALATU
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pesquisa Adiantamento da 1¦ Parcela 13§ Salario no movimento    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !lFechouMes
			dbSelectArea("SRC")
			If dbSeek(TPR->PR_FILIAL + TPR->PR_MAT + aCodFol[022,1])
				nV_1Par13 += SRC->RC_VALOR
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Pesquisa a Diferenca do Adiantamento da 1¦ Parcela 13§ Salario  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If dbSeek(TPR->PR_FILIAL + TPR->PR_MAT + aCodFol[163,1])
				nV_1Par13 += SRC->RC_VALOR
			EndIf
			dbSelectArea("TRP")
		Endif
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Busca as Faltas em Avos 									 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If dbSeek(TPR->PR_FILIAL + TPR->PR_MAT + "3" + "998" + "9998")
		nV_DFal13o := TRP->RP_HORAS
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calcula os Avos do Funcionario								 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	fAvos13(@nTotMes,If(lProvResc .And. lDemitido,TPR->PR_DEMISSA,dDataRef),nV_DFal13o)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Abater Avos Afastados no Ano								 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nTotMes := If (nTotMes - nAvosDed > 0 , nTotMes - nAvosDed , 0)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calculo do Mes												 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nV_Valor  := Round((( nSalMes * nTotMes ) / 12 ) , 2 )
	nV_Adic   += Round(((nPeric+nAdtServ+nInsal) * nTotMes) / 12 , 2 )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada para ALterrar valores 13o. e  Adicional	 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("GP090DEC")
		EXECBLOCK("GP090DEC",.F.,.F.)
	Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Base para calculo do FGTS e PIS							     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nB_FGTS := nV_Valor + nV_Adic
	nB_PIS  := nV_Valor + nV_Adic

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calcula FGTS com base total se afast. por auxilio maternidade³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nAvos_OQ := 0
    Aeval( aAfast ,{ |X| nAvos_OQ += If( X[5] $ "O*Q", X[1], 0 ) })
	If nAvos_OQ > 0
		nB_FGTS := NoRound( fRetDec(@nB_FGTS) / nTotMes * (nTotMes + nAvos_OQ), 2 )
	EndIf

   If cPaisLoc <> "URU"
		nV_Tot13  := ( nV_Valor + nV_Adic )
		nV_Tot13o := ( nV_Valor + nV_Adic ) - nV_1Par13
		nV_Inss   := NoRound(nV_Tot13 * ( nPercEmp + nPercTer + nPercAcTrab ) )
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se o Codigo de 1§ Parcela esta com Incidencia	FGTS ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If PosSrv(aCodFol[022,1],TPR->PR_FILIAL,"RV_FGTS") == "S"
			nV_Fgts := NoRound((( nB_FGTS ) - nV_1Par13 ) * nPercFgts)
		Else
			nV_Fgts := NoRound(( nB_FGTS ) * nPercFgts)
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se o Codigo de 1§ Parcela esta com Incidencia de PIS³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If PosSrv(aCodFol[022,1],TPR->PR_FILIAL,"RV_PIS") == "S"
			nV_Pis := NoRound((( nB_PIS ) - nV_1Par13 ) * nPercPis)
		Else
			nV_Pis := NoRound(( nB_PIS ) * nPercPis)
		Endif

	Else
		nV_CSocial := (nV_Valor * nCSocial) / 100
		nV_Bse	 := (nV_Valor * nAliqBse)/100
		nV_Bse    += (nV_Bse * nBSeFixo) / 100
	Endif	

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada para Alterar valores de Inss e Fgts do 13o. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("GP090DIF")
		EXECBLOCK("GP090DIF",.F.,.F.)
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava o valor da baixa da 1a. parcela se houver baixa da 2a. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If a13Salar[_Bx13o,_Prov]+a13Salar[_Bx13o,_Adic] > 0
		a13Salar[_Bx13o,_1Par] := nV_1Par13
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Se houver identifcadores de bxa de 13o e for mes 12, zerar os³
	//³ valores "Atual" p/que o ajuste "No Mes" seja feito pela baixa³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lBx13Pgt .And. Month(dDataRef) == 12
  		a13Salar[_Atual,_Avos] := 0
  		a13Salar[_Atual,_Prov] := 0
  		a13Salar[_Atual,_Adic] := 0
  		a13Salar[_Atual,_1Par] := 0
  		a13Salar[_Atual,_INSS] := 0
  		a13Salar[_Atual,_FGTS] := 0
  		a13Salar[_Atual,_PIS]  := 0
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava os valores calculados no array (Subtraindo as baixas)  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		a13Salar[_Atual,_Avos] := nTotMes   - a13Salar[_Bx13o,_Avos]
		a13Salar[_Atual,_Prov] := nV_Valor  - a13Salar[_Bx13o,_Prov]
		a13Salar[_Atual,_Adic] := nV_Adic   - a13Salar[_Bx13o,_Adic]
		a13Salar[_Atual,_1Par] := nV_1Par13 - a13Salar[_Bx13o,_1Par]
		a13Salar[_Atual,_INSS] := If(cPaisLoc <> "URU",nV_Inss,nV_CSocial)- a13Salar[_Bx13o,_INSS]
		a13Salar[_Atual,_FGTS] := If(cPaisLoc <> "URU",nV_Fgts,nV_Bse) - a13Salar[_Bx13o,_FGTS]
		a13Salar[_Atual,_PIS]  := If(cPaisLoc <> "URU",nV_Pis - a13Salar[_Bx13o,_PIS], 0)
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calcula o 14o. salario a partir dos valores de 13o.          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If n14Salario > 0
		a14Salar[_Atual,_Avos] := 0
		a14Salar[_Atual,_Prov] := ( a13Salar[_Atual,_Prov] * n14Salario )
		a14Salar[_Atual,_Adic] := ( a13Salar[_Atual,_Adic] * n14Salario )
		a14Salar[_Atual,_1Par] := 0
		a14Salar[_Atual,_INSS] := ( a13Salar[_Atual,_INSS] * n14Salario )
		a14Salar[_Atual,_FGTS] := ( a13Salar[_Atual,_FGTS] * n14Salario )
		a14Salar[_Atual,_PIS]  := ( a13Salar[_Atual,_PIS]  * n14Salario )
	EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Congela Provisao Para Funcionario Afastado  				 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Elseif !lDemitido .And. lCongela13o
	a13Salar[_Atual,_Avos] := a13Salar[_Anter,_Avos]
	a13Salar[_Atual,_Prov] := a13Salar[_Anter,_Prov]
	a13Salar[_Atual,_Adic] := a13Salar[_Anter,_Adic]
	a13Salar[_Atual,_1Par] := a13Salar[_Anter,_1Par]
	a13Salar[_Atual,_INSS] := a13Salar[_Anter,_INSS]
	a13Salar[_Atual,_FGTS] := a13Salar[_Anter,_FGTS]
	a13Salar[_Atual,_PIS]  := a13Salar[_Anter,_PIS]

	If n14Salario > 0
		a14Salar[_Atual,_Avos] := a14Salar[_Anter,_Avos]
		a14Salar[_Atual,_Prov] := a14Salar[_Anter,_Prov]
		a14Salar[_Atual,_Adic] := a14Salar[_Anter,_Adic]
		a14Salar[_Atual,_1Par] := a14Salar[_Anter,_1Par]
		a14Salar[_Atual,_INSS] := a14Salar[_Anter,_INSS]
		a14Salar[_Atual,_FGTS] := a14Salar[_Anter,_FGTS]
		a14Salar[_Atual,_PIS]  := a14Salar[_Anter,_PIS]
	EndIf

Endif

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³fBxa13oPro³ Autor ³ Emerson Rosa de Souza	³ Data ³ 26.06.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Busca a Baixa de 13o Salario								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fBxa13oProv(cArqBxa13,cFilBxa13,cMatBxa13cDatBxa13,...)	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	 	 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fBxa13oProv(cArqBxa13,cFilBxa13,cMatBxa13,cDatBxa13,cPdBxa13,cValBxa13)
Local nBxa13o     := nBxaAdi := nBxaIns := nBxaFgt := nBxaPis := 0
Local cChaveBusca := ""
Local cDataBusca  := If(lFechouMes,Left(DtoS(dDataRef),4)+"13",MesAno(dDataRef))
Local cAlias      := ALIAS()
Local lSomaAdic

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define a chave de busca do arquivo (SRI ou SRD)    			 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cArqBxa13 == "SRI"
	cChaveBusca := TPR->PR_FILIAL + TPR->PR_MAT
Else
	cChaveBusca := TPR->PR_FILIAL + TPR->PR_MAT + cDataBusca
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Baixa pelo Valor Pago no Mes ATual   						 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( cArqBxa13 )
If dbSeek( cChaveBusca )
	While !Eof() .And. ( Eval(cFilBxa13) + Eval(cMatBxa13) == TPR->PR_FILIAL + TPR->PR_MAT ) .And.;
						( Eval(cDatBxa13) == cDataBusca )

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se deve considerar diferenca de 13o Sal. negativa	 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Eval(cPdBxa13) == aCodFol[028,1] .And. Eval(cValBxa13) < 0 .And. !lDif13Neg
			dbSkip()
			Loop
		EndIf

		If Eval(cPdBxa13) $ cCod13o
			nBxa13o += Eval(cValBxa13)  //-- Baixa Valor do 13o Salario
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Se a verba atual nao estiver contida nos codigos de adicionais³
		//³ verifica se e um provento e se incide media p/ que seja somada³
		//³ na coluna de adicionais e utilizada para efetuar a baixa.	  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lSomaAdic := .F.
		If !(Eval(cPdBxa13) $ cCodAd13o)
		    PosSrv( Eval(cPdBxa13), TPR->PR_FILIAL )
		    If SRV->RV_TIPOCOD == "1" .And. !Empty(SRV->RV_MED13) .And. SRV->RV_MED13 # "N "
				lSomaAdic := .T.
		    EndIf
		    dbSelectArea( cArqBxa13 )
		EndIf

		If Eval(cPdBxa13) $ cCodAd13o .Or. lSomaAdic
			nBxaAdi += Eval(cValBxa13)  //-- Baixa de Adicionais
		Endif
		If Eval(cPdBxa13) $ cCod13o .Or. Eval(cPdBxa13) $ cCodAd13o .Or. lSomaAdic
			nBxaIns += Eval(cValBxa13)  //-- I.N.S.S.
			nBxaFgt += Eval(cValBxa13)  //-- F.G.T.S.
			nBxaPis += Eval(cValBxa13)  //-- P.I.S.
		Endif
		If Eval(cPdBxa13) == aCodFol[183,1]
			nBxaFgt -= If(lDesc1Parc,Eval(cValBxa13),0.00)  //-- Subtrai 1a parcela
		EndIf
		dbSkip()
	Enddo

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Busca a diferenca de 13o no movimento mensal - SRC		     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !lFechouMes
		dbSelectArea( "SRC" )
		If dbSeek( TPR->PR_FILIAL + TPR->PR_MAT + aCodFol[028,1] ) .Or.;
	       dbSeek( TPR->PR_FILIAL + TPR->PR_MAT + aCodFol[348,1] )
			If SRC->RC_VALOR > 0 .Or. lDif13Neg
				nBxa13o += SRC->RC_VALOR    //-- Baixa Valor do 13o Salario
				nBxaIns += SRC->RC_VALOR    //-- I.N.S.S.
				nBxaFgt += SRC->RC_VALOR    //-- F.G.T.S.
				nBxaPis += SRC->RC_VALOR    //-- P.I.S.
			EndIf
		EndIf
	Else
		dbSelectArea( "SRD" )
		If dbSeek( TPR->PR_FILIAL + TPR->PR_MAT + MesAno(dDataRef) + aCodFol[028,1] ) .Or.;
	       dbSeek( TPR->PR_FILIAL + TPR->PR_MAT + MesAno(dDataRef) + aCodFol[348,1] )
			If SRD->RD_VALOR > 0 .Or. lDif13Neg
				nBxa13o += SRD->RD_VALOR    //-- Baixa Valor do 13o Salario
				nBxaIns += SRD->RD_VALOR    //-- I.N.S.S.
				nBxaFgt += SRD->RD_VALOR    //-- F.G.T.S.
				nBxaPis += SRD->RD_VALOR    //-- P.I.S.
			EndIf
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava no array os valores de baixa							 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	a13Salar[_Bx13o,_Prov] := nBxa13o
	a13Salar[_Bx13o,_Adic] := nBxaAdi
	a13Salar[_Bx13o,_1Par] := 0.00 //-- Busca o valor da 1a.parcela atraves do GPEXMED
	If cPaisLoc <> "URU"
		a13Salar[_Bx13o,_INSS] := NoRound(nBxaIns * (nPercEmp+nPercTer+nPercAcTrab))
		a13Salar[_Bx13o,_FGTS] := NoRound(nBxaFgt * nPercFgts )
		a13Salar[_Bx13o,_PIS]  := NoRound(nBxaPis * nPercPis )
	Else
		a13Salar[_Bx13o,_INSS] := NoRound( nBxaIns * nCSocial / 100 )
		a13Salar[_Bx13o,_FGTS] := NoRound( nBxaFgt * nAliqBse /100 )
		a13Salar[_Bx13o,_FGTS] += NoRound( a13Salar[_Bx13o,_FGTS] * nBseFixo / 100)
		a13Salar[_Bx13o,_PIS]  := 0
	Endif	

Endif
dbSelectArea( cAlias )

Return ( nBxa13o + nBxaAdi + nBxaIns + nBxaFgt + nBxaPis > 0 )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³ GPM070Ok ³ Autor ³ Emerson R. de Souza	³ Data ³ 26.06.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Grava os valores da provisao no arquivo SRT				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ GPM070Ok() 						                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	 	 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±± */

Static Function GPM070Ok()
Return (MsgYesNo(OemToAnsi(STR0013),OemToAnsi(STR0012))) //"Confirma configura‡„o dos parƒmetros?"###"ATENCAO"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³fEncargEmp³ Autor ³ Emerson R. de Souza	³ Data ³ 26.06.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Carrega variaveis para calculo dos encargos				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fEncargEmp(nPercEmp, nPercTer, nPercAcTrab, nPercFgts)     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nPercEmp 	 - Percentual da Empresa					  ³±±
±±³          ³ nPerTerc  	 - Percentual de Terceiros					  ³±±
±±³          ³ nPercAcTrab   - Percentual de Acidente de Trabalho         ³±±
±±³          ³ nPercFgts 	 - Percentual para o FGTS funcionario  8%     ³±±
±±³          ³ nPercFgC 	 - Percentual para o FGTS contribuicao 0.5%   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	 	 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±± */
Static Function fEncargEmp(nPercEmp, nPercTer, nPercAcTrab, nPercFgts, nPercFgC)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verificar Tipo de Contrato para Calculo de encargos 		 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nPercEmp	:= If (TPR->PR_TPCONTR$ " *1", aInssEmp[1,1] , aInssEmp[1,2])
nPercTer 	:= If (TPR->PR_TPCONTR$ " *1", aInssEmp[2,1] , aInssEmp[2,2])
nPercAcTrab := If (TPR->PR_TPCONTR$ " *1", aInssEmp[3,1] , aInssEmp[3,2])
nPercFgts 	:= If (TPR->PR_TPCONTR$ " *1", aInssEmp[4,1] , aInssEmp[4,2])

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Busca o % Acid. Trab. no Funcionario/Centro Custo e Terceiros|
//| no Centro de Custo                                           |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
fBuscaAci(@nPercAcTrab,@nPercTer)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Deduzir o % de terceiros definido no parametro 15			 |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nPercTer -= fP15Terc(TPR->PR_CC,aGPSPer,"*")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Busca o % de FGTS do cadastro de funcionarios				 |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Type("SRA->RA_PERFGTS") # "U" .And. SRA->RA_PERFGTS > 0.00
   nPercFgts := SRA->RA_PERFGTS / 100
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Soma o % de FGTS referente a contribuicao de 0.5			 |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nPercFgts += nPercFgC

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³fBusCodBx ³ Autor ³ Emerson R. de Souza	³ Data ³ 27.06.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Carrega Codigos de Ferias Para Baixa da Provisao		      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fBusCodBx()   											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	 	 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±± */
Static Function fBusCodBx()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Codigos para baixa da provisao de ferias         			 |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cCodFer 	:= aCodFol[072,1] + "*" + aCodFol[074,1] + "*" + aCodFol[088,1] + "*" + aCodFol[094,1] + "*"
cCodUmTer	:= aCodFol[077,1] + "*" + aCodFol[079,1] + "*" + aCodFol[090,1] + "*" + aCodFol[095,1] + "*"
cCodFerMs	:= aCodFol[073,1] + "*" + aCodFol[089,1] + "*" + aCodFol[205,1] + "*" + aCodFol[207,1] + "*"
cCodUmTerMs := aCodFol[078,1] + "*" + aCodFol[091,1] + "*" + aCodFol[206,1] + "*" + aCodFol[208,1] + "*"
cCodAbono	:= aCodFol[074,1] + "*" + aCodFol[079,1] + "*" + aCodFol[094,1] + "*" + aCodFol[095,1] + "*"
cCodAboMs	:= aCodFol[205,1] + "*" + aCodFol[207,1] + "*" + aCodFol[206,1] + "*" + aCodFol[208,1] + "*"
cCodAdicMs  := aCodFol[076,1] + "*" + aCodFol[081,1] + "*" + aCodFol[083,1] + "*" + aCodFol[085,1] + "*" +;
               aCodFol[093,1] + "*" + aCodFol[097,1] + "*" + aCodFol[099,1] + "*" + aCodFol[344,1] + "*" +;
			   aCodFol[346,1] + "*" + aCodFol[637,1]
cCodAdFer	:= aCodFol[075,1] + "*" + aCodFol[080,1] + "*" + aCodFol[082,1] + "*" + aCodFol[084,1] + "*" +;
			   aCodFol[092,1] + "*" + aCodFol[096,1] + "*" + aCodFol[098,1] + "*" + aCodFol[343,1] + "*" +;
			   aCodFol[345,1] + "*" + aCodFol[636,1]
cCodSalV    := aCodFol[361,1]
cCodSalVMs  := aCodFol[362,1]
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Codigos para baixa da provisao de 13o. Salario     			 |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cCod13o	  := aCodFol[024,1] + "*" + aCodFol[028,1] + "*" + aCodFol[348,1]
cCodAd13o := aCodFol[001,1] + "*" + aCodFol[002,1] + "*" + aCodFol[003,1] + "*" + aCodFol[004,1] + "*"+;
		     aCodFol[005,1] + "*" + aCodFol[036,1] + "*" + aCodFol[037,1] + "*" + aCodFol[038,1] + "*"+;
			 aCodFol[039,1] + "*" + aCodFol[123,1] + "*" + aCodFol[124,1] + "*" + aCodFol[181,1] + "*"+;
			 aCodFol[182,1]
If cPaisLoc == "URU"
	cCod13o := If(Month(dDataRef)==6,aCodFol[022,1],aCodFol[024,1])+"*"+aCodFol[028,1]+"*"+aCodFol[348,1] 
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para acrescentar verbas aos codigos padrao. |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("GP070COD")
	ExecBlock("GP070COD",.F.,.F.)
Endif

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³fLimpaArra³ Autor ³ Emerson R. de Souza	³ Data ³ 27.06.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Limpa o array de provisao para calculo					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fLimpaArray(aProvisao)									  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ aProvisao	 - Array que sera zerado					  ³±±
±±³          ³ uConteudo	 - Conteudo que sera gravado no array		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	 	 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±± */
STATIC Function fLimpaArray(aProvisao,uConteudo,cNaoLimpar)
Local nCnt1, nCnt2

cNaoLimpar := If(cNaoLimpar == Nil, "", cNaoLimpar)

For nCnt1 := 1 To _Linhas
	If !Str(nCnt1,1) $ cNaoLimpar
		For nCnt2 := 1 To _Colunas
			aProvisao[nCnt1,nCnt2] := uConteudo
		Next nCnt2
	EndIf	
Next nCnt1

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³fIdentProv³ Autor ³ Emerson R. de Souza	³ Data ³ 27.06.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Carrega Codigos de Provisao Para Lancamentos no SRT	      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fIdentProv(aVerba,aCodFol)					     		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	 	 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±± */
STATIC Function fIdentProv(aVerba,aCodFol)

aVerba := {}

If cPaisLoc == "BRA"
	Aadd(aVerba, { _FerVenc, _Atual, _Prov, aCodFol[130,1], "130" }) // Provisao de Ferias
	Aadd(aVerba, { _FerVenc, _Atual, _Adic, aCodFol[254,1], "254" }) // Adicional Provisao de Ferias	
   	Aadd(aVerba, { _FerVenc, _Atual, _1Ter, aCodFol[255,1], "255" }) // Um Terco Provisao de Ferias	
	Aadd(aVerba, { _FerVenc, _Atual, _INSS, aCodFol[131,1], "131" }) // INSS Provisao de Ferias
	Aadd(aVerba, { _FerVenc, _Atual, _FGTS, aCodFol[132,1], "132" }) // FGTS Provisao de Ferias
	Aadd(aVerba, { _FerVenc, _Atual, _PIS,  aCodFol[416,1], "416" }) // PIS Provisao de Ferias

	Aadd(aVerba, { _FerVenc, _Corre, _Prov, aCodFol[133,1], "133" }) // Correcao Provisao de Ferias
	Aadd(aVerba, { _FerVenc, _Corre, _Adic, aCodFol[256,1], "256" }) // Correcao Adicional Provisao de Ferias
	Aadd(aVerba, { _FerVenc, _Corre, _1Ter, aCodFol[257,1], "257" }) // Correcao Um Terco Provisao de Ferias
	Aadd(aVerba, { _FerVenc, _Corre, _INSS, aCodFol[134,1], "134" }) // Correcao INSS Provisao de Ferias
	Aadd(aVerba, { _FerVenc, _Corre, _FGTS, aCodFol[135,1], "135" }) // Correcao FGTS Provisao de Ferias
	Aadd(aVerba, { _FerVenc, _Corre, _PIS,  aCodFol[417,1], "417" }) // Correcao PIS Provisao de Ferias
	
	Aadd(aVerba, { _FerVenc, _BxFer, _Prov, aCodFol[233,1], "233" }) // Baixa Provisao Ferias
	Aadd(aVerba, { _FerVenc, _BxFer, _Adic, aCodFol[258,1], "258" }) // Baixa Adicional Provisao de Ferias
	Aadd(aVerba, { _FerVenc, _BxFer, _1Ter, aCodFol[259,1], "259" }) // Baixa Um Terco Provisao de Ferias
	Aadd(aVerba, { _FerVenc, _BxFer, _INSS, aCodFol[234,1], "234" }) // Baixa Inss Provisao Ferias
	Aadd(aVerba, { _FerVenc, _BxFer, _FGTS, aCodFol[235,1], "235" }) // Baixa Fgts Provisao Ferias
	Aadd(aVerba, { _FerVenc, _BxFer, _PIS,  aCodFol[418,1], "418" }) // Baixa PIS Provisao Ferias
	
	Aadd(aVerba, { _FerVenc, _BxTrf, _Prov, aCodFol[239,1], "239" }) // Baixa Provisao Ferias Transferidos
	Aadd(aVerba, { _FerVenc, _BxTrf, _Adic, aCodFol[260,1], "260" }) // Baixa Adicional Provisao de Ferias Transferidos
	Aadd(aVerba, { _FerVenc, _BxTrf, _1Ter, aCodFol[261,1], "261" }) // Baixa Um Terco Provisao de Ferias Transferidos
	Aadd(aVerba, { _FerVenc, _BxTrf, _INSS, aCodFol[240,1], "240" }) // Baixa Inss Provisao Ferias Transferidos
	Aadd(aVerba, { _FerVenc, _BxTrf, _FGTS, aCodFol[241,1], "241" }) // Baixa Fgts Provisao Ferias Transferidos
	Aadd(aVerba, { _FerVenc, _BxTrf, _PIS,  aCodFol[419,1], "419" }) // Baixa PIS Provisao Ferias Transferidos
	                                                
	Aadd(aVerba, { _FerVenc, _BxRes, _Prov, aCodFol[262,1], "262" }) // Baixa Provisao Ferias Rescisao
	Aadd(aVerba, { _FerVenc, _BxRes, _Adic, aCodFol[263,1], "263" }) // Baixa Adicional Provisao de Ferias Rescisao
	Aadd(aVerba, { _FerVenc, _BxRes, _1Ter, aCodFol[264,1], "264" }) // Baixa Um Terco Provisao de Ferias Rescisao
	Aadd(aVerba, { _FerVenc, _BxRes, _INSS, aCodFol[265,1], "265" }) // Baixa Inss Provisao Ferias Rescisao
	Aadd(aVerba, { _FerVenc, _BxRes, _FGTS, aCodFol[266,1], "266" }) // Baixa Fgts Provisao Ferias Rescisao
	Aadd(aVerba, { _FerVenc, _BxRes, _PIS,  aCodFol[420,1], "420" }) // Baixa PIS Provisao Ferias Rescisao
ElseIf cPaisLoc == "CHI"
	Aadd(aVerba, { _FerVenc, _Atual, _Prov, aCodFol[130,1], "130" }) // Provisao de Ferias
	Aadd(aVerba, { _FerVenc, _Atual, _Adic, aCodFol[254,1], "254" }) // Adicional Provisao de Ferias	
	Aadd(aVerba, { _FerVenc, _Corre, _Prov, aCodFol[133,1], "133" }) // Correcao Provisao de Ferias
	Aadd(aVerba, { _FerVenc, _Corre, _Adic, aCodFol[256,1], "256" }) // Correcao Adicional Provisao de Ferias
	Aadd(aVerba, { _FerVenc, _Corre, _1Ter, aCodFol[257,1], "257" }) // Correcao Um Terco Provisao de Ferias
	Aadd(aVerba, { _FerVenc, _BxFer, _Prov, aCodFol[233,1], "233" }) // Baixa Provisao Ferias
	Aadd(aVerba, { _FerVenc, _BxFer, _Adic, aCodFol[258,1], "258" }) // Baixa Adicional Provisao de Ferias
	Aadd(aVerba, { _FerVenc, _BxFer, _1Ter, aCodFol[259,1], "259" }) // Baixa Um Terco Provisao de Ferias
ElseIf cPaisLoc == "URU"
	Aadd(aVerba, { _FerVenc, _Atual, _Prov, aCodFol[130,1], "130" }) // Provisao de Ferias
  	Aadd(aVerba, { _FerVenc, _Atual, _1Ter, aCodFol[255,1], "255" }) // Um Terco Provisao de Ferias	
	Aadd(aVerba, { _FerVenc, _Atual, _Adic, aCodFol[254,1], "254" }) // Adicional Provisao de Ferias	
	Aadd(aVerba, { _FerVenc, _Atual, _INSS, aCodFol[383,1], "383" }) // C.Social Provisao de Ferias
	Aadd(aVerba, { _FerVenc, _Atual, _FGTS, aCodFol[384,1], "384" }) // BSE Provisao de Ferias
	Aadd(aVerba, { _FerVenc, _Atual, _SalV, aCodFol[405,1], "405" }) // Adicional Sal.Vac.Provisao de Ferias	

	Aadd(aVerba, { _FerVenc, _Corre, _Prov, aCodFol[133,1], "133" }) // Correcao Provisao de Ferias
	Aadd(aVerba, { _FerVenc, _Corre, _1Ter, aCodFol[257,1], "257" }) // Correcao Um Terco Provisao de Ferias
	Aadd(aVerba, { _FerVenc, _Corre, _INSS, aCodFol[387,1], "387" }) // Correcao C.Social Provisao de Ferias
	Aadd(aVerba, { _FerVenc, _Corre, _FGTS, aCodFol[388,1], "388" }) // Correcao BSE Provisao de Ferias

	Aadd(aVerba, { _FerVenc, _BxFer, _Prov, aCodFol[233,1], "233" }) // Baixa Provisao Ferias
	Aadd(aVerba, { _FerVenc, _BxFer, _1Ter, aCodFol[259,1], "259" }) // Baixa Um Terco Provisao de Ferias
	Aadd(aVerba, { _FerVenc, _BxFer, _Adic, aCodFol[258,1], "258" }) // Baixa Adicional Provisao de Ferias
	Aadd(aVerba, { _FerVenc, _BxFer, _INSS, aCodFol[385,1], "385" }) // Baixa C.Social Provisao Ferias Rescisao
	Aadd(aVerba, { _FerVenc, _BxFer, _FGTS, aCodFol[386,1], "386" }) // Baixa BSE Provisao Ferias Rescisao
	Aadd(aVerba, { _FerVenc, _BxFer, _SalV, aCodFol[406,1], "406" }) // Baixa Adicional Sal.Vac. Provisao de Ferias
EndIf

If cPaisLoc == "BRA"
	Aadd(aVerba, { _13Salar, _Atual, _Prov, aCodFol[136,1], "136" }) // Provisao de 13o Salario
	Aadd(aVerba, { _13Salar, _Atual, _Adic, aCodFol[267,1], "267" }) // Adicional Provisao de 13o Salario
	Aadd(aVerba, { _13Salar, _Atual, _1Par, aCodFol[268,1], "268" }) // 1a. Parcela 13o Provisao
	Aadd(aVerba, { _13Salar, _Atual, _INSS, aCodFol[137,1], "137" }) // INSS Provisao 13o Salario
	Aadd(aVerba, { _13Salar, _Atual, _FGTS, aCodFol[138,1], "138" }) // FGTS Provisao 13o Salario
	Aadd(aVerba, { _13Salar, _Atual, _PIS,  aCodFol[421,1], "421" }) // PIS Provisao 13o Salario
	
	Aadd(aVerba, { _13Salar, _Corre, _Prov, aCodFol[139,1], "139" }) // Correcao Provisao 13o Salario
	Aadd(aVerba, { _13Salar, _Corre, _Adic, aCodFol[269,1], "269" }) // Correcao Adicional Provisao de 13o Salario
	Aadd(aVerba, { _13Salar, _Corre, _INSS, aCodFol[140,1], "140" }) // Correcao INSS Provisao 13o Salario
	Aadd(aVerba, { _13Salar, _Corre, _FGTS, aCodFol[141,1], "141" }) // Correcao FGTS Provisao 13o Salario
	Aadd(aVerba, { _13Salar, _Corre, _PIS,  aCodFol[422,1], "422" }) // Correcao PIS Provisao 13o Salario

	Aadd(aVerba, { _13Salar, _Bx13o, _Prov, aCodFol[332,1], "332" }) // Baixa Provisao 13o Salario
	Aadd(aVerba, { _13Salar, _Bx13o, _Adic, aCodFol[333,1], "333" }) // Baixa Adicional Provisao de 13o Salario
	Aadd(aVerba, { _13Salar, _Bx13o, _1Par, aCodFol[334,1], "334" }) // Baixa Antecipacao 1a Parcela do 13o Salario
	Aadd(aVerba, { _13Salar, _Bx13o, _INSS, aCodFol[335,1], "335" }) // Baixa Inss Provisao 13o Salario
	Aadd(aVerba, { _13Salar, _Bx13o, _FGTS, aCodFol[336,1], "336" }) // Baixa Fgts Provisao 13o Salario
	Aadd(aVerba, { _13Salar, _Bx13o, _PIS,  aCodFol[423,1], "423" }) // Baixa PIS Provisao 13o Salario

	Aadd(aVerba, { _13Salar, _BxTrf, _Prov, aCodFol[270,1], "270" }) // Baixa Provisao 13o Salario Transferido
	Aadd(aVerba, { _13Salar, _BxTrf, _Adic, aCodFol[271,1], "271" }) // Baixa Adicional Provisao de 13o Salario Transferido
	Aadd(aVerba, { _13Salar, _BxTrf, _INSS, aCodFol[272,1], "272" }) // Baixa Inss Provisao 13o Salario Transferido
	Aadd(aVerba, { _13Salar, _BxTrf, _FGTS, aCodFol[273,1], "273" }) // Baixa Fgts Provisao 13o Salario Transferido
	Aadd(aVerba, { _13Salar, _BxTrf, _PIS,  aCodFol[424,1], "424" }) // Baixa PIS Provisao 13o Salario Transferido

	Aadd(aVerba, { _13Salar, _BxRes, _Prov, aCodFol[274,1], "274" }) // Baixa Provisao 13o Salario Rescisao
	Aadd(aVerba, { _13Salar, _BxRes, _Adic, aCodFol[275,1], "275" }) // Baixa Adicional Provisao de 13o Salario Rescisao
	Aadd(aVerba, { _13Salar, _BxRes, _INSS, aCodFol[276,1], "276" }) // Baixa Inss Provisao 13o Salario Rescisao
	Aadd(aVerba, { _13Salar, _BxRes, _FGTS, aCodFol[277,1], "277" }) // Baixa Fgts Provisao 13o Salario Rescisao
	Aadd(aVerba, { _13Salar, _BxRes, _PIS,  aCodFol[425,1], "425" }) // Baixa PIS Provisao 13o Salario Rescisao

	Aadd(aVerba, { _14Salar, _Atual, _Prov, aCodFol[142,1], "142" }) // Provisao de 14o Salario
	Aadd(aVerba, { _14Salar, _Atual, _Adic, aCodFol[278,1], "278" }) // Adicional Provisao de 14o Salario
	Aadd(aVerba, { _14Salar, _Atual, _INSS, aCodFol[143,1], "143" }) // INSS Provisao 14o Salario
	Aadd(aVerba, { _14Salar, _Atual, _FGTS, aCodFol[144,1], "144" }) // FGTS Provisao 14o Salario
	Aadd(aVerba, { _14Salar, _Atual, _PIS,  aCodFol[426,1], "426" }) // PIS Provisao 14o Salario
	
	Aadd(aVerba, { _14Salar, _Corre, _Prov, aCodFol[145,1], "145" }) // Correcao Provisao 14o Salario
	Aadd(aVerba, { _14Salar, _Corre, _Adic, aCodFol[279,1], "279" }) // Correcao Adicional Provisao de 14o Salario
	Aadd(aVerba, { _14Salar, _Corre, _INSS, aCodFol[146,1], "146" }) // Correcao INSS Provisao 14o Salario
	Aadd(aVerba, { _14Salar, _Corre, _FGTS, aCodFol[147,1], "147" }) // Correcao FGTS Provisao 14o Salario
	Aadd(aVerba, { _14Salar, _Corre, _PIS,  aCodFol[427,1], "427" }) // Correcao PIS Provisao 14o Salario
	
	Aadd(aVerba, { _14Salar, _BxTrf, _Prov, aCodFol[280,1], "280" }) // Baixa Provisao 14o Salario Transferido
	Aadd(aVerba, { _14Salar, _BxTrf, _Adic, aCodFol[281,1], "281" }) // Baixa Adicional Provisao de 14o Salario Transferido
	Aadd(aVerba, { _14Salar, _BxTrf, _INSS, aCodFol[282,1], "282" }) // Baixa Inss Provisao 14o Salario Transferido
	Aadd(aVerba, { _14Salar, _BxTrf, _FGTS, aCodFol[283,1], "283" }) // Baixa Fgts Provisao 14o Salario Transferido
	Aadd(aVerba, { _14Salar, _BxTrf, _PIS,  aCodFol[428,1], "428" }) // Baixa PIS Provisao 14o Salario Transferido

	Aadd(aVerba, { _14Salar, _BxRes, _Prov, aCodFol[284,1], "284" }) // Baixa Provisao 14o Salario Rescisao
	Aadd(aVerba, { _14Salar, _BxRes, _Adic, aCodFol[285,1], "285" }) // Baixa Adicional Provisao de 14o Salario Rescisao
	Aadd(aVerba, { _14Salar, _BxRes, _INSS, aCodFol[286,1], "286" }) // Baixa Inss Provisao 14o Salario Rescisao
	Aadd(aVerba, { _14Salar, _BxRes, _FGTS, aCodFol[287,1], "287" }) // Baixa Fgts Provisao 14o Salario Rescisao
	Aadd(aVerba, { _14Salar, _BxRes, _PIS,  aCodFol[429,1], "429" }) // Baixa PIS Provisao 14o Salario Rescisao
ElseIf cPaisLoc =="PAR"
	Aadd(aVerba, { _13Salar, _Atual, _Prov, aCodFol[136,1], "136" }) // Provisao de 13o Salario
	Aadd(aVerba, { _13Salar, _Atual, _Adic, aCodFol[267,1], "267" }) // Adicional Provisao de 13o Salario
	Aadd(aVerba, { _13Salar, _Atual, _1Par, aCodFol[268,1], "268" }) // 1a. Parcela 13o Provisao
	Aadd(aVerba, { _13Salar, _Corre, _Prov, aCodFol[139,1], "139" }) // Correcao Provisao 13o Salario
	Aadd(aVerba, { _14Salar, _Atual, _Prov, aCodFol[142,1], "142" }) // Provisao de 14o Salario
	Aadd(aVerba, { _14Salar, _Corre, _Prov, aCodFol[145,1], "145" }) // Correcao Provisao 14o Salario
ElseIf cPaisLoc == "URU
	Aadd(aVerba, { _13Salar, _Atual, _Prov, aCodFol[136,1], "136" }) // Provisao de 13o Salario
	Aadd(aVerba, { _13Salar, _Atual, _1Par, aCodFol[268,1], "268" }) // 1a. Parcela 13o Provisao
	Aadd(aVerba, { _13Salar, _Atual, _INSS, aCodFol[389,1], "389" }) // C.Social Provisao 13o Salario
	Aadd(aVerba, { _13Salar, _Atual, _FGTS, aCodFol[390,1], "390" }) // BSE Provisao 13o Salario
	Aadd(aVerba, { _13Salar, _Corre, _Prov, aCodFol[139,1], "139" }) // Correcao Provisao 13o Salario
	Aadd(aVerba, { _13Salar, _Corre, _INSS, aCodFol[393,1], "393" }) // Correcao C.Social Provisao 13o Salario
	Aadd(aVerba, { _13Salar, _Corre, _FGTS, aCodFol[394,1], "394" }) // Correcao BSE Provisao 13o Salario
	Aadd(aVerba, { _13Salar, _Bx13o, _Prov, aCodFol[332,1], "332" }) // Baixa Provisao 13o Salario
	Aadd(aVerba, { _13Salar, _Bx13o, _1Par, aCodFol[334,1], "334" }) // Baixa Antecipacao 1a Parcela do 13o Salario
	Aadd(aVerba, { _13Salar, _Bx13o, _INSS, aCodFol[391,1], "391" }) // Baixa C.Social Provisao 13o Salario
	Aadd(aVerba, { _13Salar, _Bx13o, _FGTS, aCodFol[392,1], "392" }) // Baixa BSE Provisao 13o Salario
Endif

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³fBusCabSRT³ Autor ³ Emerson R. de Souza	³ Data ³ 21.06.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Busca informacoes de cabecalho no SRT        			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fBusCabSRT(dDtBusca,aCabProv)					          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ 															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	 	 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
STATIC Function fBusCabSRT(dDtBusca,aCabProv)
Local lRet, cAlias := ALIAS()

aCabProv := Array(11)
dbSelectArea( "SRT" )
dbSetOrder(1)
lRet := dbSeek( TPR->PR_FILIAL + TPR->PR_MAT + TPR->PR_CC + MesAno(dDtBusca) )
aCabProv[_DatCalc] := SRT->RT_DATACAL
aCabProv[_CentroC] := SRT->RT_CC
aCabProv[_DBsProv] := SRT->RT_DATABAS
aCabProv[_DFerVen] := SRT->RT_DFERVEN
aCabProv[_DFerPro] := SRT->RT_DFERPRO
aCabProv[_DFalVen] := SRT->RT_DFALVEN
aCabProv[_DFalPro] := SRT->RT_DFALPRO
aCabProv[_DFerAnt] := SRT->RT_DFERANT
aCabProv[_Avos13S] := SRT->RT_AVOS13S
aCabProv[_MovProv] := SRT->RT_TIPMOVI
aCabProv[_SalProv] := SRT->RT_SALARIO
dbSelectArea( cAlias )

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³fBusDetSRT| Autor ³ Emerson R. de Souza	³ Data ³ 21.06.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Busca os valores da provisao no arquivo SRT				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fBusDetSRT(aProvisao,aRecnos,aVerba,aTransf,dDataRef)	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ aProvisao	 - Array que contera os valores da provisao	  ³±±
±±³          ³ aRecnos  	 - Array onde sera gravado os registros       ³±±
±±³          ³ aVerba   	 - Verbas de Ferias / 13§ Sal / 14§ Sal       ³±±
±±³          ³ aTransf  	 - Funcionarios Transferidos no mes           ³±±
±±³          ³ dDataRef 	 - Data de referencia para busca dos valores  ³±±
±±³          ³ nTipoProv	 - Tipo de provisao a buscar (Venc,Prop,13§)  |±±
±±³          ³ lTrataTrf	 - Indica se deve tratar os transferidos      |±±
±±³          ³ lCalcula  	 - Indica se deve calcular o valor do mes     |±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	 	 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
STATIC Function fBusDetSRT(aProvisao,aRecnos,aVerba,aTransf,dDataRef,nTipoProv,lTrataTrf,lCalcula)
Local cBusMesAnt,cBusMesAtu,nPosTrf,nPosVerba,nCnt1
Local nTpMov      := 0
Local cAlias      := ALIAS()
Local cAnoMesAnt  := MesAno( dDataRef - Day(dDataRef) )
Local cAnoMesAtu  := MesAno( dDataRef )
Local cOrdemBusca := &("{ || SRT->RT_FILIAL + SRT->RT_MAT + SRT->RT_CC + MesAno(SRT->RT_DATACAL) }")

If Type( "lProvResc" ) == "U"
	lProvResc := ( SuperGetMv( "MV_PROVRES",,"N" ) == "S" ) //-- Indica se devera provisionar no mes da rescisao
EndIf

If Type( "lTrfAMES" ) == "U"
	cTrfAMES     := ( SuperGetMv( "MV_TRFAMES",, Space(6) ) ) //-- Ano/Mes para inicio das demonstracoes de entrada e saida de transferencias no conceito 1 (transfere saldo origem p/ destino)
	lTrfAMES     := ( !Empty(cTrfAMES) .And. MesAno( dDataRef ) >= cTrfAMES )
EndIf

aRecnos    := If(aRecnos   == Nil, Array(_Linhas,_Colunas), aRecnos)
lCalcula   := If(lCalcula  == Nil, .F., lCalcula)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³	Limpa o array com o conteudo especificado no 2§ parametro    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
fLimpaArray( @aProvisao, 0 )
fLimpaArray( @aRecnos,   0 )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³	Chave de busca do mes anterior e atual                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cBusMesAnt := TPR->PR_FILIAL + TPR->PR_MAT + TPR->PR_CC + cAnoMesAnt
cBusMesAtu := TPR->PR_FILIAL + TPR->PR_MAT + TPR->PR_CC + cAnoMesAtu

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se nao trata transferencia buscar C. de Custo do mes anterior|
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !lTrataTrf .Or. lTrfAMES
	nPosTrf := Ascan(aTransf, { |X| X[_TAtual,_TEmp]+X[_TAtual,_TFil]+X[_TAtual,_TCC]+X[_TAtual,_TMat] == cEmpAnt+TPR->PR_FILIAL+TPR->PR_CC+TPR->PR_MAT })
	If nPosTrf > 0
		cBusMesAnt := aTransf[nPosTrf,_TAnter,_TFil]+aTransf[nPosTrf,_TAnter,_TMat]+aTransf[nPosTrf,_TAnter,_TCC]+cAnoMesAnt
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Se transferencia ocorreu apos mes atual preserva mes anterior|
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If aTransf[nPosTrf,_TAnter,_TDta] > cAnoMesAtu
			cBusMesAtu := aTransf[nPosTrf,_TAnter,_TFil]+aTransf[nPosTrf,_TAnter,_TMat]+aTransf[nPosTrf,_TAnter,_TCC]+cAnoMesAtu
		EndIf
	EndIf
EndIf

dbSelectArea( "SRT" )
dbSetOrder(1)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega o array com os valores do mes anterior. (Nao carregar³
//³ se provisao de 13§ salario e mes de referencia for janeiro). ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If dbSeek( cBusMesAnt ) .And. !(nTipoProv == _13Salar .And. Month(dDataRef) == 1)
	If nTipoProv == _FerVenc
		aProvisao[_Anter,_Dias] := SRT->RT_DFERVEN
	ElseIf nTipoProv == _FerProp
		aProvisao[_Anter,_Dias] := SRT->RT_DFERPRO
	ElseIf nTipoProv == _13Salar
		aProvisao[_Anter,_Avos] := SRT->RT_AVOS13S	
	EndIf
	While !Eof() .And. Eval(cOrdemBusca) == cBusMesAnt
		If SRT->RT_TIPPROV == Str(nTipoProv,1)
		    nPosVerba := Ascan(aVerba, { |X| X[4] == SRT->RT_VERBA })
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Busca o atual do mes anterior e grava no anterior do mes     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		    If nPosVerba > 0 .And. aVerba[nPosVerba,2] == _Atual
	   		    nPosCol := aVerba[nPosVerba,3]
				aProvisao[_Anter,nPosCol] := SRT->RT_VALOR
			EndIf
		EndIf
		dbSkip()
	EndDo
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega o array com os valores do mes atual                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If dbSeek( cBusMesAtu )
	nTpMov := SRT->RT_TIPMOVI
	If nTipoProv == _FerVenc
		aProvisao[_NoMes,_Dias] := SRT->RT_DFALVEN
		aProvisao[_Atual,_Dias] := SRT->RT_DFERVEN-If(SRT->RT_DFERVEN > 0, SRT->RT_DFERANT,0)-SRT->RT_DFALVEN
	ElseIf nTipoProv == _FerProp
		aProvisao[_NoMes,_Dias] := SRT->RT_DFALPRO
		aProvisao[_Atual,_Dias] := SRT->RT_DFERPRO-SRT->RT_DFALPRO
	ElseIf nTipoProv == _13Salar
		aProvisao[_NoMes,_Avos] := SRT->RT_AVOS13S	
	EndIf
	While !Eof() .And. Eval(cOrdemBusca) == cBusMesAtu
		If SRT->RT_TIPPROV == Str(nTipoProv,1)	
	    	nPosVerba := Ascan(aVerba, { |X| X[4] == SRT->RT_VERBA })
    		If nPosVerba > 0
			    nPosLin := aVerba[nPosVerba,2]
	   		    nPosCol := aVerba[nPosVerba,3]
				aProvisao[nPosLin,nPosCol] := SRT->RT_VALOR
				aRecnos[nPosLin,nPosCol]   := RECNO()
			EndIf
		EndIf	
		dbSkip()
	EndDo
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calcula os valores de Baixa e o valor No Mes 			     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lCalcula
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gravar valores coluna de rescisao quando nao existir identif.|
	//| de rescisao pois,neste caso, a baixa estara na coluna ferias.|
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nTpMov == _Demitido
		fChkDemit(aProvisao,aVerba,nTipoProv,_BxRes,_BxFer)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//| Total de baixas                                              |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aProvisao[_BxTot,_Prov] := aProvisao[_BxTrf,_Prov]+aProvisao[_BxFer,_Prov]+aProvisao[_BxRes,_Prov]
	aProvisao[_BxTot,_Adic] := aProvisao[_BxTrf,_Adic]+aProvisao[_BxFer,_Adic]+aProvisao[_BxRes,_Adic]
   If cPaisLoc == "URU"
		aProvisao[_BxTot,_SalV] := aProvisao[_BxTrf,_SalV]+aProvisao[_BxFer,_SalV]+aProvisao[_BxRes,_SalV]
	Endif
	aProvisao[_BxTot,_1Ter] := aProvisao[_BxTrf,_1Ter]+aProvisao[_BxFer,_1Ter]+aProvisao[_BxRes,_1Ter]
	aProvisao[_BxTot,_INSS] := aProvisao[_BxTrf,_INSS]+aProvisao[_BxFer,_INSS]+aProvisao[_BxRes,_INSS]
	aProvisao[_BxTot,_FGTS] := aProvisao[_BxTrf,_FGTS]+aProvisao[_BxFer,_FGTS]+aProvisao[_BxRes,_FGTS]
	aProvisao[_BxTot,_PIS]  := aProvisao[_BxTrf,_PIS] +aProvisao[_BxFer,_PIS] +aProvisao[_BxRes,_PIS]
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//| Provisao do Mes												 |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aProvisao[_NoMes,_Prov] := aProvisao[_Atual,_Prov]-aProvisao[_Anter,_Prov]+If( nTpMov == _Demitido .And. lProvResc, 0, aProvisao[_BxTot,_Prov] )
	aProvisao[_NoMes,_Adic] := aProvisao[_Atual,_Adic]-aProvisao[_Anter,_Adic]+If( nTpMov == _Demitido .And. lProvResc, 0, aProvisao[_BxTot,_Adic] )
	If cPaisLoc == "URU"
		aProvisao[_NoMes,_SalV] := aProvisao[_Atual,_SalV]-aProvisao[_Anter,_SalV]+aProvisao[_BxTot,_SalV]
	Endif
	aProvisao[_NoMes,_1Ter] := aProvisao[_Atual,_1Ter]-aProvisao[_Anter,_1Ter]+If( nTpMov == _Demitido .And. lProvResc, 0, aProvisao[_BxTot,_1Ter] )
	aProvisao[_NoMes,_INSS] := aProvisao[_Atual,_INSS]-aProvisao[_Anter,_INSS]+If( nTpMov == _Demitido .And. lProvResc, 0, aProvisao[_BxTot,_INSS] )
	aProvisao[_NoMes,_FGTS] := aProvisao[_Atual,_FGTS]-aProvisao[_Anter,_FGTS]+If( nTpMov == _Demitido .And. lProvResc, 0, aProvisao[_BxTot,_FGTS] )
	aProvisao[_NoMes,_PIS]  := aProvisao[_Atual,_PIS] -aProvisao[_Anter,_PIS] +If( nTpMov == _Demitido .And. lProvResc, 0, aProvisao[_BxTot,_PIS]  )

	If lProvResc .And. nTpMov == _Demitido
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//| Zera a linha de provisao atual quando o funcionario estiver demitido|
		//| e o parametro MV_PROVRES estiver configurado com "S"                |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		For nCnt1 := 1 To _Colunas
			aProvisao[_Atual,nCnt1]	:= 0
		Next nCnt1
	Endif

	If lTrfAMES
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//| Transfere o saldo anterior para a coluna Transf. Entrada	 |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If TPR->PR_TIPMOVI == _Trfe_Ent
			For nCnt1 := 1 To _Colunas
				aProvisao[_TrfEnt,nCnt1] := aProvisao[_Anter,nCnt1]
				aProvisao[_Anter,nCnt1]  := 0
			Next nCnt1
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//| Transfere o saldo de Baixa por Transf. p/coluna Transf. Saida|
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		ElseIf TPR->PR_TIPMOVI == _Trfe_Sai
			For nCnt1 := 1 To _Colunas
				aProvisao[_TrfSai,nCnt1] := aProvisao[_BxTrf,nCnt1]
				aProvisao[_BxTrf,nCnt1]  := 0
			Next nCnt1
		EndIf
	EndIf
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//| Se nao calcular, limpar as colunas do array (Menos o Mes Ant)|
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	fLimpaArray( @aProvisao, 0, Str(_Anter,1) )
EndIf
dbSelectArea( cAlias )

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³fQryDetSRT| Autor ³ Ricardo Duarte Costa  ³ Data ³ 22.01.07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Busca os valores da provisao no arquivo SRT				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ < vide parametros abaixo >                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ aVerba   	 - Verbas de Ferias / 13§ Sal / 14§ Sal       ³±±
±±³          ³ aTransf  	 - Funcionarios Transferidos no mes           ³±±
±±³          ³ dDataRef 	 - Data de referencia para busca dos valores  ³±±
±±³          ³ nTipoProv	 - Tipo de provisao a buscar (Venc,Prop,13§)  |±±
±±³          ³ lTrataTrf	 - Indica se deve tratar os transferidos      |±±
±±³          ³ lCalcula  	 - Indica se deve calcular o valor do mes     |±±
±±³          ³ lFerias   	 - Indica se deve buscar as ferias            |±±
±±³          ³ l13oSal       - Indica se deve buscar o 13o salario        |±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	 	 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
STATIC Function fQryDetSRT(aVerba,aTransf,dDataRef,lTrataTrf,lCalcula,lFerias,l13oSal)
Local cBusMesAnt,cBusMesAtu,nPosTrf,nPosVerba,nCnt1
Local cFilQryAnt,cMatQryAnt,cCCQryAnt,cFilQryAtu,cMatQryAtu,cCCQryAtu,cDtIQryAnt,cDtFQryAnt,cDtIQryAtu,cDtFQryAtu
Local nTpMov      := 0
Local nreg		  := 0
Local nTipoProv   := 0
Local cAlias      := ALIAS()
Local cAnoMesAnt  := MesAno( dDataRef - Day(dDataRef) )
Local cAnoMesAtu  := MesAno( dDataRef )
Local cOrdemBusca := &("{ || (cAliasSRT)->RT_FILIAL + (cAliasSRT)->RT_MAT + (cAliasSRT)->RT_CC + MesAno((cAliasSRT)->RT_DATACAL) }")
Local aProvisao   := {}
Local axFerVenc   := {}
Local axFerProp   := {}
Local ax13Salar   := {}
Local ax14Salar   := {}

If Type( "lProvResc" ) == "U"
	lProvResc := ( SuperGetMv( "MV_PROVRES",,"N" ) == "S" ) //-- Indica se devera provisionar no mes da rescisao
EndIf

If Type( "lTrfAMES" ) == "U"
	cTrfAMES     := ( SuperGetMv( "MV_TRFAMES",, Space(6) ) ) //-- Ano/Mes para inicio das demonstracoes de entrada e saida de transferencias no conceito 1 (transfere saldo origem p/ destino)
	lTrfAMES     := ( !Empty(cTrfAMES) .And. MesAno( dDataRef ) >= cTrfAMES )
EndIf

lCalcula   := If(lCalcula  == Nil, .F., lCalcula)
lFerias	   := If(lFerias   == Nil, .T., lFerias)
l13oSal    := If(l13oSal   == Nil, .T., l13oSal)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³	Chave de busca do mes anterior e atual                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cBusMesAnt := TPR->PR_FILIAL + TPR->PR_MAT + TPR->PR_CC + cAnoMesAnt
cFilQryAnt	:= "'"+TPR->PR_FILIAL+"'"
cMatQryAnt	:= "'"+TPR->PR_MAT+"'"
cCCQryAnt	:= "'"+TPR->PR_CC+"'"

cBusMesAtu := TPR->PR_FILIAL + TPR->PR_MAT + TPR->PR_CC + cAnoMesAtu
cFilQryAtu	:= "'"+TPR->PR_FILIAL+"'"
cMatQryAtu	:= "'"+TPR->PR_MAT+"'"
cCCQryAtu	:= "'"+TPR->PR_CC+"'"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se nao trata transferencia buscar C. de Custo do mes anterior|
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !lTrataTrf .Or. lTrfAMES
	nPosTrf := Ascan(aTransf, { |X| X[_TAtual,_TEmp]+X[_TAtual,_TFil]+X[_TAtual,_TCC]+X[_TAtual,_TMat] == cEmpAnt+TPR->PR_FILIAL+TPR->PR_CC+TPR->PR_MAT })
	If nPosTrf > 0
		cBusMesAnt := aTransf[nPosTrf,_TAnter,_TFil]+aTransf[nPosTrf,_TAnter,_TMat]+aTransf[nPosTrf,_TAnter,_TCC]+cAnoMesAnt
		cFilQryAnt	:= "'"+aTransf[nPosTrf,_TAnter,_TFil]+"'"
		cMatQryAnt	:= "'"+aTransf[nPosTrf,_TAnter,_TMat]+"'"
		cCCQryAnt	:= "'"+aTransf[nPosTrf,_TAnter,_TCC]+"'"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Se transferencia ocorreu apos mes atual preserva mes anterior|
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If aTransf[nPosTrf,_TAnter,_TDta] > cAnoMesAtu
			cBusMesAtu := aTransf[nPosTrf,_TAnter,_TFil]+aTransf[nPosTrf,_TAnter,_TMat]+aTransf[nPosTrf,_TAnter,_TCC]+cAnoMesAtu
			cFilQryAtu	:= "'"+aTransf[nPosTrf,_TAnter,_TFil]+"'"
			cMatQryAtu	:= "'"+aTransf[nPosTrf,_TAnter,_TMat]+"'"
			cCCQryAtu	:= "'"+aTransf[nPosTrf,_TAnter,_TCC]+"'"
		EndIf
	EndIf
EndIf

//-- Monta a query para selecao dos dados
cCposQuery	:=	"% * %"
cAliasSRT	:= "QSRT"
aStruSRT 	:= SRT->(dbStruct())
cOrdem		:= sqlorder( SRT->( IndexKey(1) ) )
cOrdem		:= "% "+cOrdem+" %"
cDtIQryAnt	:= "'"+cAnoMesAnt+"01'"
cDtFQryAnt	:= "'"+Dtos(dDataRef-Day(dDataRef))+"'"
cDtIQryAtu	:= "'"+cAnoMesAtu+"01'"
cDtFQryAtu	:= "'"+cAnoMesAtu+strzero(f_Ultdia(dDataRef),2)+"'"

cWhere		:=	"(SRT.RT_FILIAL = "+cFilQryAnt+" AND SRT.RT_MAT = "+cMatQryAnt+" AND "+;
				"SRT.RT_CC = "+cCCQryAnt+" AND SRT.RT_DATACAL BETWEEN "+cDtIQryAnt+" AND "+cDtFQryAnt+" )"
cWhere		:=	"( "+cWhere+" OR (SRT.RT_FILIAL = "+cFilQryAtu+" AND SRT.RT_MAT = "+cMatQryAtu+" AND "+;
				"SRT.RT_CC = "+cCCQryAtu+" AND SRT.RT_DATACAL BETWEEN "+cDtIQryAtu+" AND "+cDtFQryAtu+" ) )"
cWhere		:= "%"+cWhere+"%"

BeginSql alias cAliasSRT
	SELECT %exp:cCposQuery% 
	FROM %table:SRT% SRT 
	WHERE %exp:cWhere% AND SRT.%notDel% 
	ORDER BY %exp:cOrdem%
EndSql

//-- Ajusta a estrutura dos campos
For nReg := 1 To Len(aStruSRT)
	If ( aStruSRT[nReg][2] <> "C" )
		TcSetField(cAliasSRT,aStruSRT[nReg][1],aStruSRT[nReg][2],aStruSRT[nReg][3],aStruSRT[nReg][4])
	EndIf
Next nReg

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³	Limpa os arrays de provisao.                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lFerias
	fLimpaArray( @aFerVenc, 0 )
	fLimpaArray( @aFerProp, 0 )
	If !lCalcula
		fLimpaArray( @aRecVenc, 0 )
		fLimpaArray( @aRecProp, 0 )
	Endif
Endif
If l13oSal
	fLimpaArray( @a13Salar, 0 )
	fLimpaArray( @a14Salar, 0 )
	If !lCalcula
		fLimpaArray( @aRec13Sl, 0 )
		fLimpaArray( @aRec14Sl, 0 )
	Endif
Endif

dbSelectArea( cAliasSRT )

While !Eof()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Carrega o array com os valores do mes anterior. (Nao carregar³
	//³ se provisao de 13§ salario e mes de referencia for janeiro). ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Eval(cOrdemBusca) == cBusMesAnt
		//-- Somente para o registro de cabecalho
		If !((cAliasSRT)->RT_TIPPROV == str(_13Salar,1) .And. Month(dDataRef) == 1) .And. !Empty((cAliasSRT)->RT_DATABAS)
			If lFerias
				aFerVenc[_Anter,_Dias] := (cAliasSRT)->RT_DFERVEN
				aFerProp[_Anter,_Dias] := (cAliasSRT)->RT_DFERPRO
			Endif
			If l13oSal
				a13Salar[_Anter,_Avos] := (cAliasSRT)->RT_AVOS13S
			Endif
		Endif
	    nPosVerba := Ascan(aVerba, { |X| X[4] == (cAliasSRT)->RT_VERBA })
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Busca o atual do mes anterior e grava no anterior do mes     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	    If nPosVerba > 0 .And. aVerba[nPosVerba,2] == _Atual
   		    nPosCol := aVerba[nPosVerba,3]
			If lFerias
				If (cAliasSRT)->RT_TIPPROV == Str(_FerVenc,1)
					aFerVenc[_Anter,nPosCol] := (cAliasSRT)->RT_VALOR
				ElseIf (cAliasSRT)->RT_TIPPROV == Str(_FerProp,1)
					aFerProp[_Anter,nPosCol] := (cAliasSRT)->RT_VALOR
				Endif
			Endif
			If l13oSal
				If (cAliasSRT)->RT_TIPPROV == Str(_13Salar,1)
					a13Salar[_Anter,nPosCol] := (cAliasSRT)->RT_VALOR
				ElseIf (cAliasSRT)->RT_TIPPROV == Str(_14Salar,1)
					a14Salar[_Anter,nPosCol] := (cAliasSRT)->RT_VALOR
				EndIf
			Endif
		EndIf
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Carrega o array com os valores do mes atual                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Eval(cOrdemBusca) == cBusMesAtu
		//-- Somente para o registro de cabecalho
		If !Empty((cAliasSRT)->RT_DATABAS)
			nTpMov := (cAliasSRT)->RT_TIPMOVI
			If lFerias
				aFerVenc[_NoMes,_Dias] := (cAliasSRT)->RT_DFALVEN
				aFerVenc[_Atual,_Dias] := (cAliasSRT)->RT_DFERVEN-If((cAliasSRT)->RT_DFERVEN > 0, (cAliasSRT)->RT_DFERANT,0)-(cAliasSRT)->RT_DFALVEN
				aFerProp[_NoMes,_Dias] := (cAliasSRT)->RT_DFALPRO
				aFerProp[_Atual,_Dias] := (cAliasSRT)->RT_DFERPRO-(cAliasSRT)->RT_DFALPRO
			Endif
			If l13oSal
				a13Salar[_NoMes,_Avos] := (cAliasSRT)->RT_AVOS13S	
			Endif
		Endif
    	nPosVerba := Ascan(aVerba, { |X| X[4] == (cAliasSRT)->RT_VERBA })
    	If nPosVerba > 0
			nPosLin := aVerba[nPosVerba,2]
			nPosCol := aVerba[nPosVerba,3]
			If lFerias
				If (cAliasSRT)->RT_TIPPROV == Str(_FerVenc,1)
					If lCalcula
						aFerVenc[nPosLin,nPosCol] := (cAliasSRT)->RT_VALOR
					Else
						aRecVenc[nPosLin,nPosCol]   := (cAliasSRT)->R_E_C_N_O_
					Endif
				ElseIf (cAliasSRT)->RT_TIPPROV == Str(_FerProp,1)
					If lCalcula
						aFerProp[nPosLin,nPosCol] := (cAliasSRT)->RT_VALOR
					Else
						aRecProp[nPosLin,nPosCol]   := (cAliasSRT)->R_E_C_N_O_
					Endif
				Endif
			Endif
			If l13oSal
				If (cAliasSRT)->RT_TIPPROV == Str(_13Salar,1)
					If lCalcula
						a13Salar[nPosLin,nPosCol] := (cAliasSRT)->RT_VALOR
					Else
						aRec13Sl[nPosLin,nPosCol]   := (cAliasSRT)->R_E_C_N_O_
					Endif
				ElseIf (cAliasSRT)->RT_TIPPROV == Str(_14Salar,1)
					If lCalcula
						a14Salar[nPosLin,nPosCol] := (cAliasSRT)->RT_VALOR
					Else
						aRec14Sl[nPosLin,nPosCol]   := (cAliasSRT)->R_E_C_N_O_
					Endif
				EndIf
			Endif
		EndIf
	EndIf
	dbSkip()
EndDo
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calcula os valores de Baixa e o valor No Mes 			     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lCalcula

	//-- Salva a informacao antes de processar o calculo da provisao no mes
	If lFerias
		axFerVenc	:= aClone(aFerVenc)
		axFerProp	:= aClone(aFerProp)
	Endif
	If l13oSal
		ax13Salar	:= aClone(a13Salar)
		ax14Salar	:= aClone(a14Salar)
	Endif

	For nTipoProv := 1 to 4

		If ( l13oSal .And. (nTipoProv == 3 .Or. nTipoProv == 4) ) .Or.;
		   ( lFerias .And. (nTipoProv == 1 .Or. nTipoProv == 2) )
			//-- Verifica o tipo de provisao a ser processado
			If nTipoProv == 1 
				aProvisao	:= aFerVenc
			ElseIf nTipoProv == 2
				aProvisao	:= aFerProp
			ElseIf nTipoProv == 3
				aProvisao	:= a13Salar
			ElseIf nTipoProv == 4
				aProvisao	:= a14Salar
			Endif
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Gravar valores coluna de rescisao quando nao existir identif.|
			//| de rescisao pois,neste caso, a baixa estara na coluna ferias.|
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nTpMov == _Demitido
				fChkDemit(aProvisao,aVerba,nTipoProv,_BxRes,_BxFer)
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//| Total de baixas                                              |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aProvisao[_BxTot,_Prov] := aProvisao[_BxTrf,_Prov]+aProvisao[_BxFer,_Prov]+aProvisao[_BxRes,_Prov]
			aProvisao[_BxTot,_Adic] := aProvisao[_BxTrf,_Adic]+aProvisao[_BxFer,_Adic]+aProvisao[_BxRes,_Adic]
			If cPaisLoc == "URU"
				aProvisao[_BxTot,_SalV] := aProvisao[_BxTrf,_SalV]+aProvisao[_BxFer,_SalV]+aProvisao[_BxRes,_SalV]
			Endif
			aProvisao[_BxTot,_1Ter] := aProvisao[_BxTrf,_1Ter]+aProvisao[_BxFer,_1Ter]+aProvisao[_BxRes,_1Ter]
			aProvisao[_BxTot,_INSS] := aProvisao[_BxTrf,_INSS]+aProvisao[_BxFer,_INSS]+aProvisao[_BxRes,_INSS]
			aProvisao[_BxTot,_FGTS] := aProvisao[_BxTrf,_FGTS]+aProvisao[_BxFer,_FGTS]+aProvisao[_BxRes,_FGTS]
			aProvisao[_BxTot,_PIS]  := aProvisao[_BxTrf,_PIS] +aProvisao[_BxFer,_PIS] +aProvisao[_BxRes,_PIS]
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//| Provisao do Mes												 |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aProvisao[_NoMes,_Prov] := aProvisao[_Atual,_Prov]-aProvisao[_Anter,_Prov]+If( nTpMov == _Demitido .And. lProvResc, 0, aProvisao[_BxTot,_Prov] )
			aProvisao[_NoMes,_Adic] := aProvisao[_Atual,_Adic]-aProvisao[_Anter,_Adic]+If( nTpMov == _Demitido .And. lProvResc, 0, aProvisao[_BxTot,_Adic] )
			If cPaisLoc == "URU"
				aProvisao[_NoMes,_SalV] := aProvisao[_Atual,_SalV]-aProvisao[_Anter,_SalV]+aProvisao[_BxTot,_SalV]
			Endif
			aProvisao[_NoMes,_1Ter] := aProvisao[_Atual,_1Ter]-aProvisao[_Anter,_1Ter]+If( nTpMov == _Demitido .And. lProvResc, 0, aProvisao[_BxTot,_1Ter] )
			aProvisao[_NoMes,_INSS] := aProvisao[_Atual,_INSS]-aProvisao[_Anter,_INSS]+If( nTpMov == _Demitido .And. lProvResc, 0, aProvisao[_BxTot,_INSS] )
			aProvisao[_NoMes,_FGTS] := aProvisao[_Atual,_FGTS]-aProvisao[_Anter,_FGTS]+If( nTpMov == _Demitido .And. lProvResc, 0, aProvisao[_BxTot,_FGTS] )
			aProvisao[_NoMes,_PIS]  := aProvisao[_Atual,_PIS] -aProvisao[_Anter,_PIS] +If( nTpMov == _Demitido .And. lProvResc, 0, aProvisao[_BxTot,_PIS]  )
		
			If lProvResc .And. nTpMov == _Demitido
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//| Zera a linha de provisao atual quando o funcionario estiver demitido|
				//| e o parametro MV_PROVRES estiver configurado com "S"                |
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				For nCnt1 := 1 To _Colunas
					aProvisao[_Atual,nCnt1]	:= 0
				Next nCnt1
			Endif
		
			If lTrfAMES
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//| Transfere o saldo anterior para a coluna Transf. Entrada	 |
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If TPR->PR_TIPMOVI == _Trfe_Ent
					For nCnt1 := 1 To _Colunas
						aProvisao[_TrfEnt,nCnt1] := aProvisao[_Anter,nCnt1]
						aProvisao[_Anter,nCnt1]  := 0
					Next nCnt1
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//| Transfere o saldo de Baixa por Transf. p/coluna Transf. Saida|
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				ElseIf TPR->PR_TIPMOVI == _Trfe_Sai
					For nCnt1 := 1 To _Colunas
						aProvisao[_TrfSai,nCnt1] := aProvisao[_BxTrf,nCnt1]
						aProvisao[_BxTrf,nCnt1]  := 0
					Next nCnt1
				EndIf
			EndIf
	
			//-- Salva o array processado
			If nTipoProv == 1 
				axFerVenc	:= aClone(aProvisao)
			ElseIf nTipoProv == 2
				axFerProp	:= aClone(aProvisao)
			ElseIf nTipoProv == 3
				ax13Salar	:= aClone(aProvisao)
			ElseIf nTipoProv == 4
				ax14Salar	:= aClone(aProvisao)
			Endif
		Endif

	Next nTipoProv

	//-- Devolve o array para o processo normal
	If lFerias
		aFerVenc	:= aClone(axFerVenc)
		aFerProp	:= aClone(axFerProp)
	Endif
	If l13oSal
		a13Salar	:= aClone(ax13Salar)
		a14Salar	:= aClone(ax14Salar)
	Endif
	
EndIf

(cAliasSRT)->(dbCloseArea())
dbSelectArea( cAlias )

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³ fGeraSRT ³ Autor ³ Emerson R. de Souza	³ Data ³ 26.06.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Grava os valores da provisao no arquivo SRT				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fGeraSRT(aProvisao,aVerba,dDataRef,nTipoMovMes,nSalMes...) ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ aProvisao	 - Array que contera os valores da provisao	  ³±±
±±³          ³ aVerba   	 - Verbas de Ferias / 13§Sal / 14§Sal         ³±±
±±³          ³ aRecnos   	 - Indica os recnos que serao avaliados       ³±±
±±³          ³ dDataRef   	 - Data de referencia p/ gravacao dos valores ³±±
±±³          ³ nTipoMovMes 	 - Tipo de movimentacao no mes                |±±
±±³          ³ nSalMes  	 - Valor do salario no mes                    ³±±
±±³          ³ dDtBasFer  	 - Data base de ferias                        ³±±
±±³          ³ nDiaFeAnt  	 - Dias de ferias antecipadas                 ³±±
±±³          ³ nTipoProv	 - Tipo de provisao a buscar (Venc,Prop,13§)  |±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	 	 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fGeraSRT(aProvisao,aRecnos,aVerba,dDataRef,nTipoMovMes,nSalMes,dDtBasFer,nDiaFeAnt,nTipoProv)
Local cAlias    := Alias(), nTipo2, nTipo3, nCnt
Local nProvBus  := If(nTipoProv == _FerProp,_FerVenc,nTipoProv)
Local cFilAux   := cFilAnt
Local lCabProp  := .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posiciona cFilAnt na filial corrente p/ garantir Integridade ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cFilAnt := TPR->PR_FILIAL

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se nao existir identificadores de baixa de rescisao,somar na |
//³ coluna de baixa de ferias e zerar coluna de baixa de rescisao|
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
fChkDemit(aProvisao,aVerba,nTipoProv,_BxFer,_BxRes)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para checar registros perdidos no SRT.      |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("GP070CHK")
	ExecBlock("GP070CHK",.F.,.F.)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava o array provisao no arquivo SRT                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( "SRT" )
dbSetOrder(1)
For nTipo2 := 1 To _Linhas
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Linhas que nao deverao ser gravadas no arquivo				 |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nTipo2 == _Anter .Or. nTipo2 == _NoMes .Or. nTipo2 == _BxTot
		Loop
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava as colunas de valores no arquivo detalhe               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nTipo3 := 1 To _Colunas
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Busca a verba e grava os lancamentos no arquivo detalhe      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
        nPosVerba := Ascan(aVerba, { |X| X[1] == nProvBus .And. X[2] == nTipo2 .And. X[3] == nTipo3 })
        cCodVerba := If( nPosVerba > 0, aVerba[nPosVerba,4], Space(3) )
        If !Empty(cCodVerba)
	        If aRecnos[nTipo2,nTipo3] > 0
    	    	dbGoTo( aRecnos[nTipo2,nTipo3] )
        		RecLock( "SRT", .F. )
		    	If aProvisao[nTipo2,nTipo3] == 0
					dbDelete()
					MsUnlock()
					Loop
				EndIf
			Else
				If aProvisao[nTipo2,nTipo3] # 0
					RecLock( "SRT", .T. )
				Else
					Loop
				EndIf        
        	EndIf
			SRT->RT_FILIAL  := TPR->PR_FILIAL
			SRT->RT_MAT     := TPR->PR_MAT
			SRT->RT_CC      := TPR->PR_CC
			If lTemItem .and. lTemClVl
				SRT->RT_ITEM    := TPR->PR_ITEM
				SRT->RT_CLVL    := TPR->PR_CLVL
	        EndIf
			SRT->RT_TIPPROV := Str(nTipoProv,1)
			SRT->RT_VERBA   := cCodVerba
			SRT->RT_VALOR   := aProvisao[nTipo2,nTipo3]
			SRT->RT_DATACAL := dDataRef
			MsUnlock()
		EndIf
	Next nTipo3
Next nTipo2

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava as informacoes de cabecalho						     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If dbSeek( TPR->PR_FILIAL + TPR->PR_MAT + TPR->PR_CC + MesAno(dDataRef) ) .Or.;
   ( lCabProp := ( nTipoProv == _FerProp .And. aProvisao[_Anter,_Dias] > 0 ) )
	If lCabProp
		RecLock( "SRT", .T. )
		SRT->RT_FILIAL  := TPR->PR_FILIAL
		SRT->RT_MAT     := TPR->PR_MAT
		SRT->RT_CC      := TPR->PR_CC
		If lTemItem .and. lTemClVl
			SRT->RT_ITEM    := TPR->PR_ITEM
			SRT->RT_CLVL    := TPR->PR_CLVL
        EndIf
		SRT->RT_TIPPROV := Str(nTipoProv,1)
		SRT->RT_VERBA   := ""
		SRT->RT_VALOR   := 0.00
		SRT->RT_DATACAL := dDataRef
	Else
		RecLock( "SRT", .F. )
	EndIf
	SRT->RT_DATABAS := dDtBasFer
	SRT->RT_DFERANT := nDiaFeAnt
	SRT->RT_DFALVEN := nV_DFalFer
	SRT->RT_DFALPRO := nP_DFalFer
	SRT->RT_TIPMOVI := nTipoMovMes
	SRT->RT_SALARIO := nSalMes
	If nTipoProv == _FerVenc
		SRT->RT_DFERVEN := aProvisao[_Atual,_Dias]
	ElseIf nTipoProv == _FerProp
		SRT->RT_DFERPRO := aProvisao[_Atual,_Dias]
	ElseIf nTipoProv == _13Salar
		SRT->RT_AVOS13S := aProvisao[_Atual,_Avos]
	EndIf
	MsUnLock()
EndIf
dbSelectArea( cAlias )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Retorna filial original para o cFilAnt                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cFilAnt := cFilAux

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³ fChkIdent   ³ Autor ³ Emerson R. de Souza³ Data ³ 15.07.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Verifica a existencia de identificadores                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fChkIdent(aVerba,nTipProv,aTipId,lGeraLog)          		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³  aVerba   -Array com os identificadores a ser pesquisado   ³±±
±±³          ³  nTipProv -Tipo de provisao (Ferias,13§,14§)               ³±±
±±³          ³  aTipId   -Identificadores pesquisados(Trf,Res,Correcao)   ³±±
±±³          ³  lGeraLog -Indica se deve incluir o ident. em aIdProvis    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	 	 ³ Generico   												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fChkIdent(aVerba,nTipProv,aTipId,lGeraLog)
Local nCnt1, nCnt2, nPosElem, aElem := { _Prov, _Adic, _1Ter, _INSS, _FGTS }
Local aIdAuxTrf   := {}, lRet := .T.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Busca o Tipo de Provisao, Tipo de Identificador e Coluna da  ³
//³ Provisao. Se encontrou, verifica se cadastrou o identificador³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nCnt1  := 1 To Len(aTipId)
	nTipId := aTipId[nCnt1]
	For nCnt2 := 1 To Len(aElem)
		nPosElem := Ascan(aVerba, { |X| X[1] == nTipProv .And. X[2] == nTipId .And. X[3] == aElem[nCnt2] })
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Array contendo as verbas nao cadastradas ou Ident. de Transf.³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nPosElem > 0
			If ( Type("aIdProvis") == "A" .And. lGeraLog )
				Aadd( aIdProvis, { aVerba[nPosElem,4], aVerba[nPosElem,5], nTipProv, nTipId } )
			EndIf
			If Empty(aVerba[nPosElem,4])
				lRet := .F.
			EndIf
		EndIf
	Next nCnt2
Next nCnt1

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³fGravArray| Autor ³ Emerson Rosa de Souza ³ Data ³ 15.07.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Trata as baixas de transferencia e rescisao                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fGravArray(aProvisao, nElem1, nElem2, nIndice, aZerar)	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ aProvisao - Array contendo os valores da provisao		  ³±±
±±³          ³ nElem1    - Elemento que recebera o conteudo de gravacao	  |±±
±±³          ³ nElem2    - Elemento que sera gravado em nElem1         	  |±±
±±³          ³ nIndCorr  - Indice de correcao                          	  |±±
±±³          ³ aZerar	 - Elementos que deverao ser zerados		  	  |±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Static Function fGravArray(aProvisao, nElem1, nElem2, nIndCorr, aZerar)
Local  nCnt1	:= 0 

aProvisao[nElem1,_Dias] := NoRound( aProvisao[nElem2,_Dias] * nIndCorr )
aProvisao[nElem1,_Prov] := NoRound( aProvisao[nElem2,_Prov] * nIndCorr )
aProvisao[nElem1,_Adic] := NoRound( aProvisao[nElem2,_Adic] * nIndCorr )
If cPaisLoc == "URU"
	aProvisao[nElem1,_SalV] := NoRound( aProvisao[nElem2,_SalV] * nIndCorr )
Endif
aProvisao[nElem1,_1Ter] := NoRound( aProvisao[nElem2,_1Ter] * nIndCorr )
aProvisao[nElem1,_INSS] := NoRound( aProvisao[nElem2,_INSS] * nIndCorr )
aProvisao[nElem1,_FGTS] := NoRound( aProvisao[nElem2,_FGTS] * nIndCorr )
aProvisao[nElem1,_PIS]  := NoRound( aProvisao[nElem2,_PIS]  * nIndCorr )

For nCnt1 := 1 To Len(aZerar)
	aProvisao[ nElem1,aZerar[nCnt1]  ] := 0
Next nCnt1

Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³fMonta_TPR³ Autor ³ Emerson Rosa de Souza	³ Data ³ 02.03.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Monta Arquivo de Trabalho para impressao da provisao       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³fMonta_TPR(cTPRDbf,cTPRNtx,nOrdem,dDataRef,lSalInc,lTrataTrf³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cTPRDbf   - Arquivo DBF temporario                         ³±±
±±³          ³ cTPRNtx   - Arquivo NTX temporario                         ³±±
±±³          ³ nOrdem    - Ordem de Calculo ou Impressao                  ³±±
±±³          ³ dDataRef  - Data de referencia para Calculo ou Impressao   ³±±
±±³          ³ lSalInc   - Indica se existe salario incorporado           ³±±
±±³          ³ lTrataTrf - Indica se deve tratar transferidos             ³±±
±±³          ³ aTransf   - Array que contera os transferidos no mes       ³±±
±±³          ³ lIncDemit - Indica se deve incluir os demitidos            ³±±
±±³          ³ cAcessaArq- Indica se tem dereito de acesso                ³±±
±±³          ³ lIncTodos - Indica se deve incluir todos os funcionarios   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
STATIC Function fMonta_TPR(cTPRDbf,cTPRNtx,nOrdem,dDataRef,lSalInc,lTrataTrf,aTransf,lIncDemit,cAcessaArq,lIncTodos,lTodosCpos)
Local nTpMv,cInicio,cFim,cIndCond,nK1,nK2,aVerbaProv,nPosFunc,nTrfProc
Local cSitFolh,cTipAfas,cCposQuery
Local aCodFol := {},aStruSRA := {}
Local bChkSRA,bChkSRE
Local cAliasSRA		:= "SRA"
Local cOrdem		:= ""
Local nReg			:= 0

lIncDemit  := If(lIncDemit  == Nil,  .T., lIncDemit)
lIncTodos  := If(lIncTodos  == Nil, .F., lIncTodos)
lTemItem   := If(Type("lTemItem") == "U", SRA->( FieldPos( "RA_ITEM" ) # 0 ), lTemItem)
lTemClVl   := If(Type("lTemClVl") == "U", SRA->( FieldPos( "RA_CLVL" ) # 0 ), lTemClVl)
lTodosCpos := If(lTodosCpos == Nil, .F., lTodosCpos)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se foi passado Bloco, String ou Nil				 |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cAcessaArq == Nil .Or. Empty( cAcessaArq )
	bChkSRA := &( "{ || .T.}" )
	bChkSRE := &( "{ || .T.}" )
ElseIf ValType(cAcessaArq) == "B"
	bChkSRA := cAcessaArq
	bChkSRE := &( "{ || .T.}" )
ElseIf ValType(cAcessaArq) == "C"
	bChkSRA := &( cAcessaArq )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Se houve C.Custo no filtro trocar pelo array aTransf.		 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If AT( "RA_CC", cAcessaArq ) > 0
		cAcessaArq := STRTRAN(  cAcessaArq, "RA_CC", "aTransf[nK1,nTrfProc,_TCC]" )
	EndIf
	bChkSRE := &( cAcessaArq )
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica a existencia dos identificadores de transferencia	 |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lTrataTrf := .F.
If Fp_CodFol(@aCodFol,cFilAnt)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Carrega os identificadores da provisao e testa se existem	 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	fIdentProv(@aVerbaProv,aCodFol)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica a existencia dos identificadores de transferencia	 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lTrataTrf := ( fChkIdent(aVerbaProv,_FerVenc,{_BxTrf},.F.) .And.;
					fChkIdent(aVerbaProv,_13Salar,{_BxTrf},.F.) )

EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verificar se existe Campo Sal.Incorporado no cadastro      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SX3")
dbSetOrder( 2 )
If dbSeek("RA_SALINCO")
	lSalInc := .T.
Endif
dbsetOrder( 1 )

//-- campos da query
#IFDEF TOP 
	If lTodosCpos
		cCposQuery	:= "% * %"
	Else
		cCposQuery	:=	"RA_FILIAL, RA_MAT, RA_NOME, RA_CC, RA_CATFUNC, RA_ADMISSA, RA_SITFOLH, RA_AFASFGT, "+;
						"RA_DEMISSA, RA_TPCONTR, RA_HRSMES, RA_PERICUL, RA_ADTPOSE, RA_INSMIN, RA_INSMED, RA_INSMAX"
		cCposQuery	+= If(lSalInc,", RA_SALINCO","")
		cCposQuery	+= If(lTemItem .And. lTemClvl,", RA_ITEM, RA_CLVL","")
		cCposQuery	:=	"% "+cCposQuery+" %"
	Endif
	cAliasSRA	:= "QSRA"
	aStruSRA 	:= SRA->(dbStruct())
	cOrdem		:= sqlorder( SRA->( IndexKey( If(nOrdem==4,8,nOrdem) ) ) )
	cOrdem		:= "% "+cOrdem+" %"
	cCatQuery := ""
	For nReg:=1 to Len(cCateg)
		cCatQuery += "'"+Subs(cCateg,nReg,1)+"'"
		If ( nReg+1 ) <= Len(cCateg)
			cCatQuery += "," 
		Endif
	Next nReg
	cCatQuery	:= "%" + cCatQuery + "%"
	cDemissa	:= "( SRA.RA_DEMISSA = '        ' OR SRA.RA_DEMISSA > '"+DTOS(dDataRef-day(dDataRef))+"' )"
	cDemissa	:= "% "+cDemissa+" %"

	BeginSql alias cAliasSRA
		SELECT %exp:cCposQuery%
		FROM %table:SRA% SRA
		WHERE  SRA.RA_FILIAL >= %exp:cFilDe% AND SRA.RA_FILIAL <= %exp:cFilAte% AND
			   SRA.RA_MAT >= %exp:cMatDe% AND SRA.RA_MAT <= %exp:cMatAte% AND
			   SRA.RA_CC >= %exp:cCCDe% AND SRA.RA_CC <= %exp:cCCAte% AND
			   SRA.RA_NOME >= %exp:cNomeDe% AND SRA.RA_NOME <= %exp:cNomeAte% AND
		       SRA.RA_CATFUNC IN (%exp:Upper(cCatQuery)%) AND
		       SRA.RA_ADMISSA <= %exp:dtos(dDataRef)% AND
		       %exp:cDemissa% AND
			   SRA.%notDel%   
		ORDER BY %exp:cOrdem%
	EndSql

	//-- Ajusta a estrutura dos campos
	For nReg := 1 To Len(aStruSRA)
		If ( aStruSRA[nReg][2] <> "C" ) .And. If(!lTodosCpos,aStruSRA[nReg][1]$cCposQuery,.T.)
			TcSetField(cAliasSRA,aStruSRA[nReg][1],aStruSRA[nReg][2],aStruSRA[nReg][3],aStruSRA[nReg][4])
		EndIf
	Next nReg
#ELSE
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posiciona o SRA para a leitura e define indice para o TPR  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea( "SRA" )
	dbSetOrder( If(nOrdem == 4, 8, nOrdem) )
	If nOrdem == 1
		dbSeek( cFilDe + cMatDe, .T. )
	ElseIf nOrdem == 2
		dbSeek( cFilDe + cCcDe + cMatDe, .T. )
	ElseIf nOrdem == 3
		dbSeek( cFilDe + cNomeDe + cMatDe, .T. )
	ElseIf nOrdem == 4
		dbSeek( cFilDe + cCcDe + cNomeDe, .T. )
	Endif
#ENDIF

//-- Ordem do arquivo temporario
If nOrdem == 1
	cInicio  := (cAliasSRA)+"->RA_FILIAL+"+(cAliasSRA)+"->RA_MAT"
	cFim	 := cFilAte + cMatAte
	cIndCond := "PR_FILIAL + PR_MAT"
ElseIf nOrdem == 2
	cInicio  := (cAliasSRA)+"->RA_FILIAL+"+(cAliasSRA)+"->RA_CC+"+(cAliasSRA)+"->RA_MAT"
	cFim	 := cFilAte + cCcAte + cMatAte
	cIndCond := "PR_FILIAL + PR_CC + PR_MAT"	
ElseIf nOrdem == 3
	cInicio  := (cAliasSRA)+"->RA_FILIAL+"+(cAliasSRA)+"->RA_NOME+"+(cAliasSRA)+"->RA_MAT"	
	cFim	 := cFilAte + cNomeAte + cMatAte
	cIndCond := "PR_FILIAL + PR_NOME + PR_MAT"	
ElseIf nOrdem == 4
	cInicio  := (cAliasSRA)+"->RA_FILIAL+"+(cAliasSRA)+"->RA_CC+"+(cAliasSRA)+"->RA_NOME"
	cFim	 := cFilAte + cCcAte + cNomeAte
	cIndCond := "PR_FILIAL + PR_CC + PR_NOME"	
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta Matriz com os Funcionarios Transferidos No Mes       |
//| Conteudo da Matriz - Empresa + Filial + CC + Matricula     |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aTransf := {}
fSeleTransf( @aTransf, dDataRef )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria o arquivo temporario "TPR" para impressao da provisao ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Cria_TPR(@cTPRDbf,@cTPRNtx,cIndCond)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Seleciona o SRA para a montagem do arquivo TPR			   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( cAliasSRa )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega Regua de Processamento						  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ProcRegua(RecCount())

While !Eof() .And. &cInicio <= cFim

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Movimenta Regua de Processamento							 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
  	IncProc(STR0014) // "Selecionando Registros..."

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Indica o tipo de movimento do funcionario				     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nTpMv := 0

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Consiste Parametrizacao do Intervalo de Impressao			 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	#IFNDEF TOP 
		If !lIncTodos
			If ((cAliasSRA)->RA_NOME < cNomeDe) .Or. ((cAliasSRA)->RA_NOME > cNomeAte) .Or. ;
				((cAliasSRA)->RA_MAT < cMatDe)	 .Or. ((cAliasSRA)->RA_MAT > cMatAte)	.Or. ;
				((cAliasSRA)->RA_CC < cCcDe)	 .Or. ((cAliasSRA)->RA_CC > cCCAte)
				dbSkip()
				Loop
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Consiste Categoria do Funcionario              			     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !((cAliasSRA)->RA_CATFUNC $ cCateg)
				dbSkip()
				Loop
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Consiste Admissao do Funcionario              			     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If (cAliasSRA)->RA_ADMISSA > dDataRef
				dbSkip()
				Loop
			EndIf
		Endif
	#ENDIF

	If !lIncTodos
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Consiste controle de acessos e filiais validas               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !((cAliasSRA)->RA_FILIAL $ fValidFil()) .Or. !Eval(bChkSRA)
			dbSkip()
			Loop
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Consiste Demissao e Transferencia (Se for Transferencia saida³
		//³ despreza o funcionario pois sera tratado no array aTransf.   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If (cAliasSRA)->RA_SITFOLH == "D"
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Se transf. saida no Mes/Ano e nao encontrar no array indica  ³
			//³ que e uma transferencia entre empresas e dever ser incluido  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nPosFunc := Ascan(aTransf, { |X| X[_TAnter,_TEmp]+X[_TAnter,_TFil]+X[_TAnter,_TCC]+X[_TAnter,_TMat] == cEmpAnt+(cAliasSRA)->RA_FILIAL+(cAliasSRA)->RA_CC+(cAliasSRA)->RA_MAT })
			If MesAno((cAliasSRA)->RA_DEMISSA) == MesAno(dDataRef) .And. ( (cAliasSRA)->RA_AFASFGT $ "5*N" ) .And. nPosFunc == 0
				nTpMv := _Trfe_Sai
			ElseIf MesAno((cAliasSRA)->RA_DEMISSA) == MesAno(dDataRef) .And. !( (cAliasSRA)->RA_AFASFGT $ "5*N" ) .And. lIncDemit
				nTpMv := _Demitido
			ElseIf MesAno((cAliasSRA)->RA_DEMISSA) < MesAno(dDataRef) .Or. (( (cAliasSRA)->RA_AFASFGT $ "5*N" ) .And. nPosFunc > 0) .Or.;
				   (MesAno((cAliasSRA)->RA_DEMISSA) == MesAno(dDataRef) .And. !lIncDemit)
				dbSkip()
				Loop
			EndIf
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se funcionario foi transferido apos data referencia ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nPosFunc := Ascan(aTransf, { |X| X[_TDest,_TEmp]+X[_TDest,_TFil]+X[_TDest,_TCC]+X[_TDest,_TMat] == cEmpAnt+(cAliasSRA)->RA_FILIAL+(cAliasSRA)->RA_CC+(cAliasSRA)->RA_MAT })
	If nPosFunc > 0
		If aTransf[nPosFunc,_TDest,_TDta] > MesAno(dDataRef)
			dbSelectArea( cAliasSRA )
			dbSkip()
			Loop
		EndIf
		aTransf[nPosFunc,_TDest,_TInc] := .T.  // Marca funcionario para que nao seja incluido
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se e Transferencia Entrada  						 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nTpMv == 0
		nPosFunc := Ascan(aTransf, { |X| X[_TAtual,_TEmp]+X[_TAtual,_TFil]+X[_TAtual,_TCC]+X[_TAtual,_TMat] == cEmpAnt+(cAliasSRA)->RA_FILIAL+(cAliasSRA)->RA_CC+(cAliasSRA)->RA_MAT })
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Se transferido apos data de referencia, despreza funcionario,³
		//³ caso contrario, marca transf. entrada para calculo/impressao ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nPosFunc > 0
			If aTransf[nPosFunc,_TAtual,_TDta] == MesAno(dDataRef)
				nTpMv := _Trfe_Ent 						 // Transferencia Entrada
				aTransf[nPosFunc,_TAtual,_TInc] := .T.  // Marca funcionario para que nao seja incluido
			Else
				dbSelectArea( cAliasSRA )
				dbSkip()
				Loop
			EndIf
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se esta afastado na data de referencia do calculo	 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cSitFolh := cTipAfas := ""
	fChkAfas((cAliasSRA)->RA_FILIAL,(cAliasSRA)->RA_MAT,dDataRef,,,@cTipAfas)
	cSitFolh := If( !Empty(cTipAfas) .And. cTipAfas # "F", "A", cSitFolh)

	dbSelectArea( "TPR" )
   RecLock( "TPR", .T. )
	TPR->PR_FILIAL  := (cAliasSRA)->RA_FILIAL
	TPR->PR_MAT     := (cAliasSRA)->RA_MAT
	TPR->PR_NOME    := (cAliasSRA)->RA_NOME
	TPR->PR_CC      := (cAliasSRA)->RA_CC  
	If lTemItem .and. lTemClVl
		TPR->PR_ITEM := (cAliasSRA)->RA_ITEM  
		TPR->PR_CLVL := (cAliasSRA)->RA_CLVL  
	EndIf
	TPR->PR_ADMISSA := (cAliasSRA)->RA_ADMISSA
	TPR->PR_DEMISSA := (cAliasSRA)->RA_DEMISSA
	TPR->PR_SITFOLH := cSitFolh
	TPR->PR_AFASFGT := cTipAfas
	TPR->PR_TPCONTR := (cAliasSRA)->RA_TPCONTR
	TPR->PR_HRSMES  := (cAliasSRA)->RA_HRSMES
	TPR->PR_PERICUL := (cAliasSRA)->RA_PERICUL
	TPR->PR_INSMIN	 := (cAliasSra)->RA_INSMIN
	TPR->PR_INSMED	 := (cAliasSra)->RA_INSMED
	TPR->PR_INSMAX	 := (cAliasSra)->RA_INSMAX
	TPR->PR_ADTPOSE := (cAliasSra)->RA_ADTPOSE
	TPR->PR_TIPMOVI := nTpMv  // Demitido, Transf. Saida ou Transf. Entrada
	If lSalInc
		TPR->PR_SALINCO := (cAliasSRA)->RA_SALINCO
	EndIf
	MsUnlock()
	dbSelectArea( cAliasSRA )
	dbSkip()
EndDo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Garante Ordem 1 Para Busca dos Funcionarios				   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( "SRA" )
dbSetOrder(1)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inclui os transferidos entre CC no arquivo de provisao³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nK1 := 1 To Len(aTransf)
	dbSelectArea( "SRA" )
	If dbSeek( aTransf[nK1,_TDest,_TFil] + aTransf[nK1,_TDest,_TMat] )

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Consiste Categoria e Demissao do Funcionario   			     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !(SRA->RA_CATFUNC $ cCateg) .Or. ( SRA->RA_SITFOLH == "D" .And.;
		   MesAno(SRA->RA_DEMISSA) < MesAno(dDataRef) )
			Loop
		EndIf
		For nK2 := 1 To 2
				
			nTrfProc := If(nK2 == 1, _TAnter, _TAtual)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verificacao do elemento ANTERIOR do array aTransf            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nK2 == 1
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Se nao trata transferido, nao incluir transferencia ORIGEM   ³
				//³ efetuada no mes de processamento. Somente incluir posteriores³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If !lTrataTrf .And. aTransf[nK1,_TAnter,_TDta] == MesAno(dDataRef)
					Loop
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se os elementos ANTERIOR e ATUAL sao iguais ou se a ³
				//³ transferencia ANTERIOR para ATUAL foi entre filial.          ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If (aTransf[nK1,_TAnter,_TFil]+aTransf[nK1,_TAnter,_TCC]+aTransf[nK1,_TAnter,_TMat]==;
				    aTransf[nK1,_TAtual,_TFil]+aTransf[nK1,_TAtual,_TCC]+aTransf[nK1,_TAtual,_TMat])
				    Loop
				EndIf
			Else
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se ATUAL == DESTINO e se ja inclui DESTINO			 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If (aTransf[nK1,_TAtual,_TFil]+aTransf[nK1,_TAtual,_TCC]+aTransf[nK1,_TAtual,_TMat]==;
				    aTransf[nK1,_TDest,_TFil]+aTransf[nK1,_TDest,_TCC]+aTransf[nK1,_TDest,_TMat] .And. aTransf[nK1,_TDest,_TInc])
				    Loop
				EndIf
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Consiste parametros selecionado pelo usuario				 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If 	(aTransf[nK1,nTrfProc,_TFil] < cFilDe)	.Or. (aTransf[nK1,nTrfProc,_TFil] > cFilAte) .Or. ;
				(aTransf[nK1,nTrfProc,_TCC]  < cCcDe)	.Or. (aTransf[nK1,nTrfProc,_TCC]  > cCCAte)  .Or. ;
				(aTransf[nK1,nTrfProc,_TMat] < cMatDe)	.Or. (aTransf[nK1,nTrfProc,_TMat] > cMatAte) .Or. ;
				(SRA->RA_NOME < cNomeDe) .Or. (SRA->RA_NOME > cNomeAte)
				Loop
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Consiste controle de acessos e filiais validas               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !SRA->( Eval( bChkSRE ) )
				Loop
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se funcionario ja foi incluido        			     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		   	dbSelectArea( "TPR" )
			If !aTransf[nK1,nTrfProc,_TInc]
			    RecLock( "TPR", .T. )
				TPR->PR_FILIAL  := aTransf[nK1,nTrfProc,_TFil] // Filial De
				TPR->PR_MAT     := aTransf[nK1,nTrfProc,_TMat] // Matricula De
				TPR->PR_CC      := aTransf[nK1,nTrfProc,_TCC]  // Centro de Custo De
				TPR->PR_NOME    := SRA->RA_NOME
				TPR->PR_ADMISSA := SRA->RA_ADMISSA
				TPR->PR_DEMISSA := SRA->RA_DEMISSA
				TPR->PR_SITFOLH := SRA->RA_SITFOLH
				TPR->PR_AFASFGT := SRA->RA_AFASFGT
				TPR->PR_TPCONTR := SRA->RA_TPCONTR
				TPR->PR_HRSMES  := SRA->RA_HRSMES
				TPR->PR_PERICUL := SRA->RA_PERICUL
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Se transferido no mes/ano da referencia, indica saida.³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If nK2 == 1 .And. aTransf[nK1,_TAnter,_TDta] == MesAno(dDataRef)
					TPR->PR_TIPMOVI := _Trfe_Sai
				ElseIf nK2 == 2 .And. aTransf[nK1,_TAtual,_TDta] == MesAno(dDataRef)
					TPR->PR_TIPMOVI := _Trfe_Ent
				EndIf
				If lSalInc
					TPR->PR_SALINCO := SRA->RA_SALINCO
				EndIf
				MsUnlock()
				aTransf[nK1,nTrfProc,_TInc] := .T.
			EndIf
		Next nK2
	EndIf
Next nK1

#IFDEF TOP
	(cAliasSRA)->(dbCloseArea())
#ENDIF

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³ Cria_TPR	³ Autor ³ R.H. -				³ Data ³ 02.03.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Cria  Arquivo de Trabalho para impressao da provisao       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ CRIA_TPR(cTPRDbf,cTPRNtx,cIndCond)						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cTPRDbf  - Nome do arquivo de dados			  			  ³±±
±±³          ³ cTPRNtx  - Nome do arquivo de indice						  ³±±
±±³          ³ cIndCond - Chave do indice condicional					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
STATIC Function Cria_TPR(cTPRDbf,cTPRNtx,cIndCond)
Local aFields
Local aTamCC   := TamSX3("RA_CC")
Local aTamItem 
Local aTamClVl 

If lTemItem .and. lTemClVl
	aTamItem := TamSX3("RA_ITEM")
	aTamClVl := TamSX3("RA_CLVL")
Endif	

cTPRDBF := Subst(CriaTrab(NIL,.f.),1,7)+"B" // Evita criacao com mesmo nome
aFields := {}

AADD(aFields,{"PR_FILIAL" ,"C",02,0})
AADD(aFields,{"PR_MAT"    ,"C",06,0})
AADD(aFields,{"PR_CC"     ,"C",aTamCC[1],0})
AADD(aFields,{"PR_NOME"   ,"C",30,0})
AADD(aFields,{"PR_ADMISSA","D",08,0})
AADD(aFields,{"PR_DEMISSA","D",08,0})
AADD(aFields,{"PR_SITFOLH","C",01,0})
AADD(aFields,{"PR_AFASFGT","C",01,0})
AADD(aFields,{"PR_TPCONTR","C",01,0})
AADD(aFields,{"PR_HRSMES" ,"N",06,2})
AADD(aFields,{"PR_SALINCO","N",12,2})
AADD(aFields,{"PR_PERICUL","N",06,2})
AADD(aFields,{"PR_INSMIN" ,"N",06,2})
AADD(aFields,{"PR_INSMED" ,"N",06,2})
AADD(aFields,{"PR_INSMAX" ,"N",06,2})
AADD(aFields,{"PR_ADTPOSE","C",06,0})
AADD(aFields,{"PR_TIPMOVI","N",01,0})
//--Se existir item e classe cria os campos na tabela temporaria
If lTemItem .and. lTemClVl
	AADD(aFields,{"PR_ITEM"   ,"C",aTamItem[1],0})
	AADD(aFields,{"PR_CLVL"   ,"C",aTamClVl[1],0})
Endif
	

DbCreate(cTPRDbf,aFields)
DbUseArea(.T.,,cTPRDbf,"TPR",.F.)
cTPRNtx := Subst(CriaTrab(NIL,.f.),1,7)+"C"
IndRegua("TPR",cTPRNtx,cIndCond,,, STR0014)  //"Selecionando Registros..."

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³ fSeleTransf ³ Autor ³ Emerson R. de Souza³ Data ³ 17.09.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Seleciona Funcionarios Transferidos	no Mes			      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fSeleTransf(aTransf,dDataProvisao)						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ aTransf       = Array que contera os transferido do mes    ³±±
±±³          ³ dDataProvisao = Data Provisao P/ Selecao dos Transferidos  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	 	 ³ Generico   												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
STATIC Function fSeleTransf(aTransf, dDataProvisao)

Local aArqSRE    := {}
Local aTrfAux    := {}
Local nPosTrf    := 0
Local nPosArq    := 0
Local cAlias     := ALIAS()
Local cBusca     := ""
Local cAnoMesAux := ""
Local nSeqFor

cAnoMesR := MesAno(dDataProvisao)

dbSelectArea( "SRE" )
cIndCond:= "RE_DATA"
cFor:='Left(DTOS(RE_DATA),6) >= "'+cAnoMesR+'"'
cArqNtx1  := Subs(CriaTrab(NIL,.F.),1,7)+"A"
IndRegua("SRE",cArqNtx1,cIndCond,,cFor,STR0014)		//"Selecionando Registros..."
DbGoTop()
While ! Eof()
	cAnoMesAux := MesAno(SRE->RE_DATA)
	If SRE->RE_EMPD == cEmpAnt .And. SRE->RE_EMPP == cEmpAnt
		Aadd( aArqSRE, { { SRE->RE_EMPD, SRE->RE_FILIALD, SRE->RE_CCD, SRE->RE_MATD, cAnoMesAux, .F. },;
				          {           "", 			   "",           "",           "", 	       "", .F. },;
						  { SRE->RE_EMPP, SRE->RE_FILIALP, SRE->RE_CCP, SRE->RE_MATP, cAnoMesAux, .F. } } )
	EndIf
	dbSkip()
EndDo
dbSelectArea("SRE")
dbSetOrder(1)
RetIndex("SRE")
dbClearFilter()
fErase( cArqNtx1 + OrdBagExt() )

For nSeqFor := 1 To Len(aArqSRE)

	If !Empty( aArqSRE[nSeqFor,_TAnter,_TEmp] )

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Se a transferencia ocorreu no mes de calculo significa que o ³
		//³ funcionario esta ATUALMENTE no Centro de Custo Destino, caso ³
		//³ contrario, indica que foi processado no C. de Custo ORIGEM.  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Aadd( aTrfAux, { ACLONE(aArqSRE[nSeqFor,_TAnter]), If(aArqSRE[nSeqFor,_TAnter,_TDta] == cAnoMesR,;
					      ACLONE(aArqSRE[nSeqFor,_TDest]), ACLONE(aArqSRE[nSeqFor,_TAnter])), ACLONE(aArqSRE[nSeqFor,_TDest]) } )

		aArqSRE[nSeqFor,_TAnter] := { "", "", "", "", "", .F. } // Nao deve ser lido novamente
		nPosTrf ++
		While .T.
			cBusca  := aTrfAux[nPosTrf,_TDest,_TEmp]+aTrfAux[nPosTrf,_TDest,_TFil]+aTrfAux[nPosTrf,_TDest,_TCC]+aTrfAux[nPosTrf,_TDest,_TMat]
			nPosSre := Ascan( aArqSRE, { |X| X[_TAnter,_TEmp]+X[_TAnter,_TFil]+X[_TAnter,_TCC]+X[_TAnter,_TMat] == cBusca } )
			If nPosSre > 0
				If aArqSRE[nPosSre,_TAnter,_TDta] == cAnoMesR
					aTrfAux[nPosTrf,_TAtual] := ACLONE(aArqSRE[nPosSre,_TDest])
				EndIf
				aTrfAux[nPosTrf,_TDest]  := ACLONE(aArqSRE[nPosSre,_TDest])
				aArqSRE[nPosSre,_TAnter] := { "", "", "", "", "", .F. } // Nao deve ser lido novamente
			Else
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Se estiver fora do intervalo de impressao limpa matriz       ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If (( aTrfAux[nPosTrf,_TAtual,_TFil] < cFilDe .Or. aTrfAux[nPosTrf,_TAtual,_TFil] > cFilAte  ) .Or.;
				    ( aTrfAux[nPosTrf,_TAtual,_TCC]  < cCcDe  .Or. aTrfAux[nPosTrf,_TAtual,_TCC]  > cCcAte  )  .Or.;
				    ( aTrfAux[nPosTrf,_TAtual,_TMat] < cMatDe .Or. aTrfAux[nPosTrf,_TAtual,_TMat] > cMatAte ));
				    .And.;
					(( aTrfAux[nPosTrf,_TDest,_TFil] < cFilDe .Or. aTrfAux[nPosTrf,_TDest,_TFil] > cFilAte  ) .Or.;
				    ( aTrfAux[nPosTrf,_TDest,_TCC]  < cCcDe  .Or. aTrfAux[nPosTrf,_TDest,_TCC]  > cCcAte  )  .Or.;
				    ( aTrfAux[nPosTrf,_TDest,_TMat] < cMatDe .Or. aTrfAux[nPosTrf,_TDest,_TMat] > cMatAte ))
					 aTrfAux[nPosTrf,_TAnter] := { "", "", "", "", "", .F. }
				EndIf
				Exit
			EndIf
		EndDo
	EndIf
Next nSeqFor
Aeval(aTrfAux,{ |x| If(!Empty(x[_TAnter,_TMat]), Aadd( aTransf, { x[_TAnter], x[_TAtual], x[_TDest] } ), "") } )
dbSelectArea(cAlias)

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³ fConvSRF ³ Autor ³ Emerson Rosa de Souza ³ Data ³ 20.07.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Monta o arquivo SRT com o saldo anterior do SRF   		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fConvSRF()												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	 	 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fConvSRF()
Local aVenc,aProp,a13Sl,aProv,n1TerVen,n1TerPro,k,x
Local dDataAnt,dDataProv,cCCOk,cAnoMesProv,nAvos13
Local cTprDbf,cTprNtx
Local cAlias  := Alias()
Local lSalInc := .F.
Local nOrdem  := 1
Local nPerc1T := 0

Private aRoteiro := {}
Private aCodFol  := {}
Private aVerba   := {}

If Aviso( STR0015, STR0018+STR0019, { STR0016, STR0017 } ) # 1
	lAbortPrint := .T.
	Return
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se existem todos os identificadores da empresa atual|
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( "SM0" )
dbGoTop()
While !Eof()
	If SM0->M0_CODIGO == cEmpAnt

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Carrega aCodFol com os identificadores da folha				 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !Fp_CodFol(@aCodFol,SM0->M0_CODFIL)
			dbSelectArea( cAlias )
			lAbortPrint := .T.
			Return
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Carrega os identificadores da Provisao						 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		fIdentProv(@aVerba,aCodFol)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica a existencia dos identificadores da provisao ferias ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		fChkIdent(aVerba,_FerVenc,{_Atual,_BxFer,_BxTrf},.T.)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica a existencia dos identificadores da provisao 13 Sal ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		fChkIdent(aVerba,_13Salar,{_Atual,_Bx13o,_BxTrf},.T.)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Se gerou Ocorrencias aborta para apresentacao do LOG		 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If fAdicLog(aIdProvis,SM0->M0_CODFIL)
			dbSelectArea( cAlias )
			lAbortPrint := .T.
			Return
		EndIf

	EndIf
	dbSkip()
EndDo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para montagem do arquivo temporario   |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cNomeDe   := Space(30)
cNomeAte  := Replicate("z", 30)
cMatDe    := Space(6)
cMatAte   := Replicate("z", 06)
cCcDe     := Space(9)
cCCAte    := Replicate("z", 09)
cFilDe    := Space(2)
cFilAte   := "zz"
cCateg	  := "ACDEGHIJMPST"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta o arquivo temporario "TPR" a partir do SRA e SRE     |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Processa({|| fMonta_TPR(@cTPRDbf,@cTPRNtx,nOrdem,dDataBase,@lSalInc,,,,,.T.)},STR0001) // "Importacao do saldo anterior"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega regua de processamento							   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( "TPR" )
dbGoTop()
ProcRegua(RecCount())

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ano e Mes a ser utilizado caso nao encontre uma data valida³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dDataAnt := dDataBase - Day(dDataBase)

cFilialAnt := "!!"
While !Eof()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Se o funcionario nao existir no cadatro busca o proximo      |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea( "SRA" )
	If !dbSeek( TPR->PR_FILIAL + TPR->PR_MAT )
		dbSelectArea( "TPR" )
		dbSkip()
		Loop
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Se o funcionario nao existir na provisao busca o proximo     |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea( "SRF" )
	If !dbSeek( TPR->PR_FILIAL + TPR->PR_MAT ) .Or.;
	   ( Empty(SRF->RF_DATAA13) .And. Empty(SRF->RF_DATAATU) )
		dbSelectArea( "TPR" )
		dbSkip()
		Loop
	EndIf
	
	dbSelectArea( "TPR" )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Apresenta o Funcionario que esta sendo processado			 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    IncProc(TPR->PR_FILIAL+" - "+TPR->PR_MAT+" - "+TPR->PR_NOME)
                     
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Quebra filial para buscar as tabelas						 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If TPR->PR_FILIAL # cFilialAnt
		Fp_CodFol(@aCodFol,TPR->PR_FILIAL)
		dbSelectArea( "TPR" )
		cFilialAnt := TPR->PR_FILIAL
		PosSrv(aCodFol[77,1],TPR->PR_FILIAL)
		nPerc1T := SRV->RV_PERC
	Endif
		
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Carrega array com os campos que serao gravados no SRT        |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	n1TerVen := NoRound((SRF->RF_VPROVAT + SRF->RF_VADPVAT) * If(nPerc1T=0.00 .Or. nPerc1T=100.00, 1/3 ,nPerc1T / 100))
	n1TerPro := NoRound((SRF->RF_VPROAAT + SRF->RF_VADPAAT) * If(nPerc1T=0.00 .Or. nPerc1T=100.00, 1/3 ,nPerc1T / 100))
	aVenc := { { SRF->RF_VPROVAT, aCodFol[130,1] },;   // Provisao
			    { SRF->RF_VADPVAT, aCodFol[254,1] },;   // Adicionais
			    { n1TerVen,         aCodFol[255,1] },;   // Um Terco
			    { SRF->RF_VIAPVAT, aCodFol[131,1] },;   // INSS
   			    { SRF->RF_VFGTVAT, aCodFol[132,1] } }   // FGTS
	aProp := { { SRF->RF_VPROAAT, aCodFol[130,1] },;   // Provisao
			    { SRF->RF_VADPAAT, aCodFol[254,1] },;   // Adicionais
			    { n1TerPro,         aCodFol[255,1] },;  //  Um Terco
			    { SRF->RF_VIAPAAT, aCodFol[131,1] },;   // INSS
   			    { SRF->RF_VFGTAAT, aCodFol[132,1] } }   // FGTS
	a13Sl := { { SRF->RF_VPRDTAT, aCodFol[136,1] },;   // Provisao
			    { SRF->RF_TADDTAT, aCodFol[267,1] },;   // Adicionais
			    { SRF->RF_PAR13AT, aCodFol[268,1] },;   // Adiantamento da 1a Parcela
			    { SRF->RF_VINDTAT, aCodFol[137,1] },;   // INSS
			    { SRF->RF_VFGDTAT, aCodFol[138,1] } }   // FGTS
			    
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calcula Salario Incorporado 								 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    nSalario := nSalMes  := nSalHora := nSalDia := 0
	fSalInc(@nSalario,@nSalMes,@nSalHora,@nSalDia,.T.)
	nSalMes := If(lSalInc .And. SRA->RA_SALINCO > 0, SRA->RA_SALINCO, nSalMes)
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calcula os Avos de 13§ do Funcionario						 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nAvos13 := 0
	fAvos13(@nAvos13,SRF->RF_DATAA13,0)

	cAnoMesProv := "!!!!!!"	
	dbSelectArea( "SRT" )
	For k := 1 To 3
		aProv := If(k == 1, aVenc, If(k == 2, aProp, a13Sl))
		aProv := aSort(aProv,,,{|x,y| x[2] < y[2] })
		dDataProv := If(k==3,SRF->RF_DATAA13,SRF->RF_DATAATU)
		If !Empty(dDataProv)
			For x := 1 To Len(aProv)
				If aProv[x,1] > 0
					RecLock( "SRT", .T. )
					SRT->RT_FILIAL  := TPR->PR_FILIAL
					SRT->RT_MAT     := TPR->PR_MAT
					SRT->RT_CC      := TPR->PR_CC
					SRT->RT_DATACAL :=	dDataProv
					SRT->RT_TIPPROV := Str(k,1)        // 1-Venc  2-Prop  3-13§ Sal
					SRT->RT_VALOR   := aProv[x,1]
					SRT->RT_VERBA   := aProv[x,2]
					If MesAno(dDataProv) # cAnoMesProv
		  				SRT->RT_DATABAS := SRF->RF_DATABAS
	  					SRT->RT_DFERVEN := SRF->RF_DFERVAT
	  					SRT->RT_DFERPRO := SRF->RF_DFERAAT
	  					SRT->RT_DFERANT := SRF->RF_DFERANT
	  					SRT->RT_DFALVEN :=	SRF->RF_DFALVAT
						SRT->RT_DFALPRO :=	SRF->RF_DFALAAT
	  					SRT->RT_SALARIO := nSalMes
		  				SRT->RT_AVOS13S := nAvos13
	  					SRT->RT_TIPMOVI := TPR->PR_TIPMOVI  // (Congelado-Transferido-Demitido)
	  					cAnoMesProv      := MesAno(dDataProv)
					EndIf
					MsUnlock()
				EndIf
			Next x
		EndIf
	Next k
	dbSelectArea( "TPR" )
	dbSkip()
EndDo
dbSelectArea( cAlias )
TPR->(dbCloseArea())
fErase(cTPRNtx + OrdBagExt())
fErase(cTPRDbf + ".DBF")

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³fGpeProvis³ Autor ³ Emerson Rosa de Souza ³ Data ³ 10.08.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Cria constantes p/ utilizacao em GPEA070,GPER070 e GPEM070.³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ GpeProvisao(uPar1,uPar2,uPar3,nPar4,uPar5)				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	 	 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
STATIC Function GpeProvisao(uPar1,uPar2,uPar3,uPar4,uPar5)

uPar5 := If(uPar5 == Nil, 1, uPar5)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Indica o tipo de provisao (sera gravado no campo RT_TIPPROV) |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private _FerVenc  := 1  // Ferias Vencidas
Private _FerProp  := 2  // Ferias Proporcionais
Private _13Salar  := 3  // 13§ Salario
Private _14Salar  := 4  // 14§ Salario
           
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Indica a linha na ordem em que sera apresentada no relatorio |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private _Anter    := 01  // Mes Anterior
Private _Corre    := 02  // Correcao
Private _NoMes    := 03  // No Mes
Private _Atual    := 04  // Mes Atual
Private _BxTrf    := 05  // Baixa de Transferencia
Private _BxFer    := 06  // Baixa de Ferias
Private _Bx13o    := 06  // Baixa de 13o Salario
Private _Bx14o    := 06  // Baixa de 14o Salario
Private _BxRes    := 07  // Baixa de Rescisao
Private _TrfEnt   := 08  // Transferencia de Entrada
Private _TrfSai   := 09  // Transferencia de Saida
Private _BxTot    := 10  // Baixa Total

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Indica a coluna na ordem em que sera apresentada no relatorio|
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private _Dias     := 1  // Dias de Ferias
Private _Avos     := 1  // Avos de 13§ Salario
Private _Prov     := 2  // Valor da Provisao de Ferias ou Decimo Terceiro Salario
Private _Adic     := 3  // Adicionais
Private _1Ter     := 4  // Um Terco de Ferias
Private _1Par     := 4  // 1§ Parcela do 13§ Salario
Private _INSS     := 5  // INSS
Private _FGTS     := 6  // FGTS
Private _SalV	  := 7  // Media Salario Vac
Private _PIS      := 8  // PIS
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Constantes que definem o numero de linhas e colunas do array |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private _Linhas   := 10  // Quantidade de Linhas ou Elementos
Private _Colunas  := 08  // Quantidade de colunas para cada Linha ou Elemento

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Indica a posicao das informacoes de cabecalho em "aCabProv"  |   
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private _DatCalc  :=  1  // Data do calculo
Private _CentroC  :=  2  // Data do calculo
Private _DBsProv  :=  3  // Data base de ferias
Private _DFerVen  :=  4  // Dias de ferias vencidas
Private _DFerPro  :=  5  // Dias de ferias proporcionais
Private _DFerAnt  :=  6  // Dias de ferias antecipadas
Private _DFalVen  :=  7  // Dias de faltas vencidas
Private _DFalPro  :=  8  // Dias de faltas proporcionais
Private _MovProv  :=  9  // Movimentacao no mes
Private _SalProv  := 10  // Salario da provisao no mes
Private _Avos13S  := 11  // Avos de 13§ salario 
Private _PStatus  := 12  // Status (Ativo/Excluido)
Private _CItem	  := 13  // Item Contabil
Private _Clvl	  := 14  // Classe de Valor

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Indica os tipos de movimentacao do funcionario no mes        |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private _Demitido := 1  // Demitido
Private _Cong_Fer := 2  // Congelado Ferias
Private _Cong_13s := 3  // Congelado 13 Salario
Private _Cong_F13 := 4  // Congelado Ferias e 13 Salario
Private _Trfe_Sai := 5  // Transferencia Saida 
Private _Trfe_Ent := 6  // Transferencia Entrada

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Indica as posicoes dentro do array aTransf                   |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private _TAnter   := 1  // Centro de Custo Anterior
Private _TAtual   := 2  // Centro de Custo Atual
Private _TDest    := 3  // Centro de Custo Destino
Private _TEmp     := 1  // Empresa
Private _TFil     := 2  // Filial
Private _TCC      := 3  // Centro de Custo
Private _TMat     := 4  // Matricula
Private _TDta     := 5  // Data da Transferencia
Private _TInc     := 6  // Funcionario ja incluido no arquivo temporario

If uPar5 == 1 		// Cadastro
	gp070Atu(uPar1,uPar2,uPar3)
ElseIf uPar5 == 2  // Relatorio de Ferias
	RptStatus({|lEnd| GP070Imp(@lEnd,uPar1,uPar2)},uPar3)
ElseIf uPar5 == 3  // Relatorio de 13§ Salario
	RptStatus({|lEnd| GP090Imp(@lEnd,uPar1,uPar2)},uPar3)
ElseIf uPar5 == 4  // Calculo
	Processa({|| GPM070Processa()},uPar1,,.T.)
ElseIf uPar5 == 5  // Importacao do arquivo SRF para o novo SRT
    Processa({|| fConvSRF()},uPar1)
ElseIf uPar5 == 6  // Geracao de lancamentos contabeis da provisao no arquivo SRZ
    Processa({|| fGeraProvSRZ(uPar2)},uPar1)
ElseIf uPar5 == 7  // Processa a diferencas do calculo de provisa
	Processa({|| fProvProc()},uPar1)
EndIf

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³fChkDemit ³ Autor ³ Emerson Rosa de Souza ³ Data ³ 29.08.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Se nao existir identif. de rescisao,acerta posicao no array³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fChkDemit(aProvisao,aVerba,nTipoProv,nGravar,nZerar)       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	 	 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
STATIC Function fChkDemit(aProvisao,aVerba,nTipoProv,nGravar,nZerar)
Local aElem     := { _Prov, _Adic, _1Ter, _INSS, _FGTS, _PIS },nCnt
Local nProvBus  := If(nTipoProv == _FerProp,_FerVenc,nTipoProv)

If !fChkIdent(aVerba,nProvBus,{_BxRes},.F.)
   For nCnt := 1 To Len(aElem)
      aProvisao[nGravar,aElem[nCnt]] += aProvisao[nZerar,aElem[nCnt]]
      aProvisao[nZerar,aElem[nCnt]]  := 0
   Next nCnt
EndIf

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fChkProv()³ Autor ³ Equipe R.H.           ³ Data ³ 18/12/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Encontra diferencas entre dois meses na provisao			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
STATIC Function fChkProv()

nOrdem      := 2
cFilDe      := Space(2)
cFilAte     := "zz"
cCcDe       := Space(9)
cCcAte      := Replicate("z",09)
cMatDe      := Space(6)
cMatAte     := Replicate("z",06)
cNomeDe     := Space(30)
cNomeAte    := Replicate("z",30)
cCateg      := "ACDEGHIJMPST"

Private aCodFol   := {}
Private aLogFile  := {}
Private aLogTitle := {}

nTipProv  := 1
dDtRefIni := CTOD("")
dDtRefFim := CTOD("")

If fSeleProv(@nTipProv,@dDtRefIni,@dDtRefFim) == 0 .Or. Empty(dDtRefIni) .Or. Empty(dDtRefFim)
	Return
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega variaveis privates comuns a GPEA070,GPER070 e GPEM070|
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
GPEProvisao("PROCESSANDO DIFERENCAS - MESES " + Substr(DTOC(dDtRefIni),4,7)+;
            " E " + Substr(DTOC(dDtRefFim),4,7),,,,7)

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fProvProc ³ Autor ³ Equipe R.H.           ³ Data ³ 18/12/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Processa as diferencas entre dois meses na provisao		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Static Function fProvProc()
Local cDbfIni := cNtxIni := cDbfFim := cNtxFim := ""
Local lSalInc     := .F.
Local lTrataTrf   := .F.
Local aTransf     := {}
Local aProvAux    := {}
Local aFer13o     := {}
Local lAchou,lProvOk,nCnt,nValProv,nValTot,cTitulo,cIndCond

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta o arquivo temporario "TPRINI"  do mes inicial		   |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !File("TPRINI.DBF")
	Processa({ || fMonta_TPR(@cDbfIni,@cNtxIni,nOrdem,dDtRefIni,@lSalInc,@lTrataTrf,@aTransf,)},"GERANDO ARQUIVO DA PROVISAO - MES " + Substr(DTOC(dDtRefIni),4,7))
	dbSelectArea( "TPR" )
	dbCloseArea()
	DbUseArea(.T.,,cDbfIni,"TPRINI",.F.)
	dbSetIndex(cNtxIni+OrdBagExt())
Else
	DbUseArea(.T.,,"TPRINI","TPRINI",.F.)
	cIndCond := "PR_FILIAL + PR_CC + PR_MAT"
	cNtxIni  := Subst(CriaTrab(NIL,.f.),1,7)+"C"
	IndRegua("TPRINI",cNtxIni,cIndCond,,, "Selecionando Registros...")
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta o arquivo temporario "TPRFIM"  do mes Final		   |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !File("TPRFIM.DBF")
	Processa({ || fMonta_TPR(@cDbfFim,@cNtxFim,nOrdem,dDtRefFim,@lSalInc,@lTrataTrf,@aTransf,)},"GERANDO ARQUIVO DA PROVISAO - MES " + Substr(DTOC(dDtRefFim),4,7))
	dbSelectArea( "TPR" )
	dbCloseArea()
	DbUseArea(.T.,,cDbfFim,"TPRFIM",.F.)
	dbSetIndex(cNtxFim+OrdBagExt())
Else
	DbUseArea(.T.,,"TPRFIM","TPRFIM",.F.)
	cIndCond := "PR_FILIAL + PR_CC + PR_MAT"
	cNtxFim  := Subst(CriaTrab(NIL,.f.),1,7)+"C"
	IndRegua("TPRFIM",cNtxFim,cIndCond,,, "Selecionando Registros...")
EndIf

cFilialAnt := "!!"

dbSelectArea( "SRT" )
dbSetOrder(2)

dbSelectArea( "TPRINI" )
dbGoTop()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega Regua de Processamento						  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ProcRegua(RecCount())
While !Eof()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Movimenta Regua de Processamento							 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IncProc("Filial: " + TPRINI->PR_FILIAL+" - C.Custo: "+AllTrim(TPRINI->PR_CC)+" - Mat: "+TPRINI->PR_MAT)

	If TPRINI->PR_FILIAL # cFilialAnt
		If !Fp_CodFol(@aCodFol,TPRINI->PR_FILIAL)
			Exit
		Endif
		cFilialAnt := TPRINI->PR_FILIAL

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta array com o tipo de provisao a processar     		   |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aFer13o := {}
		If nTipProv == 1 .Or. nTipProv == 3
			aAdd( aFer13o, { "1", aCodFol[130,1] } )
		EndIf
		If nTipProv == 2 .Or. nTipProv == 3
			aAdd( aFer13o, { "3", aCodFol[136,1] } )
		EndIf

	EndIf

	For nCnt := 1 To Len(aFer13o)
		lProvOk   := .F.
		nValProv  := 0
		If aFer13o[nCnt,1] == "1"
			//Provisao de Ferias Vencidas
			If SRT->( dbSeek( TPRINI->PR_FILIAL+TPRINI->PR_CC+TPRINI->PR_MAT+DTOS(dDtRefIni)+"1"+aFer13o[nCnt,2] ) )
				nValProv += SRT->RT_VALOR
				lProvOk  := .T.
			EndIf
			//Provisao de Ferias Proporcionais
			If SRT->( dbSeek( TPRINI->PR_FILIAL+TPRINI->PR_CC+TPRINI->PR_MAT+DTOS(dDtRefIni)+"2"+aFer13o[nCnt,2] ) )
				nValProv += SRT->RT_VALOR
				lProvOk  := .T.
			EndIf
		Else 			                // Provisao de 13o Salario
			If SRT->( dbSeek( TPRINI->PR_FILIAL+TPRINI->PR_CC+TPRINI->PR_MAT+DTOS(dDtRefIni)+"3"+aFer13o[nCnt,2] ) )
				nValProv += SRT->RT_VALOR
				lProvOk  := .T.
			EndIf
		EndIf
		If lProvOk
			lAchou  := .T.
			If !TPRFIM->( dbSeek( TPRINI->PR_FILIAL+TPRINI->PR_CC+TPRINI->PR_MAT ) )
				If !(MesAno(TPRINI->PR_ADMISSA) == MesAno(dDtRefFim)) .Or.;
				   !(MesAno(TPRINI->PR_DEMISSA) == MesAno(dDtRefIni))
				   	lAchou := .F.
				EndIf
			Else
				If aFer13o[nCnt,1] == "1"
					//Provisao de Ferias Vencidas/Proporcionais
					If !(SRT->( dbSeek( TPRFIM->PR_FILIAL+TPRFIM->PR_CC+TPRFIM->PR_MAT+DTOS(dDtRefFim)+"1" ) )) .And.;
					   !(SRT->( dbSeek( TPRFIM->PR_FILIAL+TPRFIM->PR_CC+TPRFIM->PR_MAT+DTOS(dDtRefFim)+"2" ) ))
						lAchou := .F.
					EndIf
				Else
					//Provisao de 13o. Salario
					If !(SRT->( dbSeek( TPRFIM->PR_FILIAL+TPRFIM->PR_CC+TPRFIM->PR_MAT+DTOS(dDtRefFim)+"3" ) ))
						lAchou := .F.
					EndIf
				EndIf
			EndIf
			If !lAchou
				aAdd(aProvAux, { aFer13o[nCnt,1], nValProv,;
								 "Filial: "        + TPRINI->PR_FILIAL +;
							     " - C.Custo: "    + TPRINI->PR_CC +;
						         " - Mat: "        + TPRINI->PR_MAT+;
						         " - Admissao: "   + DTOC(TPRINI->PR_ADMISSA)+;
							     " - Demissao: "   + DTOC(TPRINI->PR_DEMISSA)+;
		   					     " - Valor: "      + Transform(nValProv,"@E 9,999,999.99") })
			EndIf
		EndIf
	Next nCnt
	dbSelectArea( "TPRINI" )
	dbSkip()
EndDo

aLogTitle := { "LOG DE OCORRENCIAS DO CALCULO DE PROVISOES - Entre os meses "+;
				Substr(DTOC(dDtRefIni),4,7) + " e " + Substr(DTOC(dDtRefFim),4,7) }
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta LOG da provisao de ferias 							 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nTipProv == 1 .Or. nTipProv == 3
	nValTot := 0
	Aeval( aProvAux, { |X| If(X[1] == "1", nValTot += X[2], "") })
	cTitulo := "PROVISAO DE FERIAS - VALOR DA DIFERENCA: " + LTRIM(Transform(nValTot,"@E 9,999,999.99"))
	aAdd(aLogFile, cTitulo)
	aAdd(aLogFile, Replicate("-", Len(cTitulo)))
	Aeval( aProvAux, { |X| If(X[1] == "1", aAdd( aLogFile, X[3]), "") })
	aAdd(aLogFile, "")
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta LOG da provisao de 13o Salario						 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nTipProv == 2 .Or. nTipProv == 3
	nValTot := 0
	Aeval( aProvAux, { |X| If(X[1] == "3", nValTot += X[2], "") })
	cTitulo := "PROVISAO DE 13o. SALARIO - VALOR DA DIFERENCA: " + LTRIM(Transform(nValTot,"@E 9,999,999.99"))
	aAdd(aLogFile, cTitulo)
	aAdd(aLogFile, Replicate("-", Len(cTitulo)))
	Aeval( aProvAux, { |X| If(X[1] == "3", aAdd( aLogFile, X[3]), "") })
	aAdd(aLogFile, "")
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica os registros perdidos do SRT               	   |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Processa({|| fProcSRT()},"PROCURANDO REGISTROS PERDIDOS NO SRT...")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Apresenta Tela com Log de erros								 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
fMakeLog( {aLogFile}, aLogTitle,, .T.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Deleta arquivos temporarios								   |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( "TPRINI" )
dbCloseArea()
fErase(cNtxIni + OrdBagExt())
fErase(cDbfIni + ".DBF")
dbSelectArea( "TPRFIM" )
dbCloseArea()
fErase(cNtxFim + OrdBagExt())
fErase(cDbfFim + ".DBF")

dbSelectArea( "SRT" )
dbSetOrder(1)

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ fProcSRT ³ Autor ³ Equipe R.H.           ³ Data ³ 26/10/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Verifica os registros perdidos no SRT                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Static Function fProcSRT()
Local cAlias   := ALIAS()
Local cTitPerd,cChavePerd

cTitPerd := "REGISTRO PERDIDOS ENCONTRADOS NO SRT - VERIFICAR CADA CASO"
aAdd(aLogFile, cTitPerd)
aAdd(aLogFile, Replicate("-", Len(cTitPerd)))

dbSelectArea( "SRT" )
dbSetOrder(1)

dbSelectArea( "TPRFIM" )
dbGoTop()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega Regua de Processamento						  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ProcRegua(RecCount())

While !Eof()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Movimenta Regua de Processamento							 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IncProc("Filial: " + TPRFIM->PR_FILIAL+" - C.Custo: "+AllTrim(TPRFIM->PR_CC)+" - Mat: "+TPRFIM->PR_MAT)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Busca funcionarios transferencia entrada no mes anterior, se ³
	//³ encontrados, deverao ser excluidos.                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If TPRFIM->PR_TIPMOVI == 6 // Transferencia Entrada
		cChavePerd := TPRFIM->PR_FILIAL+TPRFIM->PR_MAT+TPRFIM->PR_CC+Left(DTOS(dDtRefIni),6)
		dbSelectArea( "SRT" )
		If dbSeek( cChavePerd )
			While SRT->RT_FILIAL+SRT->RT_MAT+SRT->RT_CC+Left(DTOS(RT_DATACAL),6)==cChavePerd
				aAdd(aLogFile, 	 "Filial: "             + SRT->RT_FILIAL +;
							     " - C.Custo: "         + SRT->RT_CC +;
						         " - Mat: "             + SRT->RT_MAT+;
						         " - Dt.Calculo: "      + DTOC(SRT->RT_DATACAL)+;
	   						     " - Registro do SRT: " + Transform(RECNO(),"@E 9,999,999")+;
	   						     " - Provisao: "        + If(SRT->RT_TIPPROV $ "1*2", "FERIAS", "13.SAL")+;
   	   						     " - Verba: "           + Transform(SRT->RT_VERBA,"999")+;
   	   						     " - Valor: "           + Transform(SRT->RT_VALOR,"@E 9,999,999.99"))
		 		dbSkip()
			EndDo
		EndIf
	EndIf
	dbSelectArea( "TPRFIM" )
	dbSkip()
EndDo
dbSelectArea(cAlias)

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fSeleProv ³ Autor ³ Equipe R.H.           ³ Data ³ 26/10/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Monta dialogo para selecao com botoes de radio             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Static Function fSeleProv(nOpcRadio,dDatIni,dDatFim)
Local nOpcAux
Local oRadio
Local oDlg
Local oGroup
Local oFont

nOpcAux   := nOpcRadio
nOpcRadio := 0

DEFINE FONT oFont1  NAME "Arial" SIZE 0,-12 BOLD
DEFINE FONT oFont2  NAME "Arial" SIZE 0,-13

DEFINE MSDIALOG oDlg FROM  094,001 TO 255,415 TITLE OemToAnsi("Processar diferencas na provisao") PIXEL

@ 005,005 GROUP oGroup TO 060,080 LABEL OemToAnsi("Provisao") OF oDlg PIXEL COLOR CLR_BLUE
oGroup:SetFont(oFont1)

@ 005,090 GROUP oGroup TO 060,200 LABEL OemToAnsi("Data do calculo") OF oDlg PIXEL COLOR CLR_BLUE
oGroup:SetFont(oFont1)

@ 020,010 RADIO oRadio VAR nOpcAux ITEMS OemToAnsi("Ferias"), OemToAnsi("13o.Salario"),;
		  OemToAnsi("Ambas") SIZE 60,010 OF oDlg PIXEL

@ 020,095 SAY OemtoAnsi("Data Inicial: ") SIZE 50,10 OF oDlg PIXEL FONT oFont2 COLOR CLR_BLUE
@ 018,145 MSGET oDtCalIni VAR dDatIni VALID !Empty(dDatIni)  SIZE 40,10 OF oDlg PIXEL
@ 040,095 SAY OemtoAnsi("Data Final: ")   SIZE 50,10 OF oDlg   PIXEL FONT oFont2 COLOR CLR_BLUE
@ 038,145 MSGET oDtCalFim VAR dDatFim VALID !Empty(dDatFim)  SIZE 40,10 OF oDlg PIXEL

DEFINE SBUTTON FROM 065, 135 TYPE 1 ENABLE OF oDlg ACTION ( nOpcRadio := nOpcAux, oDlg:End() )
DEFINE SBUTTON FROM 065, 170 TYPE 2 ENABLE OF oDlg ACTION ( nOpcRadio := 0,       oDlg:End() )

ACTIVATE MSDIALOG oDlg CENTERED

Return nOpcRadio

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³ fAdicLog ³ Autor ³ Emerson Rosa de Souza ³ Data ³ 03.05.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Adiciona as ocorrencias do array aIdProvis no aLogFile	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fAdicLog(aIdProvis,cFilProc)                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	 	 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fAdicLog(aIdProvis,cFilProc)
Local lRet := .F.
Local nCnt,lPriVez
Local aIdObr,aIdNObr,cCondProv

//-- Testa a existencia do parametro MV_TRFAMES
//-- Esta situacao ocorre somente na importacao do saldo anterior.
If Type( "lTrfAMES" ) == "U"
	dDataRef	 := If( Type( "dDataRef" ) == "U" , dDataBase , dDataRef )
	cTrfAMES     := ( SuperGetMv( "MV_TRFAMES",, Space(6) ) ) //-- Ano/Mes para inicio das demonstracoes de entrada e saida de transferencias no conceito 1 (transfere saldo origem p/ destino)
	lTrfAMES     := ( !Empty(cTrfAMES) .And. MesAno( dDataRef ) >= cTrfAMES )
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verificar se existe ao menos um identificador nao cadastrado ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Ascan( aIdProvis, { |X| Empty(X[1]) }) > 0
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Adiciona aviso informando a filial cancelada.                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Aadd(aLogFile, { STR0020 + " [ " + cFilProc + " ] " + STR0021, "" } ) //"CALCULO DA FILIAL [ XX ] CANCELADO !!!"

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Definicao dos Identificadores Obrigatorios                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
   If cPaisLoc == "BRA"
		aIdObr  := { { _FerVenc, _Atual }, { _13Salar, _Atual }, { _14Salar, _Atual },;
			         { _FerVenc, _Corre }, { _13Salar, _Corre }, { _14Salar, _Corre },;
	   	     	     { _FerVenc, _BxFer }}
		If lTrfAMES
			AADD( aIdObr, { 0, _BxTrf } )
		EndIf
	Else
		aIdObr  := { { _FerVenc, _Atual }, { _13Salar, _Atual },{ _FerVenc, _Corre },;
					  { _13Salar, _Corre }, { _FerVenc, _BxFer }}
	Endif   	 	     

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Definicao dos Identificadores Nao Obrigatorios. O Zero indica³
	//³ que a baixa de transf. devera ser avaliada para Ferias/13o.  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cPaisLoc == "BRA"
		aIdNObr := { { 0, _BxTrf }, { _13Salar, _Bx13o }, { _14Salar, _Bx14o } }
	Else
		aIdNObr := { { 0, _BxTrf }, { _13Salar, _Bx13o }}
	Endif	

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Adiciona Identificadores Obrigatorios no LOG de ocorrencias  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lPriVez  := .T.
	For nCnt := 1 To Len(aIdObr)
		If Ascan( aIdProvis, { |X| If(aIdObr[nCnt,1]==0,.T.,X[3]==aIdObr[nCnt,1]) .And. X[4]==aIdObr[nCnt,2] .And. Empty(X[1])}) > 0
			If lPriVez
				Aadd(aLogFile[1], "" )
				Aadd(aLogFile[1], STR0022 )          //"Cadastrar a verba correspondente para cada um dos identificadores relacionados abaixo"
				Aadd(aLogFile[1], "" )
				If lTrfAMES
					Aadd(aLogFile[1], STR0026 )       //"Os identificadores de transferencia devem obrigatoriamente ser criados pois o parametro MV_TRFAMES esta habilitado"
					Aadd(aLogFile[1], "" )
				EndIf
				Aadd(aLogFile[1], "    " + STR0025 ) // "Verba   Ident   Descricao do Identificador"
				Aadd(aLogFile[1], "    -----   -----   --------------------------------------------------" )
				lPriVez  := .F.
			EndIf
			Aeval( aIdProvis, { |X| If( If(aIdObr[nCnt,1]==0,.T.,X[3]==aIdObr[nCnt,1]) .And. X[4]==aIdObr[nCnt,2] .And. Empty(X[1]),;
   				   Aadd( aLogFile[1],Space(4)+X[1]+Space(5)+X[2]+Space(5)+fDesc("SX5","35"+X[2],"X5DESCRI()",50)), "")})
		EndIf
	Next nCnt
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Identificadores nao obrigatorios, o usuario devera cadastrar ³
	//³ todos ou excluir todos, nao pode haver meio termo.      	 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lPriVez  := .T.
	For nCnt := 1 To Len(aIdNObr)
		If Ascan( aIdProvis, { |X| If(aIdNObr[nCnt,1]==0,.T.,X[3]==aIdNObr[nCnt,1]) .And. X[4]==aIdNObr[nCnt,2] .And.  Empty(X[1])}) > 0 .And.;
		   Ascan( aIdProvis, { |X| If(aIdNObr[nCnt,1]==0,.T.,X[3]==aIdNObr[nCnt,1]) .And. X[4]==aIdNObr[nCnt,2] .And. !Empty(X[1])}) > 0
			If lPriVez
				Aadd(aLogFile[1], "" )
				Aadd(aLogFile[1], STR0023 )          //"Para que seja efetuado o tratamento das baixas de transferencia, cadastre a verba correspondente para"
				Aadd(aLogFile[1], STR0024 )          //"cada identificador. Para que nao seja efetuado tratamento das baixas, exclua as verbas ja cadastradas."
				Aadd(aLogFile[1], "" )
				Aadd(aLogFile[1], "    " + STR0025 ) // "Verba   Ident   Descricao do Identificador"
				Aadd(aLogFile[1], "    -----   -----   --------------------------------------------------" )
				lPriVez := .F.
			EndIf
			Aeval( aIdProvis, { |X| If( If(aIdNObr[nCnt,1]==0,.T.,X[3]==aIdNObr[nCnt,1]) .And. X[4]==aIdNObr[nCnt,2],;
				   Aadd( aLogFile[1],Space(4)+X[1]+Space(5)+X[2]+Space(5)+fDesc("SX5","35"+X[2],"X5DESCRI()",50)), "")})
		EndIf
	Next nCnt
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Os dois primeiros elementos se referem ao subtitulo.         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Len(aLogFile[1]) > 2
		lRet := .T.
	Else
		aLogFile := {}
	EndIf
EndIf

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³ fQrySRD  ³ Autor ³ Ricardo Duarte Costa  ³ Data ³ 01.02.07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Executa query filtrando verbas de salario e adicionais.    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ vide abaixo                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	 	 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fQrySRD( cFilProc , cMatProc , cMesAnoProc )

Local nReg	:= 0

//-- Monta a query para selecao dos dados
If lFechouMes
	aStruSRD := SRD->(dbStruct())
	cWhere   := "SRD.RD_FILIAL = '"+cFilProc+"' AND SRD.RD_MAT = '"+cMatProc+"' AND "+;
				"( SRD.RD_PD = '"+aCodFol[318,1]+"' OR SRD.RD_PD = '"+aCodFol[671,1]+"' OR "+;
				"SRD.RD_PD = '"+aCodFol[672,1]+"' OR SRD.RD_PD = '"+aCodFol[673,1]+"' ) AND "+;
				"SRD.RD_DATARQ = '"+cMesAnoProc+"'"
	cWhere   := "%"+cWhere+"%"
	
	BeginSql alias cAliasPROC
		SELECT SRD.RD_FILIAL, SRD.RD_MAT, SRD.RD_PD, SRD.RD_DATARQ, SUM(SRD.RD_VALOR) AS RD_VALOR 
		FROM %table:SRD% SRD
		WHERE %exp:cWhere% AND SRD.%notDel% 
		GROUP BY RD_FILIAL, RD_MAT, RD_DATARQ, RD_PD
		ORDER BY RD_FILIAL, RD_MAT, RD_DATARQ, RD_PD
	EndSql
	
	//-- Ajusta a estrutura dos campos
	For nReg := 1 To Len(aStruSRD)
		If ( aStruSRD[nReg][2] <> "C" )
			TcSetField(cAliasPROC,aStruSRD[nReg][1],aStruSRD[nReg][2],aStruSRD[nReg][3],aStruSRD[nReg][4])
		EndIf
	Next nReg
Else	
	aStruSRC := SRC->(dbStruct())
	cWhere   := "SRC.RC_FILIAL = '"+cFilProc+"' AND SRC.RC_MAT = '"+cMatProc+"' AND "+;
				"( SRC.RC_PD = '"+aCodFol[318,1]+"' OR SRC.RC_PD = '"+aCodFol[671,1]+"' OR "+;
				"SRC.RC_PD = '"+aCodFol[672,1]+"' OR SRC.RC_PD = '"+aCodFol[673,1]+"' )"
	cWhere   := "%"+cWhere+"%"
	
	BeginSql alias cAliasPROC
		SELECT SRC.RC_FILIAL, SRC.RC_MAT, SRC.RC_PD, SUM(SRC.RC_VALOR) AS RC_VALOR 
		FROM %table:SRC% SRC
		WHERE %exp:cWhere% AND SRC.%notDel% 
		GROUP BY RC_FILIAL, RC_MAT, RC_PD
		ORDER BY RC_FILIAL, RC_MAT, RC_PD
	EndSql
	
	//-- Ajusta a estrutura dos campos
	For nReg := 1 To Len(aStruSRC)
		If ( aStruSRC[nReg][2] <> "C" )
			TcSetField(cAliasPROC,aStruSRC[nReg][1],aStruSRC[nReg][2],aStruSRC[nReg][3],aStruSRC[nReg][4])
		EndIf
	Next nReg
Endif	

return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³ fCarAdics³ Autor ³ Ricardo Duarte Costa  ³ Data ³ 04.04.07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Inicializa as variaveis de Adic.Tpo.Servico e Insalubridade³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ vide abaixo                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	 	 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fCarAdics()

Local cAdtPoSer	:= SRA->RA_ADTPOSER
Local cCod		:= Space(3)
Local nx		:= 0

//-- Tratamento do Adicional de Tempo de Servico
cAdtPoSer	:= alltrim(cAdtPoSer)
cAdtPoSer	:= strtran(cAdtPoSer,"*","")
For nx := 1 to len(cAdtPoSer)
   If Substr(cAdtPoSer,nx,1) == "A"
		cCodAdt := aCodfol[1,1]
	ElseIf Substr(cAdtPoSer,nx,1) == "B"
		cCodAdt := aCodfol[2,1]
	ElseIf Substr(cAdtPoSer,nx,1) == "T"
		cCodAdt := aCodfol[3,1]
	ElseIf Substr(cAdtPoSer,nx,1) == "D"
		cCodAdt := aCodfol[4,1]
	ElseIf Substr(cAdtPoSer,nx,1) == "Q"
		cCodAdt := aCodfol[5,1]
	EndIf
Next nx

//-- Tratamento da Insalubridade
// Insal. Minima
If SRA->RA_INSMIN > 0
	cCod   := aCodfol[37,1]
EndIf
// Insal. Media
If SRA->RA_INSMED > 0
	cCod   := aCodfol[38,1]
EndIf
// Insal. Maxima
If SRA->RA_INSMAX > 0
	cCod   := aCodfol[39,1]
EndIf
// Define o codigo da insalubridade utilizada pelo funcionario
If cCod # Space(3)
	cCodIns := cCod
Endif

Return
/* CONCEITOS UTILIZADOS NA PROVISAO

Transferencia
Conceito 1

Efetua a transferencia sem baixar o saldo origem, provisionando o destino a partir do saldo anterior

Conceito 2

Efetua a transferencia baixando o saldo do C.Custo origem e provisionando integralmente no C.Custo destino.



*/
